suar	ADJ(degree=-)
Geuallen	VRB(mood=part,tense=past,number=-)
was	VRB(mood=finite,tense=past,number=sg)
in	ADP
derre	PRN
wise	NOU(type=comm,number=sg)
Te	ADP
gode	NOU(type=comm,number=sg)
wert	ADP
uan	ADP
paradise	NOU(type=comm,number=sg)
Die	PRN
hare	PRN
altoes	ADV(type=-,degree=-)
wel+stont	ADV(type=-,degree=-)+VRB(mood=finite,tense=past,number=sg)
in	ADP
staden	NOU(type=comm,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
har	PRN
herte	NOU(type=comm,number=sg)
plach	VRB(mood=finite,tense=past,number=sg)
onladen	VRB(mood=inf,tense=-,number=-)
Van	ADP
sorgen	NOU(type=comm,number=pl)
ende	CON(type=coor)
uan	ADP
meswenden	NOU(type=comm,number=pl)
So	ADV(type=-,degree=-)
ginc	VRB(mood=finite,tense=past,number=sg)
si	PRN
haren	PRN
hope	NOU(type=comm,number=sg)
senden	VRB(mood=inf,tense=-,number=-)
Met	ADP
uaster	ADJ(degree=-)
trowen	NOU(type=comm,number=sg)
ende	CON(type=coor)
goeder	ADJ(degree=-)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
te	ADP
sire	PRN
suter	ADJ(degree=-)
moeder	NOU(type=comm,number=sg)
Marien	NOU(type=proper,number=-)
wert.	ADP
ende	CON(type=coor)
ene	PRN
bede	NOU(type=comm,number=sg)
Die	PRN
si	PRN
met	ADP
uasten	ADJ(degree=-)
hope	NOU(type=comm,number=sg)
dede	VRB(mood=finite,tense=past,number=sg)
Begonste	VRB(mood=finite,tense=past,number=sg)
si	PRN
op	ADP
enen	PRN
dach	NOU(type=comm,number=sg)
Daer	CON(type=sub)
si	PRN
in	ADP
kniegebede	NOU(type=comm,number=sg)
lach	VRB(mood=finite,tense=past,number=sg)
Si	PRN
seide	VRB(mood=finite,tense=past,number=sg)
got	NOU(type=comm,number=sg)
uan	ADP
hemelrike	NOU(type=comm,number=sg)
hier	RES(type=-)
begint	RES(type=-)
opnieuw	RES(type=-)
hand	RES(type=-)
A	RES(type=-)
Die	PRN
alle	PRN
dinc	NOU(type=comm,number=pl)
geweldelike	ADV(type=-,degree=-)
Volbrengen	VRB(mood=inf,tense=-,number=-)
mogt	VRB(mood=finite,tense=pres,number=sg)
wel	ADV(type=-,degree=-)
sute	ADJ(degree=-)
here	NOU(type=comm,number=sg)
Din	PRN
groten	ADJ(degree=-)
uaer	NOU(type=comm,number=sg)
die	PRN
mi	PRN
so	ADV(type=-,degree=-)
sere	ADV(type=-,degree=-)
Verladet	VRB(mood=finite,tense=pres,number=sg)
nu	ADV(type=-,degree=-)
dat	PRN
herte	NOU(type=comm,number=sg)
binnen	ADV(type=-,degree=-)
Din	PRN
moetti	PRN+VRB(mood=finite,tense=pres,number=sg)
here	NOU(type=comm,number=sg)
also	ADV(type=-,degree=-)
bekinnen	VRB(mood=inf,tense=-,number=-)
Dat	CON(type=sub)
ikker+af	ADV(type=-,degree=-)+PRN+PRN
ontcommert	ADJ(degree=-)
si	PRN
Wel	ADV(type=-,degree=-)
sute	ADJ(degree=-)
got	NOU(type=comm,number=sg)
nu	ADV(type=-,degree=-)
sendet	VRB(mood=finite,tense=pres,number=sg)
mi	PRN
Vwe	PRN
gracie	NOU(type=comm,number=sg)
die	PRN
mi	PRN
so	ADV(type=-,degree=-)
beuerde	VRB(mood=finite,tense=past,number=sg)
Dat	CON(type=sub)
ikker+af	ADV(type=-,degree=-)+PRN+PRN
ontladen	VRB(mood=part,tense=past,number=-)
werde	VRB(mood=finite,tense=past,number=sg)
Want	CON(type=sub)
uilic	PRN+VRB(mood=finite,tense=past,number=sg)
weder	ADV(type=-,degree=-)
in	ADP
den	PRN
pas	NOU(type=comm,number=sg)
Daer	ADV(type=-,degree=-)+PRN
ic	PRN
uerlegen	VRB(mood=part,tense=past,number=-)
binnen	ADV(type=-,degree=-)+PRN
was	VRB(mood=finite,tense=past,number=sg)
Te	ADP
minen	PRN
schaden	NOU(type=comm,number=sg)
wilen+eer	ADV(type=-,degree=-)
So	ADV(type=-,degree=-)
waric	PRN+VRB(mood=finite,tense=past,number=sg)
gonnert	VRB(mood=part,tense=past,number=-)
emmermeer	ADV(type=-,degree=-)
Wat	ADV(type=-,degree=-)
soude	VRB(mood=finite,tense=past,number=sg)
mijns	PRN
gewerden	VRB(mood=inf,tense=-,number=-)
dan	ADV(type=-,degree=-)
Genade	NOU(type=comm,number=sg)
got.	NOU(type=comm,number=sg)
want	CON(type=sub)
ine	ADV(type=-,degree=-)+PRN
can	VRB(mood=finite,tense=pres,number=sg)
Mi	PRN
seluen	PRN
wel	ADV(type=-,degree=-)
getrosten	VRB(mood=inf,tense=-,number=-)
nit	ADV(type=-,degree=-)
Op+dat	CON(type=sub)
die	PRN
dinc	NOU(type=comm,number=sg)
also	ADV(type=-,degree=-)
geschit	VRB(mood=finite,tense=pres,number=sg)
Alsic	CON(type=sub)+PRN
uersta.	VRB(mood=finite,tense=pres,number=sg)
want	CON(type=sub)
sonder	ADP
waen	NOU(type=comm,number=sg)
Dis	PRN
motic	PRN+VRB(mood=finite,tense=pres,number=sg)
emmer	ADV(type=-,degree=-)
schade	NOU(type=comm,number=sg)
ontfaen	VRB(mood=part,tense=past,number=-)
Wat	ADV(type=-,degree=-)
holpe	VRB(mood=finite,tense=past,number=sg)
dan	ADV(type=-,degree=-)
dat	CON(type=sub)
ic	PRN
te	ADP
milen	NOU(type=proper,number=-)
Om	ADP
dat	PRN
gemac	NOU(type=comm,number=sg)
uan	ADP
mire	PRN
silen	NOU(type=comm,number=sg)
Gelaten	VRB(mood=inf,tense=-,number=-)
hadde.	VRB(mood=finite,tense=past,number=sg)
ende	CON(type=coor)
elre	ADV(type=-,degree=-)
uonde	VRB(mood=finite,tense=past,number=sg)
Dat	PRN
selue.	PRN
dis	PRN
ic	PRN
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
conde	VRB(mood=finite,tense=past,number=sg)
Gedragen	VRB(mood=inf,tense=-,number=-)
sonder	ADP
schade	NOU(type=comm,number=sg)
groet	ADJ(degree=-)
Mar	CON(type=coor)
loesset	VRB(mood=finite,tense=pres,number=sg)
mi	PRN
ut	ADP
derre	PRN
noet	NOU(type=comm,number=sg)
Die	PRN
vwen	PRN
wille	NOU(type=comm,number=sg)
doet	VRB(mood=finite,tense=pres,number=sg)
algader	ADV(type=-,degree=-)
Dis	PRN
biddic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
wel	ADV(type=-,degree=-)
sute	ADJ(degree=-)
uader;	NOU(type=comm,number=sg)
Oc	ADV(type=-,degree=-)
biddic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
wel	ADV(type=-,degree=-)
sute	ADJ(degree=-)
urowe	NOU(type=comm,number=sg)
Daer	ADV(type=-,degree=-)+PRN
ic	PRN
altoes	ADV(type=-,degree=-)
in	ADV(type=-,degree=-)+PRN
uinde	VRB(mood=finite,tense=pres,number=sg)
trowe	NOU(type=comm,number=sg)
Die	PRN
maget	NOU(type=comm,number=sg)
ende	CON(type=coor)
moeder	NOU(type=comm,number=sg)
sijt	VRB(mood=finite,tense=pres,number=sg)
Ende	CON(type=coor)
emmermeer	ADV(type=-,degree=-)
gebenedijt	VRB(mood=part,tense=past,number=-)
Selt	VRB(mood=finite,tense=pres,number=sg)
wesen	VRB(mood=inf,tense=-,number=-)
in	ADP
den	PRN
hogen	ADJ(degree=-)
trone	NOU(type=comm,number=sg)
Daer	ADV(type=-,degree=-)
gi	PRN
met	ADP
gode	NOU(type=comm,number=sg)
spannet	VRB(mood=finite,tense=pres,number=sg)
crone	NOU(type=comm,number=sg)
Dat	CON(type=sub)
gi	PRN
beschowet	VRB(mood=finite,tense=pres,number=sg)
die	PRN
mesquame	NOU(type=comm,number=pl)
Dar	ADV(type=-,degree=-)+PRN
ic	PRN
af	ADV(type=-,degree=-)+PRN
boete	NOU(type=comm,number=sg)
gerne	ADV(type=-,degree=-)
name	VRB(mood=finite,tense=past,number=sg)
Dat	PRN
es	VRB(mood=finite,tense=pres,number=sg)
die	PRN
sorge	NOU(type=comm,number=sg)
die	PRN
mi	PRN
dert	VRB(mood=finite,tense=pres,number=sg)
Daer	ADV(type=-,degree=-)+PRN
ic	PRN
af	ADV(type=-,degree=-)+PRN
sere	ADV(type=-,degree=-)
ben	VRB(mood=finite,tense=pres,number=sg)
ueruert	ADJ(degree=-)
Want	CON(type=sub)
uilic	PRN+VRB(mood=finite,tense=past,number=sg)
weder	ADV(type=-,degree=-)
in	ADP
die	PRN
pine	NOU(type=comm,number=sg)
Daer	ADV(type=-,degree=-)+PRN
mi	PRN
uerwasset	VRB(mood=part,tense=past,number=-)
in	ADV(type=-,degree=-)+PRN
tesine	ADP+VRB(mood=inf,tense=-,number=-)
So	ADV(type=-,degree=-)
we	INT
mi	PRN
dan	ADV(type=-,degree=-)
dat	CON(type=sub)
ic	PRN
hir	ADV(type=-,degree=-)
quam	VRB(mood=finite,tense=past,number=sg)
Ende	CON(type=coor)
ic	PRN
die	PRN
kouele	NOU(type=comm,number=sg)
an+genam	VRB(mood=finite,tense=past,number=sg)
Daer	ADV(type=-,degree=-)+PRN
ic	PRN
uan	ADP
commere	NOU(type=comm,number=sg)
ende	CON(type=coor)
sorgen	NOU(type=comm,number=pl)
Altoes	ADV(type=-,degree=-)
in	ADV(type=-,degree=-)+PRN
waende	VRB(mood=finite,tense=past,number=sg)
sijn	VRB(mood=inf,tense=-,number=-)
uerborgen	VRB(mood=part,tense=past,number=-)
Want	CON(type=coor)
moet	VRB(mood=finite,tense=pres,number=sg)
die	PRN
dinc	NOU(type=comm,number=sg)
also	ADV(type=-,degree=-)
uolcomen	VRB(mood=inf,tense=-,number=-)
Alsic	CON(type=sub)+PRN
hir	ADV(type=-,degree=-)
hebbe	VRB(mood=finite,tense=pres,number=sg)
nu	ADV(type=-,degree=-)
uernomen	VRB(mood=part,tense=past,number=-)
So	ADV(type=-,degree=-)
motic	PRN+VRB(mood=finite,tense=pres,number=sg)
emmer	ADV(type=-,degree=-)
werden	VRB(mood=inf,tense=-,number=-)
suare	ADJ(degree=-)
Verladen	VRB(mood=part,tense=past,number=-)
meer	PRN
dan	CON(type=sub)
ochtic	CON(type=sub)+PRN
ware	VRB(mood=finite,tense=past,number=sg)
Te	ADP
milen	NOU(type=proper,number=-)
bleuen.	VRB(mood=part,tense=past,number=-)
urie	ADJ(degree=-)
maget	NOU(type=comm,number=sg)
Want	CON(type=coor)
igewelc	PRN
die	PRN
sorge	NOU(type=comm,number=sg)
draget	VRB(mood=finite,tense=pres,number=sg)
Van	ADP
eere	PRN
abdien.	NOU(type=comm,number=sg)
lange	ADV(type=-,degree=-)
in	ADP
pine	NOU(type=comm,number=sg)
So	ADV(type=-,degree=-)
staet	VRB(mood=finite,tense=pres,number=sg)
dengenen	PRN+PRN
wel	ADV(type=-,degree=-)
te	ADP
sine	VRB(mood=inf,tense=-,number=-)
Jn	ADP
langen	ADJ(degree=-)
commer	NOU(type=comm,number=sg)
ende	CON(type=coor)
in	ADP
leet	NOU(type=comm,number=sg)
Alsic	CON(type=sub)+PRN
wel	ADV(type=-,degree=-)
bi	ADP
mi	PRN
seluen	PRN
weet	VRB(mood=finite,tense=pres,number=sg)
Bi+din+dat	CON(type=sub)
ic	PRN
so	ADV(type=-,degree=-)
lange	ADV(type=-,degree=-)
droch	VRB(mood=finite,tense=past,number=sg)
Dat	PRN
prioraet	NOU(type=comm,number=sg)
dat	PRN
mi	PRN
uerwoch	VRB(mood=finite,tense=past,number=sg)
Beide	CON(type=coor)
alte	ADV(type=-,degree=-)+ADV(type=-,degree=-)
sere	ADV(type=-,degree=-)
ende	CON(type=coor)
al	ADV(type=-,degree=-)
te	ADP
suare	ADV(type=-,degree=-)
Bidie	CON(type=sub)
so	ADV(type=-,degree=-)
seggic	PRN+VRB(mood=finite,tense=pres,number=sg)
oppenbare	ADV(type=-,degree=-)
Dat	CON(type=sub)
ic	PRN
en	ADV(type=-,degree=-)
werde	VRB(mood=finite,tense=past,number=sg)
abdesse	NOU(type=comm,number=sg)
nit	ADV(type=-,degree=-)
So+wat+dat	PRN+PRN
mi	PRN
daer+na	ADV(type=-,degree=-)+PRN
geschit	VRB(mood=finite,tense=pres,number=sg)
Noch	CON(type=coor)
priorinne	NOU(type=comm,number=sg)
al	ADV(type=-,degree=-)
sonder	ADP
waen	NOU(type=comm,number=sg)
Magic	PRN+VRB(mood=finite,tense=pres,number=sg)
met	ADP
eeren	NOU(type=comm,number=sg)
dis	PRN
onstaen	VRB(mood=inf,tense=-,number=-)
Nu	ADV(type=-,degree=-)
hebbic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
die	PRN
noet	NOU(type=comm,number=sg)
geclaget	VRB(mood=part,tense=past,number=-)
Vrie+edele	ADJ(degree=-)
moeder	NOU(type=comm,number=sg)
ende	CON(type=coor)
maget	NOU(type=comm,number=sg)
Die	PRN
mi	PRN
verweget	VRB(mood=finite,tense=pres,number=sg)
nu	ADV(type=-,degree=-)
so	ADV(type=-,degree=-)
sere	ADV(type=-,degree=-)
Dis	PRN
biddic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
ende	CON(type=coor)
onsen	PRN
here	NOU(type=comm,number=sg)
Dats	PRN+VRB(mood=finite,tense=pres,number=sg)
ihesus	NOU(type=proper,number=-)
kerst	NOU(type=proper,number=-)
v	PRN
sone	NOU(type=comm,number=sg)
goet	ADJ(degree=-)
Dat	CON(type=sub)
gi	PRN
uerleenet	VRB(mood=finite,tense=pres,number=sg)
mi	PRN
din	PRN
spoet	NOU(type=comm,number=sg)
Ende	CON(type=coor)
vwe	PRN
gracie	NOU(type=comm,number=sg)
sendet	VRB(mood=finite,tense=pres,number=sg)
mede	ADV(type=-,degree=-)
Dat	CON(type=sub)
ic	PRN
in	ADP
dese	PRN
closterstede	NOU(type=comm,number=sg)
Daer	ADV(type=-,degree=-)+PRN
ic	PRN
in	ADV(type=-,degree=-)+PRN
drage	VRB(mood=finite,tense=pres,number=sg)
nu	ADV(type=-,degree=-)
abijt	NOU(type=comm,number=sg)
Noch	CON(type=coor)
elre.	ADV(type=-,degree=-)
want	CON(type=sub)
gi	PRN
mechtech	ADJ(degree=-)
sijt	VRB(mood=finite,tense=pres,number=sg)
Te	ADP
comene	VRB(mood=inf,tense=-,number=-)
alles	PRN
wel	ADV(type=-,degree=-)
teuoren	VRB(mood=inf,tense=-,number=-)
En	ADV(type=-,degree=-)
werdde	VRB(mood=finite,tense=pres,number=sg)
nemmermeer	ADV(type=-,degree=-)
gecoren	VRB(mood=part,tense=past,number=-)
Tabdessen	ADP+NOU(type=comm,number=sg)
noch	CON(type=coor)
te	ADP
priorinnen	NOU(type=comm,number=sg)
Mar	CON(type=coor)
dat	CON(type=sub)
ic	PRN
mote	VRB(mood=finite,tense=pres,number=sg)
urowe	NOU(type=comm,number=sg)
hir+binnen	ADV(type=-,degree=-)+PRN
Jn	ADP
eenechheiden	NOU(type=comm,number=sg)
so	ADV(type=-,degree=-)
geleuen	VRB(mood=inf,tense=-,number=-)
Dat	CON(type=sub)
ic	PRN
te+ijoncst	ADV(type=-,degree=-)
al	ADV(type=-,degree=-)
sonder	ADP
sneuen	NOU(type=comm,number=sg)
Te	ADP
meerre	PRN
baten	NOU(type=comm,number=sg)
ende	CON(type=coor)
uromen	NOU(type=comm,number=sg)
Te	ADP
goeden	ADJ(degree=-)
inde	NOU(type=comm,number=sg)
mote	VRB(mood=finite,tense=pres,number=sg)
comen	VRB(mood=inf,tense=-,number=-)
O.	INT
moder	NOU(type=comm,number=sg)
ende	CON(type=coor)
maget	NOU(type=comm,number=sg)
fijn	ADJ(degree=-)
Dis	PRN
moetti	PRN+VRB(mood=finite,tense=pres,number=sg)
mi	PRN
gehelpech	ADJ(degree=-)
sijn;	VRB(mood=finite,tense=pres,number=pl)
Eer	CON(type=sub)
dese	PRN
bede	NOU(type=comm,number=sg)
har	PRN
inde	NOU(type=comm,number=sg)
nam	VRB(mood=finite,tense=past,number=sg)
Al+daer	ADV(type=-,degree=-)
met	ADP
groten	ADJ(degree=-)
schine	NOU(type=comm,number=sg)
quam	VRB(mood=finite,tense=past,number=sg)
Geuaren+neder	VRB(mood=part,tense=past,number=-)
harde	ADV(type=-,degree=-)
lise	ADV(type=-,degree=-)
Die	PRN
urowe	NOU(type=comm,number=sg)
uan	ADP
din	PRN
paradise	NOU(type=comm,number=sg)
Die	PRN
moeder	NOU(type=comm,number=sg)
ende	CON(type=coor)
maget	NOU(type=comm,number=sg)
fijn	ADJ(degree=-)
Dat	PRN
nimene	PRN
el	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
mochte	VRB(mood=finite,tense=past,number=sg)
sijn	VRB(mood=inf,tense=-,number=-)
Bedaget	VRB(mood=part,tense=past,number=-)
noit	ADV(type=-,degree=-)
dan	CON(type=sub)
hare	PRN
allene	ADV(type=-,degree=-)
Die	PRN
was	VRB(mood=finite,tense=past,number=sg)
uan	ADP
alre	PRN
ulekken	NOU(type=comm,number=pl)
reene	ADJ(degree=-)
Die	PRN
sprac	VRB(mood=finite,tense=past,number=sg)
aldos	ADV(type=-,degree=-)
aldaer	ADV(type=-,degree=-)
si	PRN
stoet	VRB(mood=finite,tense=past,number=sg)
Lutgart	NOU(type=proper,number=-)
mine	PRN
utuercorne	ADJ(degree=-)
goet	ADJ(degree=-)
V.	PRN
clagen	NOU(type=comm,number=sg)
hebbic	PRN+VRB(mood=finite,tense=pres,number=sg)
wel	ADV(type=-,degree=-)
uernomen	VRB(mood=part,tense=past,number=-)
Dis	ADV(type=-,degree=-)
benic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
nu	ADV(type=-,degree=-)
trosten	VRB(mood=inf,tense=-,number=-)
comen	VRB(mood=inf,tense=-,number=-)
V.	PRN
clagen	NOU(type=comm,number=sg)
hebbic	PRN+VRB(mood=finite,tense=pres,number=sg)
wel	ADV(type=-,degree=-)
uerstaen	VRB(mood=inf,tense=-,number=-)
Oc	ADV(type=-,degree=-)
es	VRB(mood=finite,tense=pres,number=sg)
vwe	PRN
bede	NOU(type=comm,number=sg)
wale	ADV(type=-,degree=-)
ontfaen	VRB(mood=part,tense=past,number=-)
Dis	PRN
mogdi	PRN+VRB(mood=finite,tense=pres,number=sg)
mi	PRN
wel	ADV(type=-,degree=-)
weten	VRB(mood=inf,tense=-,number=-)
danc	NOU(type=comm,number=sg)
Want	CON(type=sub)
icse	PRN+PRN
ontfinc	VRB(mood=finite,tense=past,number=sg)
al	ADV(type=-,degree=-)
sonder	ADP
wanc	NOU(type=comm,number=sg)
Al	ADV(type=-,degree=-)
clagende	VRB(mood=part,tense=pres,number=-)
hebdi	PRN+VRB(mood=finite,tense=pres,number=sg)
dis	PRN
uerlijt	VRB(mood=finite,tense=pres,number=sg)
Dat	CON(type=sub)
gi	PRN
uerladen	VRB(mood=part,tense=past,number=-)
binnen	ADV(type=-,degree=-)
sijt	VRB(mood=finite,tense=pres,number=sg)
Van	ADP
groten	ADJ(degree=-)
sorgen	NOU(type=comm,number=pl)
die	PRN
v	PRN
deren	VRB(mood=finite,tense=pres,number=pl)
Ende	CON(type=coor)
v	PRN
dat	PRN
herte	NOU(type=comm,number=sg)
so	ADV(type=-,degree=-)
uerueren	VRB(mood=inf,tense=-,number=-)
Dat	CON(type=sub)
gi	PRN
ne	ADV(type=-,degree=-)
cont	VRB(mood=finite,tense=past,number=sg)
gehermen	VRB(mood=inf,tense=-,number=-)
nit	ADV(type=-,degree=-)
Want	CON(type=coor)
gi	PRN
din	PRN
wederual	NOU(type=comm,number=sg)
onssit	VRB(mood=finite,tense=pres,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
die	PRN
nose	NOU(type=comm,number=sg)
uan	ADP
ambachte	NOU(type=comm,number=sg)
Daer	ADV(type=-,degree=-)+PRN
men	PRN
v	PRN
weder	ADV(type=-,degree=-)
gerne	ADV(type=-,degree=-)
in	ADV(type=-,degree=-)+PRN
brachte	VRB(mood=finite,tense=past,number=sg)
Alse	CON(type=sub)
v	PRN
wel	ADV(type=-,degree=-)
cont	ADJ(degree=-)
gemaket	VRB(mood=part,tense=past,number=-)
es	VRB(mood=finite,tense=pres,number=sg)
Mar	CON(type=coor)
wel	ADV(type=-,degree=-)
lutgart	NOU(type=proper,number=-)
sijt	VRB(mood=finite,tense=pres,number=sg)
dis	PRN
gewes	ADJ(degree=-)
Dat	CON(type=sub)
ic	PRN
din	PRN
raet	NOU(type=comm,number=sg)
uan	ADP
derre	PRN
saken	NOU(type=comm,number=sg)
Met	ADP
mire	PRN
macht	NOU(type=comm,number=sg)
sal	VRB(mood=finite,tense=pres,number=sg)
wedermaken	VRB(mood=inf,tense=-,number=-)
So+dat	CON(type=sub)
v	PRN
nemermeer	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
sal	VRB(mood=finite,tense=pres,number=sg)
Tambachte	ADP+NOU(type=comm,number=sg)
wert	ADP
de	PRN
wederual	NOU(type=comm,number=sg)
Geschaden	VRB(mood=inf,tense=-,number=-)
mogen	VRB(mood=inf,tense=-,number=-)
noch	CON(type=coor)
geletten	VRB(mood=inf,tense=-,number=-)
Want	CON(type=coor)
ic	PRN
mi	PRN
sal	VRB(mood=finite,tense=pres,number=sg)
daer+iegen	ADV(type=-,degree=-)+PRN
setten	VRB(mood=finite,tense=past,number=pl)
Nu	ADV(type=-,degree=-)
sijt	VRB(mood=finite,tense=pres,number=sg)
in	ADP
hogen	NOU(type=comm,number=sg)
ende	CON(type=coor)
uro	ADJ(degree=-)
Dit	PRN
salic	PRN+VRB(mood=finite,tense=pres,number=sg)
wedermaken	VRB(mood=inf,tense=-,number=-)
so+Dat	CON(type=sub)
gi	PRN
ne	ADV(type=-,degree=-)
werdet	VRB(mood=finite,tense=pres,number=sg)
nemmermeer	ADV(type=-,degree=-)
Verladen	VRB(mood=part,tense=past,number=-)
daer	ADV(type=-,degree=-)+PRN
gi	PRN
wilen+eer	ADV(type=-,degree=-)
Te	ADP
milen	NOU(type=proper,number=-)
wart	VRB(mood=finite,tense=past,number=sg)
uerladen	VRB(mood=part,tense=past,number=-)
mede	ADV(type=-,degree=-)+PRN
Nu	ADV(type=-,degree=-)
houdt	VRB(mood=finite,tense=pres,number=sg)
v	PRN
herte	NOU(type=comm,number=sg)
in	ADP
goeden	ADJ(degree=-)
urede	NOU(type=comm,number=sg)
Dit	PRN
salic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
begaden	VRB(mood=inf,tense=-,number=-)
wale	ADV(type=-,degree=-)
Want	CON(type=coor)
ic	PRN
v	PRN
sal	VRB(mood=finite,tense=pres,number=sg)
die	PRN
walsche	ADJ(degree=-)
tale	NOU(type=comm,number=sg)
Ontdragen	VRB(mood=inf,tense=-,number=-)
so+dat	CON(type=sub)
gi	PRN
ne	ADV(type=-,degree=-)
selt	VRB(mood=finite,tense=pres,number=sg)
Noch	CON(type=coor)
macht	NOU(type=comm,number=sg)
gewinnen	VRB(mood=inf,tense=-,number=-)
noch	CON(type=coor)
gewelt	NOU(type=comm,number=sg)
Te	ADP
sprekene	VRB(mood=inf,tense=-,number=-)
it	PRN
met	ADP
walscher	ADJ(degree=-)
tongen	NOU(type=comm,number=sg)
Dos	ADV(type=-,degree=-)
seldi	PRN+VRB(mood=finite,tense=pres,number=sg)
bliuen	VRB(mood=inf,tense=-,number=-)
ongeduongen	ADJ(degree=-)
Van	ADP
vwen	PRN
mesterschape.	NOU(type=comm,number=sg)
want	CON(type=coor)
So+wanneer+dat	CON(type=sub)
men	PRN
it	ADV(type=-,degree=-)
dit	PRN
lant	NOU(type=comm,number=sg)
Vernemet	VRB(mood=finite,tense=pres,number=sg)
dat	CON(type=sub)
v	PRN
es	VRB(mood=finite,tense=pres,number=sg)
te	ADV(type=-,degree=-)
suaer	ADJ(degree=-)
Dat	PRN
walsch	NOU(type=comm,number=sg)
te	ADP
leerne.	VRB(mood=inf,tense=-,number=-)
al	ADV(type=-,degree=-)
ouer+waer	ADV(type=-,degree=-)
So	ADV(type=-,degree=-)
seggic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
dat	CON(type=sub)
v	PRN
uan	ADP
desen	PRN
En	ADV(type=-,degree=-)
sal	VRB(mood=finite,tense=pres,number=sg)
nemmeer	ADV(type=-,degree=-)
begrutet	VRB(mood=part,tense=past,number=-)
wesen	VRB(mood=inf,tense=-,number=-)
Dat	CON(type=sub)
gi	PRN
onttredet	VRB(mood=finite,tense=pres,number=sg)
nu	ADV(type=-,degree=-)
so	ADV(type=-,degree=-)
suare	ADJ(degree=-)
Want	CON(type=coor)
het	PRN
wel+staende	ADJ(degree=-)
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
ware	VRB(mood=finite,tense=past,number=sg)
Dat	CON(type=sub)
eene	PRN
abdesse	NOU(type=comm,number=sg)
maget	NOU(type=comm,number=sg)
fijn	ADJ(degree=-)
Jn	ADP
desen	PRN
lande	NOU(type=comm,number=sg)
soude	VRB(mood=finite,tense=past,number=sg)
sijn	VRB(mood=inf,tense=-,number=-)
Of	CON(type=sub)
hir	ADV(type=-,degree=-)
of	CON(type=sub)
elre	ADV(type=-,degree=-)
die	PRN
ne	ADV(type=-,degree=-)
conde	VRB(mood=finite,tense=past,number=sg)
Berechten	VRB(mood=inf,tense=-,number=-)
nit	ADV(type=-,degree=-)
met	ADP
haren	PRN
monde	NOU(type=comm,number=sg)
Din	PRN
closter	NOU(type=comm,number=sg)
din	PRN
si	PRN
soude	VRB(mood=finite,tense=past,number=sg)
rekken	VRB(mood=inf,tense=-,number=-)
Daer+omme	ADV(type=-,degree=-)+PRN
salic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
onttrekken	VRB(mood=inf,tense=-,number=-)
Ende	CON(type=coor)
ondergaen	VRB(mood=inf,tense=-,number=-)
die	PRN
walsche	ADJ(degree=-)
sprake	NOU(type=comm,number=sg)
So	ADV(type=-,degree=-)
seldi	PRN+VRB(mood=finite,tense=pres,number=sg)
leuen	VRB(mood=inf,tense=-,number=-)
met	ADP
gemake	NOU(type=comm,number=sg)
Voert+ane+meer	ADV(type=-,degree=-)
in	ADP
vwen	PRN
tide	NOU(type=comm,number=sg)
Nu	ADV(type=-,degree=-)
sijt	VRB(mood=finite,tense=pres,number=sg)
in	ADP
hogen	NOU(type=comm,number=sg)
ende	CON(type=coor)
blide	ADJ(degree=-)
Jc	PRN
sal	VRB(mood=finite,tense=pres,number=sg)
v	PRN
dit	PRN
so	ADV(type=-,degree=-)
wel	ADV(type=-,degree=-)
begaden	VRB(mood=inf,tense=-,number=-)
Dat	CON(type=sub)
gi	PRN
ne	ADV(type=-,degree=-)
werdet	VRB(mood=finite,tense=pres,number=sg)
meer	ADV(type=-,degree=-)
uerladen	VRB(mood=part,tense=past,number=-)
Met	ADP
besechheiden	NOU(type=comm,number=pl)
uan	ADP
ambachte	NOU(type=comm,number=sg)
Noch	CON(type=coor)
met	ADP
gewoude	NOU(type=comm,number=sg)
noch	CON(type=coor)
met	ADP
crachte	NOU(type=comm,number=sg)
Noch	CON(type=coor)
met	ADP
beduange	NOU(type=comm,number=sg)
uan	ADP
gebode	NOU(type=comm,number=sg)
Nu	ADV(type=-,degree=-)
bliuet	VRB(mood=finite,tense=pres,number=sg)
dan	ADV(type=-,degree=-)
lutgart	NOU(type=proper,number=-)
te	ADP
gode	NOU(type=comm,number=sg)
Jn	ADV(type=-,degree=-)+PRN
mach	VRB(mood=finite,tense=pres,number=sg)
hir	ADV(type=-,degree=-)
sijn	VRB(mood=finite,tense=pres,number=pl)
nit	ADV(type=-,degree=-)
langer	ADV(type=-,degree=-)
nu	ADV(type=-,degree=-)
Den	PRN
suten	ADJ(degree=-)
got	NOU(type=comm,number=sg)
beuelic	PRN+VRB(mood=finite,tense=pres,number=sg)
v;	PRN
Na	ADP
desen	PRN
warden	NOU(type=comm,number=pl)
denen	ADV(type=-,degree=-)
schit	VRB(mood=finite,tense=past,number=sg)
Die	PRN
godes	NOU(type=comm,number=sg)
moeder.	NOU(type=comm,number=sg)
ende	CON(type=coor)
lit	VRB(mood=finite,tense=past,number=sg)
Lutgarden	NOU(type=proper,number=-)
liggen	VRB(mood=inf,tense=-,number=-)
wel+getroestt	ADJ(degree=-)
Want	CON(type=coor)
sise	PRN+PRN
heuet	VRB(mood=finite,tense=pres,number=sg)
al	ADV(type=-,degree=-)
uerloestt	VRB(mood=part,tense=past,number=-)
Van	ADP
harre	PRN
commerliker	ADJ(degree=-)
smerten	NOU(type=comm,number=sg)
Dis	PRN
dankde	VRB(mood=finite,tense=past,number=sg)
si	PRN
met	ADP
blider	ADJ(degree=-)
herten	NOU(type=comm,number=sg)
Den	PRN
riken	ADJ(degree=-)
coninc	NOU(type=comm,number=sg)
uan	ADP
den	PRN
trone	NOU(type=comm,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
der	PRN
coninginnen	NOU(type=comm,number=sg)
schone	ADJ(degree=-)
Die	PRN
bouen	ADP
dingele	NOU(type=comm,number=pl)+PRN
es	VRB(mood=finite,tense=pres,number=sg)
uerheuen	VRB(mood=part,tense=past,number=-)
Dos	ADV(type=-,degree=-)
es	VRB(mood=finite,tense=pres,number=sg)
lutgart	NOU(type=proper,number=-)
getrostet	ADJ(degree=-)
bleuen	VRB(mood=part,tense=past,number=-)
Mar	CON(type=coor)
wildi	PRN+VRB(mood=finite,tense=pres,number=sg)
dat	CON(type=sub)
ic	PRN
v	PRN
bediede	VRB(mood=finite,tense=past,number=sg)
Groet	ADJ(degree=-)
wonder	NOU(type=comm,number=sg)
datter+na	ADV(type=-,degree=-)+CON(type=sub)+PRN
geschide	VRB(mood=finite,tense=past,number=sg)
Jc	PRN
saelt	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
seggen	VRB(mood=inf,tense=-,number=-)
of	CON(type=sub)
ic	PRN
can	VRB(mood=finite,tense=pres,number=sg)
Sent+dat	CON(type=sub)+CON(type=sub)
lutgart	NOU(type=proper,number=-)
din	PRN
troest	NOU(type=comm,number=sg)
gewan	VRB(mood=finite,tense=past,number=sg)
Van	ADP
onser	PRN
urowen	NOU(type=comm,number=sg)
die	PRN
se	PRN
lise	ADV(type=-,degree=-)
Vertrostet	VRB(mood=part,tense=past,number=-)
hadde	VRB(mood=finite,tense=past,number=sg)
in	ADP
derre	PRN
wise	NOU(type=comm,number=sg)
So	ADV(type=-,degree=-)
seggic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
al	ADV(type=-,degree=-)
sonder	ADP
waen	NOU(type=comm,number=sg)
Alse	CON(type=sub)
ons	PRN
die	PRN
uite	NOU(type=comm,number=sg)
doet	VRB(mood=finite,tense=pres,number=sg)
uerstaen	VRB(mood=inf,tense=-,number=-)
Dat	CON(type=sub)
si	PRN
in	ADP
ernste	NOU(type=comm,number=sg)
noch	CON(type=coor)
in	ADP
spele	NOU(type=comm,number=sg)
En	ADV(type=-,degree=-)
conste	VRB(mood=finite,tense=past,number=sg)
noit	ADV(type=-,degree=-)
sent	ADV(type=-,degree=-)
so	ADV(type=-,degree=-)
uele	PRN
Dis	PRN
walschs	NOU(type=comm,number=sg)
geleeren	VRB(mood=inf,tense=-,number=-)
noch	CON(type=coor)
uerhalen	VRB(mood=inf,tense=-,number=-)
Dat	CON(type=sub)
si	PRN
wel	ADV(type=-,degree=-)
hadde	VRB(mood=finite,tense=past,number=sg)
in	ADP
walscher	ADJ(degree=-)
talen	NOU(type=comm,number=sg)
Och	CON(type=coor)
broet	NOU(type=comm,number=sg)
genoemet	VRB(mood=part,tense=past,number=-)
ochte	CON(type=coor)
wijn	NOU(type=comm,number=sg)
Die	PRN
lichte	ADV(type=-,degree=-)
gnoch	ADV(type=-,degree=-)
genoemet	VRB(mood=part,tense=past,number=-)
sijn	VRB(mood=finite,tense=pres,number=pl)
Noch	CON(type=coor)
ander	ADJ(degree=-)
dinc	NOU(type=comm,number=sg)
och	CON(type=coor)
licht	ADJ(degree=-)
och	CON(type=coor)
suar	ADJ(degree=-)
Nochtan+dat	CON(type=sub)+CON(type=sub)
si	PRN
wel	ADV(type=-,degree=-)
.xl.	NUM(type=car)
ijar	NOU(type=comm,number=pl)
Gestadelic	ADV(type=-,degree=-)
och	CON(type=coor)
daer+omtrent	ADV(type=-,degree=-)+PRN
Taiwires	ADP+NOU(type=proper,number=-)
binnen	ADV(type=-,degree=-)
woende	VRB(mood=finite,tense=past,number=sg)
sent	ADV(type=-,degree=-)
Daer	ADV(type=-,degree=-)
si	PRN
uolleuede	VRB(mood=finite,tense=past,number=sg)
in	ADP
groten	ADJ(degree=-)
eeren	NOU(type=comm,number=sg)
Al	ADV(type=-,degree=-)
haren	PRN
tijt.	NOU(type=comm,number=sg)
al	ADV(type=-,degree=-)
sonder	ADP
leeren	NOU(type=comm,number=sg)
Dis	PRN
walsches	NOU(type=comm,number=sg)
it	PRN
nochtan+dat	CON(type=sub)+CON(type=sub)
si	PRN
Din	PRN
walschen	ADJ(degree=-)
nonnen	NOU(type=comm,number=pl)
was	VRB(mood=finite,tense=past,number=sg)
so	ADV(type=-,degree=-)
bi	ADP
Dat	CON(type=sub)
si	PRN
aldaer	ADV(type=-,degree=-)
dis	PRN
walsches	NOU(type=comm,number=sg)
gnoch	ADV(type=-,degree=-)
Hen	PRN
hoerde	VRB(mood=finite,tense=past,number=sg)
spreken	VRB(mood=inf,tense=-,number=-)
int	ADP+PRN
geuoch	NOU(type=comm,number=sg)
Wel	ADV(type=-,degree=-)
menechwerf	NOU(type=comm,number=pl)+PRN
op	ADP
elken	PRN
dach	NOU(type=comm,number=sg)
Mar	CON(type=coor)
alse	CON(type=sub)
men	PRN
daer+binnen	ADV(type=-,degree=-)+PRN
sach	VRB(mood=finite,tense=past,number=sg)
Dat	CON(type=sub)
si	PRN
ne	ADV(type=-,degree=-)
conde	VRB(mood=finite,tense=past,number=sg)
nit	ADV(type=-,degree=-)
ontfaen	VRB(mood=part,tense=past,number=-)
Jnt	ADP+PRN
herte	NOU(type=comm,number=sg)
binnen	ADV(type=-,degree=-)
noch	CON(type=coor)
uerstaen	VRB(mood=inf,tense=-,number=-)
Dis	PRN
walsches.	NOU(type=comm,number=sg)
noch	CON(type=coor)
gespreken	VRB(mood=inf,tense=-,number=-)
oc	ADV(type=-,degree=-)
Daer	ADV(type=-,degree=-)+PRN
si	PRN
wel	ADV(type=-,degree=-)
lettel	ADV(type=-,degree=-)
toe	ADV(type=-,degree=-)+PRN
ontploc	VRB(mood=finite,tense=past,number=sg)
Har	PRN
herte.	NOU(type=comm,number=sg)
alse	CON(type=sub)
omme	ADP
dat	PRN
onthouden	VRB(mood=inf,tense=-,number=-)
So	ADV(type=-,degree=-)
lit	VRB(mood=finite,tense=past,number=sg)
men	PRN
dis	PRN
al	ADV(type=-,degree=-)
gode	NOU(type=comm,number=sg)
wouden	VRB(mood=finite,tense=pres,number=pl)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
die	PRN
maget	NOU(type=comm,number=sg)
goedertiren	ADJ(degree=-)
Die	PRN
men	PRN
teuoren	ADV(type=-,degree=-)
plach	VRB(mood=finite,tense=past,number=sg)
uisiren	VRB(mood=inf,tense=-,number=-)
Tambachte.	ADP+NOU(type=comm,number=sg)
eer	CON(type=sub)
men	PRN
dis	PRN
wart	VRB(mood=finite,tense=past,number=sg)
geware	ADJ(degree=-)
Dat	CON(type=sub)
dit	PRN
gebreken	NOU(type=comm,number=sg)
was	VRB(mood=finite,tense=past,number=sg)
an	ADP
hare	PRN
Alsonder	ADP+ADV(type=-,degree=-)
suarheit	NOU(type=comm,number=sg)
uan	ADP
gebode	NOU(type=comm,number=sg)
Jn	ADP
haren	PRN
closter	NOU(type=comm,number=sg)
dinen	VRB(mood=inf,tense=-,number=-)
gode.	NOU(type=comm,number=sg)
Uan+din+dat	CON(type=sub)
se	PRN
onse	PRN
urowe	NOU(type=comm,number=sg)
hit	VRB(mood=finite,tense=past,number=sg)
uasten	VRB(mood=inf,tense=-,number=-)
.vij.	NUM(type=car)
ijar	NOU(type=comm,number=pl)
om	ADP
te	ADP
verwerne	VRB(mood=inf,tense=-,number=-)
der	PRN
godes	NOU(type=comm,number=sg)
wrake.	NOU(type=comm,number=sg)
.iij.	NUM(type=car)
Tin+tiden+dat	CON(type=sub)
die	PRN
aubeiose	NOU(type=comm,number=pl)
En	PRN
uolc	NOU(type=comm,number=sg)
uerwaten	ADJ(degree=-)
ende	CON(type=coor)
bose	ADJ(degree=-)
Ontcirden	VRB(mood=finite,tense=past,number=pl)
so	ADV(type=-,degree=-)
met	ADP
bosen	ADJ(degree=-)
werken	NOU(type=comm,number=pl)
Die	PRN
uriheit	NOU(type=comm,number=sg)
uan	ADP
der	PRN
godes	NOU(type=comm,number=sg)
kerken	NOU(type=comm,number=sg)
Dat	CON(type=sub)
mense	PRN+PRN
moste	VRB(mood=finite,tense=past,number=sg)
dor	ADP
die	PRN
noet	NOU(type=comm,number=sg)
Van	ADP
heresien.	NOU(type=comm,number=sg)
toter	ADP+PRN
doet	NOU(type=comm,number=sg)
Met	ADP
crachte	NOU(type=comm,number=sg)
brengen	VRB(mood=inf,tense=-,number=-)
ende	CON(type=coor)
ontliuen	VRB(mood=inf,tense=-,number=-)
Die	PRN
man	NOU(type=comm,number=pl)
gemeene	ADV(type=-,degree=-)
metten	ADP+PRN
wiuen	NOU(type=comm,number=pl)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
met	ADP
kinden	NOU(type=comm,number=pl)
ende	CON(type=coor)
met	ADP
craten	NOU(type=comm,number=pl)
Dat	CON(type=sub)
ijammer	NOU(type=comm,number=sg)
es	VRB(mood=finite,tense=pres,number=sg)
groet	ADJ(degree=-)
utermaten	ADV(type=-,degree=-)
Dat	CON(type=sub)
enech	PRN
mensche	NOU(type=comm,number=sg)
so	ADV(type=-,degree=-)
onssint	VRB(mood=finite,tense=pres,number=sg)
Sijn	PRN
leuen.	NOU(type=comm,number=sg)
dat	CON(type=sub)
hi	PRN
dis	PRN
uerdint	VRB(mood=finite,tense=pres,number=sg)
Dat	CON(type=sub)
menne	PRN+PRN
also	ADV(type=-,degree=-)
ontliuen	VRB(mood=inf,tense=-,number=-)
moet;	VRB(mood=finite,tense=pres,number=sg)
So	ADV(type=-,degree=-)
lach	VRB(mood=finite,tense=past,number=sg)
lutgart	NOU(type=proper,number=-)
die	PRN
maget	NOU(type=comm,number=sg)
goet	ADJ(degree=-)
Op	ADP
enen	PRN
dach	NOU(type=comm,number=sg)
Taiwires	ADP+NOU(type=proper,number=-)
binnen	ADV(type=-,degree=-)
de	RES(type=-)
rode	RES(type=-)
titel	RES(type=-)
is	RES(type=-)
van	RES(type=-)
hand	RES(type=-)
C	RES(type=-)
Ende	CON(type=coor)
ene	PRN
bede	NOU(type=comm,number=sg)
ginc	VRB(mood=finite,tense=past,number=sg)
beginnen	VRB(mood=inf,tense=-,number=-)
Te	ADP
gode	NOU(type=comm,number=sg)
wert	ADP
uan	ADP
hemelrike	NOU(type=comm,number=sg)
Die	PRN
si	PRN
uolbrachte	VRB(mood=finite,tense=past,number=sg)
salechlike	ADV(type=-,degree=-)
Te	ADP
goeden	ADJ(degree=-)
inde	NOU(type=comm,number=sg)
ic	PRN
seggu	PRN+VRB(mood=finite,tense=pres,number=sg)
hoe	ADV(type=-,degree=-)
Aldaer	ADV(type=-,degree=-)
si	PRN
was	VRB(mood=finite,tense=past,number=sg)
gelegen	VRB(mood=part,tense=past,number=-)
doe	ADV(type=-,degree=-)
Op	ADP
hare	PRN
knin	NOU(type=comm,number=pl)
ende	CON(type=coor)
har	PRN
gebet	NOU(type=comm,number=sg)
Begonste	VRB(mood=finite,tense=past,number=sg)
lise	ADV(type=-,degree=-)
aldaer	ADV(type=-,degree=-)
si	PRN
met	ADP
Onledech	ADJ(degree=-)
makde	VRB(mood=finite,tense=past,number=sg)
har	PRN
herte	NOU(type=comm,number=sg)
fijn	ADJ(degree=-)
So	ADV(type=-,degree=-)
quam	VRB(mood=finite,tense=past,number=sg)
geuaren	VRB(mood=part,tense=past,number=-)
sonder	ADP
schijn	NOU(type=comm,number=sg)
Jn	ADP
harde	ADV(type=-,degree=-)
serechliker	ADJ(degree=-)
wise	NOU(type=comm,number=sg)
Die	PRN
moeder	NOU(type=comm,number=sg)
gods	NOU(type=comm,number=sg)
uan	ADP
paradise	NOU(type=comm,number=sg)
Aldaer	ADV(type=-,degree=-)
die	PRN
maget	NOU(type=comm,number=sg)
was	VRB(mood=finite,tense=past,number=sg)
gelegen;	VRB(mood=part,tense=past,number=-)
Wel	ADV(type=-,degree=-)
harde	ADV(type=-,degree=-)
quam	VRB(mood=finite,tense=past,number=sg)
si	PRN
wederslegen	VRB(mood=part,tense=past,number=-)
No	CON(type=coor)
min	ADV(type=-,degree=-)
no	CON(type=coor)
meer	PRN
dan	CON(type=sub)
och	CON(type=coor)
si	PRN
suare	ADJ(degree=-)
Beuaen	VRB(mood=part,tense=past,number=-)
met	ADP
serechheiden	NOU(type=comm,number=sg)
ware	VRB(mood=finite,tense=past,number=sg)
Dat	CON(type=sub)
togede	VRB(mood=finite,tense=past,number=sg)
oc	ADV(type=-,degree=-)
wel	ADV(type=-,degree=-)
har	PRN
abijt	NOU(type=comm,number=sg)
Din	PRN
noit	ADV(type=-,degree=-)
eer	ADV(type=-,degree=-)
op	ADP
enen	PRN
tijt	NOU(type=comm,number=sg)
En	ADV(type=-,degree=-)
sach	VRB(mood=finite,tense=past,number=sg)
die	PRN
maget	NOU(type=comm,number=sg)
so	ADV(type=-,degree=-)
onschoent	ADJ(degree=-)
Oc	ADV(type=-,degree=-)
heft	VRB(mood=finite,tense=pres,number=sg)
dat	PRN
selue	PRN
wel	ADV(type=-,degree=-)
getoent	VRB(mood=part,tense=past,number=-)
Har	PRN
utuercorne	ADJ(degree=-)
schone	ADJ(degree=-)
anschin	NOU(type=comm,number=sg)
Dat	CON(type=sub)
ongelic	NOU(type=comm,number=sg)
was	VRB(mood=finite,tense=past,number=sg)
worden	VRB(mood=part,tense=past,number=-)
din	PRN
Dat	CON(type=sub)
het	PRN
teuoren	ADV(type=-,degree=-)
plach	VRB(mood=finite,tense=past,number=sg)
tesine	ADP+VRB(mood=inf,tense=-,number=-)
Want	CON(type=coor)
dat	PRN
teuoren	ADV(type=-,degree=-)
so	ADV(type=-,degree=-)
met	ADP
schine	NOU(type=comm,number=sg)
Verlichtet	VRB(mood=part,tense=past,number=-)
was.	VRB(mood=finite,tense=past,number=sg)
dat	CON(type=sub)
sijt	PRN+PRN
beschowen	VRB(mood=inf,tense=-,number=-)
En	ADV(type=-,degree=-)
conde	VRB(mood=finite,tense=past,number=sg)
nit.	ADV(type=-,degree=-)
dat	PRN
was	VRB(mood=finite,tense=past,number=sg)
teblowen	VRB(mood=part,tense=past,number=-)
Van	ADP
serechheiden	NOU(type=comm,number=sg)
ende	CON(type=coor)
bleec	ADJ(degree=-)
So+dat	CON(type=sub)
het	PRN
lettelgoet	ADV(type=-,degree=-)
geleec	VRB(mood=finite,tense=past,number=sg)
Din	PRN
seluen	PRN
dat	PRN
het	PRN
was	VRB(mood=finite,tense=past,number=sg)
teuoren	ADV(type=-,degree=-)
Want	CON(type=coor)
sine	PRN
schonheit	NOU(type=comm,number=sg)
was	VRB(mood=finite,tense=past,number=sg)
uerloren	VRB(mood=part,tense=past,number=-)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
sijn	PRN
scoen	ADJ(degree=-)
licht	NOU(type=comm,number=sg)
ende	CON(type=coor)
claer	ADJ(degree=-)
Dos	ADV(type=-,degree=-)
quam	VRB(mood=finite,tense=past,number=sg)
die	PRN
godes	NOU(type=comm,number=sg)
moeder	NOU(type=comm,number=sg)
daer;	ADV(type=-,degree=-)
Nu	ADV(type=-,degree=-)
hort	VRB(mood=finite,tense=pres,number=sg)
wis	ADV(type=-,degree=-)+PRN
daer	ADV(type=-,degree=-)
geplogen	VRB(mood=part,tense=past,number=-)
was	VRB(mood=finite,tense=past,number=sg)
Aldaer	ADV(type=-,degree=-)
lutgart	NOU(type=proper,number=-)
lach	VRB(mood=finite,tense=past,number=sg)
ende	CON(type=coor)
las	VRB(mood=finite,tense=past,number=sg)
Heft	VRB(mood=finite,tense=pres,number=sg)
si	PRN
har	PRN
houet	NOU(type=comm,number=sg)
op+geheuen	VRB(mood=part,tense=past,number=-)
Ende	CON(type=coor)
enen	PRN
groten	ADJ(degree=-)
crijt	NOU(type=comm,number=sg)
gegeuen	VRB(mood=part,tense=past,number=-)
Do	CON(type=sub)
si	PRN
die	PRN
godes	NOU(type=comm,number=sg)
moeder	NOU(type=comm,number=sg)
staen	VRB(mood=inf,tense=-,number=-)
Daer	ADV(type=-,degree=-)
sach	VRB(mood=finite,tense=past,number=sg)
so	ADV(type=-,degree=-)
bleec	ADJ(degree=-)
ende	CON(type=coor)
ongedaen	ADJ(degree=-)
Daer+na	ADV(type=-,degree=-)+PRN
so	ADV(type=-,degree=-)
rip	VRB(mood=finite,tense=past,number=sg)
si	PRN
lude	ADV(type=-,degree=-)
owi	INT
Wel	ADV(type=-,degree=-)
sute	ADJ(degree=-)
maget	NOU(type=comm,number=sg)
en	ADV(type=-,degree=-)
si	VRB(mood=finite,tense=pres,number=sg)
di	PRN
Die	PRN
godes	NOU(type=comm,number=sg)
moeder	NOU(type=comm,number=sg)
onse	PRN
urowe	NOU(type=comm,number=sg)
Warumme	ADV(type=-,degree=-)
gi	PRN
dos	ADV(type=-,degree=-)
sijt	VRB(mood=finite,tense=pres,number=sg)
met	ADP
rowe	NOU(type=comm,number=sg)
Beuaen.	VRB(mood=part,tense=past,number=-)
ende	CON(type=coor)
oc	ADV(type=-,degree=-)
met	ADP
groten	ADJ(degree=-)
sere	NOU(type=comm,number=sg)
Dis	PRN
biddic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
dor	ADP
onsen	PRN
here	NOU(type=comm,number=sg)
Dat	CON(type=sub)
gi	PRN
mi	PRN
segget	VRB(mood=finite,tense=pres,number=sg)
altehant	ADV(type=-,degree=-)
Al	ADV(type=-,degree=-)
sonder	ADP
alle	PRN
beide.	NOU(type=comm,number=sg)
want	CON(type=coor)
Dat	PRN
motic	PRN+VRB(mood=finite,tense=pres,number=sg)
emmer	ADV(type=-,degree=-)
weten	VRB(mood=inf,tense=-,number=-)
nu	ADV(type=-,degree=-)
Want	CON(type=coor)
sosgedaen	ADJ(degree=-)
en	ADV(type=-,degree=-)
sagic	PRN+VRB(mood=finite,tense=past,number=sg)
v	PRN
Hir+uoren	ADV(type=-,degree=-)+PRN
noit	ADV(type=-,degree=-)
in	ADP
minen	PRN
dagen	NOU(type=comm,number=pl)
Noch	CON(type=coor)
sosgedane	ADJ(degree=-)
cleder	NOU(type=comm,number=pl)
dragen	VRB(mood=inf,tense=-,number=-)
Dit	PRN
dunket	VRB(mood=finite,tense=pres,number=sg)
mi	PRN
uan	ADP
ongemake	NOU(type=comm,number=sg)
En	PRN
teeken.	NOU(type=comm,number=sg)
want	CON(type=coor)
het	PRN
sonder	ADP
sake	NOU(type=comm,number=sg)
En	ADV(type=-,degree=-)
es	VRB(mood=finite,tense=pres,number=sg)
nit	ADV(type=-,degree=-)
dat	CON(type=sub)
gi	PRN
droeue	ADJ(degree=-)
sijt	VRB(mood=finite,tense=pres,number=sg)
Noch	CON(type=coor)
dat	CON(type=sub)
so	ADV(type=-,degree=-)
schir	ADJ(degree=-)
es	VRB(mood=finite,tense=pres,number=sg)
v	PRN
abijt	NOU(type=comm,number=sg)
Die	PRN
wilen	ADV(type=-,degree=-)
clarre	ADV(type=-,degree=-)
dan	CON(type=sub)
die	PRN
dach	NOU(type=comm,number=sg)
Van	ADP
somertide	NOU(type=comm,number=sg)
schinen	VRB(mood=inf,tense=-,number=-)
plach	VRB(mood=finite,tense=past,number=sg)
Nu	ADV(type=-,degree=-)
segget	VRB(mood=finite,tense=pres,number=sg)
mi	PRN
dan	ADV(type=-,degree=-)
maget	NOU(type=comm,number=sg)
rene	ADJ(degree=-)
Die	PRN
bouen	ADP
alle	PRN
magde	NOU(type=comm,number=pl)
allene	ADV(type=-,degree=-)
Ter	ADP+PRN
godes	NOU(type=comm,number=sg)
moeder	NOU(type=comm,number=sg)
wort	VRB(mood=finite,tense=pres,number=sg)
uercoren	VRB(mood=part,tense=past,number=-)
Gelijc+dat	CON(type=sub)
lange	ADV(type=-,degree=-)
daer+teuoren	ADV(type=-,degree=-)+PRN
Van	ADP
v	PRN
die	PRN
prophecien	NOU(type=comm,number=pl)
spraken	VRB(mood=finite,tense=past,number=pl)
Wat	ADV(type=-,degree=-)
v	PRN
mescomt.	VRB(mood=finite,tense=pres,number=sg)
ende	CON(type=coor)
om	ADP
wat	ADV(type=-,degree=-)
saken	NOU(type=comm,number=pl)
Gi	PRN
schinet	VRB(mood=finite,tense=pres,number=sg)
nu	ADV(type=-,degree=-)
te	ADP
desen	PRN
tide	NOU(type=comm,number=sg)
Van	ADP
serechheiden	NOU(type=comm,number=sg)
dos	ADV(type=-,degree=-)
omblide	ADJ(degree=-)
Dat	PRN
motic	PRN+VRB(mood=finite,tense=pres,number=sg)
weten	VRB(mood=inf,tense=-,number=-)
sonder	ADP
beide	NOU(type=comm,number=sg)
Tehant.	ADV(type=-,degree=-)
want	CON(type=coor)
vwe	PRN
serechheide	NOU(type=comm,number=sg)
Oc	ADV(type=-,degree=-)
nu	ADV(type=-,degree=-)
tewilen	ADP+NOU(type=comm,number=sg)
minen	PRN
moet	NOU(type=comm,number=sg)
Jn	ADP
serechheiden	NOU(type=comm,number=sg)
wesen	VRB(mood=inf,tense=-,number=-)
doet	VRB(mood=finite,tense=pres,number=sg)
Want	CON(type=coor)
sonder	ADP
seer	NOU(type=comm,number=sg)
ic	PRN
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
can	VRB(mood=finite,tense=pres,number=sg)
V.	PRN
urowe	NOU(type=comm,number=sg)
mijn.	PRN
beschowen+an;	VRB(mood=inf,tense=-,number=-)
Antwerde	NOU(type=comm,number=sg)
met	ADP
gestaden	ADJ(degree=-)
sinne	NOU(type=comm,number=sg)
So	ADV(type=-,degree=-)
gaf	VRB(mood=finite,tense=past,number=sg)
die	PRN
hogste	ADJ(degree=-)
coninginne	NOU(type=comm,number=sg)
Lutgarden	NOU(type=proper,number=-)
weder	ADV(type=-,degree=-)
hastelike	ADV(type=-,degree=-)
Lutgart	NOU(type=proper,number=-)
al	CON(type=sub)
sta	VRB(mood=finite,tense=pres,number=sg)
ic	PRN
serechlike	ADV(type=-,degree=-)
Sprac	VRB(mood=finite,tense=past,number=sg)
si.	PRN
en	ADV(type=-,degree=-)
hebbets	PRN+VRB(mood=finite,tense=pres,number=sg)
wonder	NOU(type=comm,number=sg)
nit	ADV(type=-,degree=-)
Mar	CON(type=coor)
selue	PRN
merket	VRB(mood=finite,tense=pres,number=sg)
ende	CON(type=coor)
sit	VRB(mood=finite,tense=pres,number=sg)
Hoe	ADV(type=-,degree=-)
men	PRN
noch	ADV(type=-,degree=-)
sleet.	VRB(mood=finite,tense=pres,number=sg)
hoe	ADV(type=-,degree=-)
men	PRN
trainet	VRB(mood=finite,tense=pres,number=sg)
Hoe	ADV(type=-,degree=-)
men	PRN
noch	ADV(type=-,degree=-)
gheecelt	VRB(mood=finite,tense=pres,number=sg)
ende	CON(type=coor)
pinet	VRB(mood=finite,tense=pres,number=sg)
Din	PRN
werdeliken	ADJ(degree=-)
sone	NOU(type=comm,number=sg)
mijn.	PRN
En	ADV(type=-,degree=-)
soudic	PRN+VRB(mood=finite,tense=past,number=sg)
dan	ADV(type=-,degree=-)
nic	ADV(type=-,degree=-)
droeue	ADJ(degree=-)
sijn	VRB(mood=inf,tense=-,number=-)
Daer	ADV(type=-,degree=-)
ic	PRN
mijn	PRN
werde	ADJ(degree=-)
kint	NOU(type=comm,number=sg)
sie	VRB(mood=finite,tense=pres,number=sg)
bluen	VRB(mood=inf,tense=-,number=-)
Dos	ADV(type=-,degree=-)
laidangiren.	VRB(mood=inf,tense=-,number=-)
dos	ADV(type=-,degree=-)
uerspuen	VRB(mood=inf,tense=-,number=-)
Ende	CON(type=coor)
alle	PRN
dage	NOU(type=comm,number=pl)
noch	ADV(type=-,degree=-)
met	ADP
sonden	NOU(type=comm,number=pl)
Hem	PRN
sie	VRB(mood=finite,tense=pres,number=sg)
uerniwen	VRB(mood=inf,tense=-,number=-)
sine	PRN
wonden	NOU(type=comm,number=pl)
Wat	ADV(type=-,degree=-)
wondre	NOU(type=comm,number=sg)
dan	ADV(type=-,degree=-)
al	CON(type=sub)
hebbic	PRN+VRB(mood=finite,tense=pres,number=sg)
rowe	NOU(type=comm,number=sg)
Alsic	CON(type=sub)+PRN
dese	PRN
ouerdaet	NOU(type=comm,number=sg)
beschowe	VRB(mood=finite,tense=pres,number=sg)
Mar	CON(type=coor)
wildi	PRN+VRB(mood=finite,tense=pres,number=sg)
dat	CON(type=sub)
ic	PRN
v	PRN
bedide	VRB(mood=finite,tense=past,number=sg)
Lutgart.	NOU(type=proper,number=-)
welc	PRN
sijn	VRB(mood=finite,tense=pres,number=pl)
die	PRN
domme	ADJ(degree=-)
liede	NOU(type=comm,number=pl)
onder	RES(type=-)
aan	RES(type=-)
de	RES(type=-)
bladzijde,	RES(type=-)
hand	RES(type=-)
D:	RES(type=-)
oc	ADV(type=-,degree=-)
nu	ADV(type=-,degree=-)
te	ADP
wilen	NOU(type=comm,number=sg)
lees	RES(type=-)
nit	ADV(type=-,degree=-)
Die	PRN
dorren	VRB(mood=finite,tense=pres,number=pl)
maken	VRB(mood=finite,tense=pres,number=pl)
selke	PRN
nose	NOU(type=comm,number=sg)
Dos	ADV(type=-,degree=-)
groet.	ADJ(degree=-)
dat	PRN
sijn	VRB(mood=finite,tense=pres,number=pl)
die	PRN
aubeiose	NOU(type=comm,number=pl)
Die	PRN
felle	ADJ(degree=-)
menschen.	NOU(type=comm,number=pl)
die	PRN
quadien	NOU(type=comm,number=pl)
Die	PRN
met	ADP
geproeueder	ADJ(degree=-)
heresien	NOU(type=comm,number=sg)
Der	PRN
kerken	NOU(type=comm,number=sg)
uriheit	NOU(type=comm,number=sg)
so	ADV(type=-,degree=-)
onssetten	VRB(mood=finite,tense=pres,number=pl)
Dat	CON(type=sub)
si	PRN
die	PRN
werelt	NOU(type=comm,number=sg)
al	ADV(type=-,degree=-)
besmetten	VRB(mood=finite,tense=pres,number=pl)
Met	ADP
haren	PRN
sondeliken	ADJ(degree=-)
daden	NOU(type=comm,number=pl)
Daer	ADV(type=-,degree=-)+PRN
si	PRN
die	PRN
goede	NOU(type=comm,number=pl)
met	ADV(type=-,degree=-)+PRN
uerladen	VRB(mood=finite,tense=pres,number=pl)
Die	PRN
hare	PRN
boesheit	NOU(type=comm,number=sg)
hebben	VRB(mood=finite,tense=pres,number=pl)
leet	NOU(type=comm,number=sg)
Mar	CON(type=coor)
ouer+waer	ADV(type=-,degree=-)
ic	PRN
wale	ADV(type=-,degree=-)
weet	VRB(mood=finite,tense=pres,number=sg)
Oc	ADV(type=-,degree=-)
seggict	PRN+PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
al	ADV(type=-,degree=-)
oppenbare	ADV(type=-,degree=-)
Dat	CON(type=sub)
al	ADV(type=-,degree=-)
die	PRN
werelt	NOU(type=comm,number=sg)
harde	ADV(type=-,degree=-)
suare	ADV(type=-,degree=-)
Ontgelden	VRB(mood=inf,tense=-,number=-)
sal	VRB(mood=finite,tense=pres,number=sg)
in	ADP
corten	ADJ(degree=-)
tiden	NOU(type=comm,number=sg)
Dat	CON(type=sub)
hen	PRN
die	PRN
domme	ADJ(degree=-)
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
miden	VRB(mood=finite,tense=pres,number=pl)
Der	PRN
boesheit.	NOU(type=comm,number=sg)
mar	CON(type=coor)
in	ADP
sonden	NOU(type=comm,number=sg)
leuen	VRB(mood=finite,tense=pres,number=pl)
Want	CON(type=coor)
die	PRN
sententie	NOU(type=comm,number=sg)
es	VRB(mood=finite,tense=pres,number=sg)
gegeuen	VRB(mood=part,tense=past,number=-)
Van	ADP
din	PRN
gerechten	ADJ(degree=-)
sone	NOU(type=comm,number=sg)
mijn	PRN
Dat	CON(type=sub)
emmer	ADV(type=-,degree=-)
moet	VRB(mood=finite,tense=pres,number=sg)
geplaget	VRB(mood=part,tense=past,number=-)
sijn	VRB(mood=inf,tense=-,number=-)
Met	ADP
ere	PRN
ijammerliker	ADJ(degree=-)
plagen	NOU(type=comm,number=sg)
Die	PRN
werelt	NOU(type=comm,number=sg)
al	ADV(type=-,degree=-)
in	ADP
corten	ADJ(degree=-)
dagen	NOU(type=comm,number=pl)
Dat	CON(type=sub)
elken	PRN
liggen	VRB(mood=inf,tense=-,number=-)
sal	VRB(mood=finite,tense=pres,number=sg)
te	ADV(type=-,degree=-)
na	ADP
Hen+si	ADV(type=-,degree=-)+PRN+VRB(mood=finite,tense=pres,number=sg)
dat	CON(type=sub)
mense	PRN+PRN
wedersta;	VRB(mood=finite,tense=pres,number=sg)
Mar	CON(type=coor)
gi	PRN
die	PRN
got	NOU(type=comm,number=sg)
die	PRN
melde	ADJ(degree=-)
uader	NOU(type=comm,number=sg)
Die	PRN
sine	PRN
wille	NOU(type=comm,number=sg)
doet	VRB(mood=finite,tense=pres,number=sg)
algader	ADV(type=-,degree=-)
Jn	ADP
hemele	NOU(type=comm,number=sg)
ende	CON(type=coor)
in	ADP
erterike	NOU(type=comm,number=sg)
So	ADV(type=-,degree=-)
minnet.	VRB(mood=finite,tense=pres,number=sg)
dat	CON(type=sub)
hi	PRN
meldelike	ADV(type=-,degree=-)
V.	PRN
geuet	VRB(mood=finite,tense=pres,number=sg)
al	ADV(type=-,degree=-)
dat	PRN
gi	PRN
begert	VRB(mood=finite,tense=pres,number=sg)
Lutgart.	NOU(type=proper,number=-)
bi	ADP
v	PRN
moet	VRB(mood=finite,tense=pres,number=sg)
sijn	VRB(mood=inf,tense=-,number=-)
uerwert	VRB(mood=part,tense=past,number=-)
Die	PRN
plage	NOU(type=comm,number=sg)
suaer	ADJ(degree=-)
ende	CON(type=coor)
ongeroe	ADJ(degree=-)
Nu	ADV(type=-,degree=-)
hort	VRB(mood=finite,tense=pres,number=sg)
ic	PRN
sal	VRB(mood=finite,tense=pres,number=sg)
v	PRN
seggen	VRB(mood=inf,tense=-,number=-)
hoe	ADV(type=-,degree=-)
Ghi	PRN
selt	VRB(mood=finite,tense=pres,number=sg)
gaen	VRB(mood=inf,tense=-,number=-)
uasten	VRB(mood=inf,tense=-,number=-)
.vij.	NUM(type=car)
ijar	NOU(type=comm,number=pl)
Dat	CON(type=sub)
sal	VRB(mood=finite,tense=pres,number=sg)
v	PRN
moten	VRB(mood=inf,tense=-,number=-)
wesen	VRB(mood=inf,tense=-,number=-)
suar	ADJ(degree=-)
Te	ADP
brengene+ouer	VRB(mood=inf,tense=-,number=-)
maget	NOU(type=comm,number=sg)
goet	ADJ(degree=-)
Mar	CON(type=coor)
sider+dat	CON(type=sub)
het	PRN
wesen	VRB(mood=inf,tense=-,number=-)
moet	VRB(mood=finite,tense=pres,number=sg)
So	ADV(type=-,degree=-)
onderstaedt	PRN+VRB(mood=finite,tense=pres,number=sg)
so	ADV(type=-,degree=-)
cloftechlike	ADV(type=-,degree=-)
Dat	CON(type=sub)
het	PRN
teijoncst	ADV(type=-,degree=-)
in	ADP
hemelrike	NOU(type=comm,number=sg)
Met	ADP
uromen	NOU(type=comm,number=sg)
mote	VRB(mood=finite,tense=pres,number=sg)
v	PRN
sijn	VRB(mood=inf,tense=-,number=-)
uergouden	VRB(mood=part,tense=past,number=-)
Nu	ADV(type=-,degree=-)
laett	VRB(mood=finite,tense=pres,number=sg)
dan	ADV(type=-,degree=-)
alles	ADV(type=-,degree=-)
gode	NOU(type=comm,number=sg)
wouden	VRB(mood=finite,tense=past,number=pl)
Ende	CON(type=coor)
onderstaet	VRB(mood=finite,tense=pres,number=sg)
dat	PRN
ic	PRN
v	PRN
wise	VRB(mood=finite,tense=pres,number=sg)
Lutgart	NOU(type=proper,number=-)
dos	ADV(type=-,degree=-)
seldi	PRN+VRB(mood=finite,tense=pres,number=sg)
mogen	VRB(mood=inf,tense=-,number=-)
lise	ADV(type=-,degree=-)
Met	ADP
vwer	PRN
pinen	NOU(type=comm,number=sg)
wedermaken	VRB(mood=inf,tense=-,number=-)
Die	PRN
suarheit	NOU(type=comm,number=sg)
uan	ADP
der	PRN
godes	NOU(type=comm,number=sg)
wraken;	NOU(type=comm,number=sg)
Dit	PRN
salic	PRN+VRB(mood=finite,tense=pres,number=sg)
urowe	NOU(type=comm,number=sg)
doen	VRB(mood=inf,tense=-,number=-)
wel	ADV(type=-,degree=-)
gerne,	ADV(type=-,degree=-)
Want	CON(type=coor)
nit	ADV(type=-,degree=-)
nes	ADV(type=-,degree=-)+VRB(mood=finite,tense=pres,number=sg)
recht	NOU(type=comm,number=sg)
dat	CON(type=sub)
ics	PRN+PRN
it	PRN
werne,	VRB(mood=finite,tense=pres,number=sg)
Doe	ADV(type=-,degree=-)
weder	ADV(type=-,degree=-)
sprac	VRB(mood=finite,tense=past,number=sg)
die	PRN
maget	NOU(type=comm,number=sg)
saen	ADV(type=-,degree=-)
Wel	ADV(type=-,degree=-)
gerne	ADV(type=-,degree=-)
salic	PRN+VRB(mood=finite,tense=pres,number=sg)
onderstaen	VRB(mood=inf,tense=-,number=-)
Dit	PRN
vasten	NOU(type=comm,number=sg)
dat	PRN
gi	PRN
mi	PRN
gebiedet	VRB(mood=finite,tense=pres,number=sg)
Want	CON(type=coor)
gire	ADV(type=-,degree=-)+PRN+PRN
mi	PRN
toe	ADV(type=-,degree=-)+PRN
hebt	VRB(mood=finite,tense=pres,number=sg)
gemiedet	VRB(mood=part,tense=past,number=-)
Wel	ADV(type=-,degree=-)
menech	PRN
werf	NOU(type=comm,number=sg)
in	ADP
minen	PRN
tide	NOU(type=comm,number=sg)
Mettin+dat	CON(type=sub)
gi	PRN
mi	PRN
dikke	ADV(type=-,degree=-)
blide	ADJ(degree=-)
Gemaket	VRB(mood=part,tense=past,number=-)
hebt.	VRB(mood=finite,tense=pres,number=sg)
ende	CON(type=coor)
oc	ADV(type=-,degree=-)
gegeuen	VRB(mood=part,tense=past,number=-)
Daer	ADV(type=-,degree=-)+PRN
ic	PRN
ben	VRB(mood=finite,tense=pres,number=sg)
met	ADV(type=-,degree=-)+PRN
terasten	ADP+NOU(type=comm,number=sg)
bleuen	VRB(mood=part,tense=past,number=-)
Troest	NOU(type=comm,number=sg)
uan	ADP
mesquame	NOU(type=comm,number=sg)
clene	ADJ(degree=-)
of	CON(type=sub)
groet	ADJ(degree=-)
Mar	CON(type=coor)
sent+dat	CON(type=sub)+CON(type=sub)
eischet	VRB(mood=finite,tense=pres,number=sg)
nu	ADV(type=-,degree=-)
die	PRN
noet	NOU(type=comm,number=sg)
Dat	CON(type=sub)
ic	PRN
moet	VRB(mood=finite,tense=pres,number=sg)
uasten	VRB(mood=inf,tense=-,number=-)
.vij.	NUM(type=car)
ijar	NOU(type=comm,number=pl)
Dat	CON(type=sub)
gi	PRN
ter	ADP+PRN
pinen	NOU(type=comm,number=pl)
die	PRN
ic	PRN
suar	ADJ(degree=-)
Sal	VRB(mood=finite,tense=pres,number=sg)
moten	VRB(mood=inf,tense=-,number=-)
doegen	VRB(mood=inf,tense=-,number=-)
urowe	NOU(type=comm,number=sg)
goet	ADJ(degree=-)
Verleenet	VRB(mood=finite,tense=pres,number=sg)
mi	PRN
so	ADV(type=-,degree=-)
goeden	ADJ(degree=-)
spoet	NOU(type=comm,number=sg)
Dis	PRN
biddic	PRN+VRB(mood=finite,tense=pres,number=sg)
v.	PRN
dat	CON(type=sub)
gi	PRN
teuromen	ADP+NOU(type=comm,number=sg)
Hen	PRN
allen	PRN
urowe	NOU(type=comm,number=sg)
mote	VRB(mood=finite,tense=pres,number=sg)
comen	VRB(mood=inf,tense=-,number=-)
Daer	ADV(type=-,degree=-)+PRN
ic	PRN
dit	PRN
uasten	NOU(type=comm,number=sg)
ouer	ADV(type=-,degree=-)+PRN
sal	VRB(mood=finite,tense=pres,number=sg)
Bestaen.	VRB(mood=inf,tense=-,number=-)
ende	CON(type=coor)
oc	ADV(type=-,degree=-)
der	PRN
werelt	NOU(type=comm,number=sg)
al;	ADV(type=-,degree=-)
Dit	PRN
salic	PRN+VRB(mood=finite,tense=pres,number=sg)
doen.	VRB(mood=inf,tense=-,number=-)
die	PRN
urowe	NOU(type=comm,number=sg)
seide	VRB(mood=finite,tense=past,number=sg)
Dos	ADV(type=-,degree=-)
schit	VRB(mood=finite,tense=past,number=sg)
si	PRN
denen	ADV(type=-,degree=-)
sonder	ADP
beide	NOU(type=comm,number=sg)
Ende	CON(type=coor)
es	VRB(mood=finite,tense=pres,number=sg)
te	ADP
hemele	NOU(type=comm,number=sg)
wert	ADP
geuaren	VRB(mood=part,tense=past,number=-)
Doe	ADV(type=-,degree=-)
ginc	VRB(mood=finite,tense=past,number=sg)
lutgart	NOU(type=proper,number=-)
al	ADV(type=-,degree=-)
sonder	ADP
sparen	NOU(type=comm,number=sg)
Dat	PRN
lange	ADJ(degree=-)
uasten	NOU(type=comm,number=sg)
onderstaen	VRB(mood=inf,tense=-,number=-)
Dat	PRN
si	PRN
te	ADP
dragene	VRB(mood=inf,tense=-,number=-)
hadde	VRB(mood=finite,tense=past,number=sg)
ontfaen	VRB(mood=part,tense=past,number=-)
Si	PRN
uastede	VRB(mood=finite,tense=past,number=sg)
al	ADV(type=-,degree=-)
die	PRN
dage	NOU(type=comm,number=sg)
lanc	ADJ(degree=-)
Getrowelic	ADV(type=-,degree=-)
al	ADV(type=-,degree=-)
sonder	ADP
wanc	NOU(type=comm,number=sg)
So+dat	CON(type=sub)
si	PRN
noit	ADV(type=-,degree=-)
dach	NOU(type=comm,number=sg)
en	ADV(type=-,degree=-)
brac	VRB(mood=finite,tense=past,number=sg)
Noch	CON(type=coor)
dor	ADP
gewin	NOU(type=comm,number=sg)
noch	CON(type=coor)
dor	ADP
gemac	NOU(type=comm,number=sg)
Dis	PRN
darr	VRB(mood=finite,tense=pres,number=sg)
ic	PRN
mi	PRN
uermeten	VRB(mood=inf,tense=-,number=-)
wel	ADV(type=-,degree=-)
Nochtan	ADV(type=-,degree=-)
en	ADV(type=-,degree=-)
nutte	VRB(mood=finite,tense=past,number=sg)
si	PRN
nit	ADV(type=-,degree=-)
el	ADV(type=-,degree=-)
Noch	CON(type=coor)
dranc	NOU(type=comm,number=sg)
noch	CON(type=coor)
aet	NOU(type=comm,number=sg)
no	CON(type=coor)
groet	ADJ(degree=-)
no	CON(type=coor)
clene	ADJ(degree=-)
Dan	CON(type=sub)
dunne	ADJ(degree=-)
bir	NOU(type=comm,number=sg)
met	ADP
broede	NOU(type=comm,number=sg)
allene	ADV(type=-,degree=-)
Dit	PRN
was	VRB(mood=finite,tense=past,number=sg)
har	PRN
dranc.	NOU(type=comm,number=sg)
dit	PRN
was	VRB(mood=finite,tense=past,number=sg)
har	PRN
aet	NOU(type=comm,number=sg)
Dit	PRN
hilt	VRB(mood=finite,tense=past,number=sg)
si	PRN
sonder	ADP
loes	ADJ(degree=-)
baraet	NOU(type=comm,number=sg)
Die	PRN
seuen	NUM(type=car)
ijar	NOU(type=comm,number=pl)
al	ADV(type=-,degree=-)
toten	ADP+PRN
inde	NOU(type=comm,number=sg)
Mar	CON(type=coor)
wildi	PRN+VRB(mood=finite,tense=pres,number=sg)
dat	CON(type=sub)
ic	PRN
v	PRN
ontbinde	VRB(mood=finite,tense=pres,number=sg)
Hoe	ADV(type=-,degree=-)
si	PRN
dat	PRN
uasten	NOU(type=comm,number=sg)
sent	ADV(type=-,degree=-)
uolbrachte	VRB(mood=finite,tense=past,number=sg)
So	ADV(type=-,degree=-)
seggic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
dat	CON(type=sub)
si	PRN
so	ADV(type=-,degree=-)
sachte	ADJ(degree=-)
Voluastede	VRB(mood=finite,tense=past,number=sg)
al	ADV(type=-,degree=-)
die	PRN
lange	ADJ(degree=-)
dage	NOU(type=comm,number=pl)
Omodelic	ADV(type=-,degree=-)
al	ADV(type=-,degree=-)
sonder	ADP
clage	NOU(type=comm,number=sg)
Dat	CON(type=sub)
noit	ADV(type=-,degree=-)
binnen	ADP
.vij.	NUM(type=car)
ijaren	NOU(type=comm,number=pl)
Die	PRN
urowen	NOU(type=comm,number=pl)
die	PRN
daer+binnen	ADV(type=-,degree=-)+PRN
waren	VRB(mood=finite,tense=past,number=pl)
En	ADV(type=-,degree=-)
sagen	VRB(mood=finite,tense=past,number=pl)
nutten	VRB(mood=inf,tense=-,number=-)
ander	ADJ(degree=-)
spise	NOU(type=comm,number=sg)
Van	ADP
lichten	ADJ(degree=-)
noch	CON(type=coor)
uan	ADP
diren	ADJ(degree=-)
prise	NOU(type=comm,number=sg)
Lutgarden	NOU(type=proper,number=-)
dan	ADV(type=-,degree=-)
allene	ADV(type=-,degree=-)
broet	NOU(type=comm,number=sg)
Met	ADP
bire.	NOU(type=comm,number=sg)
mar	CON(type=coor)
en	PRN
wonder	NOU(type=comm,number=sg)
groet	ADJ(degree=-)
So	ADV(type=-,degree=-)
mach	VRB(mood=finite,tense=pres,number=sg)
men	PRN
merken	VRB(mood=inf,tense=-,number=-)
an	ADP
die	PRN
maget	NOU(type=comm,number=sg)
So+welken	PRN
tijt	NOU(type=comm,number=sg)
si	PRN
was	VRB(mood=finite,tense=past,number=sg)
beclaget	VRB(mood=part,tense=past,number=-)
Daer+af	ADV(type=-,degree=-)+PRN
uan	ADP
haren	PRN
meesterschape	NOU(type=comm,number=sg)
Och	CON(type=coor)
gekastijt	VRB(mood=part,tense=past,number=-)
uan	ADP
haren	PRN
pape	NOU(type=comm,number=sg)
Ochte	CON(type=coor)
oc	ADV(type=-,degree=-)
gebot	NOU(type=comm,number=sg)
uan	ADP
hen	PRN
ontfinc	VRB(mood=finite,tense=past,number=sg)
Dat	CON(type=sub)
si	PRN
oc	ADV(type=-,degree=-)
ate	VRB(mood=finite,tense=past,number=sg)
alselke	PRN
dinc	NOU(type=comm,number=sg)
Alse	CON(type=sub)
andre	ADJ(degree=-)
urowen	NOU(type=comm,number=pl)
nutten	VRB(mood=finite,tense=past,number=pl)
daer	ADV(type=-,degree=-)
So	ADV(type=-,degree=-)
seggic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
wel	ADV(type=-,degree=-)
ouer+waer	ADV(type=-,degree=-)
Dat	CON(type=sub)
sijs	PRN+PRN
gesuelgen	VRB(mood=inf,tense=-,number=-)
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
mochte	VRB(mood=finite,tense=past,number=sg)
Dat	CON(type=sub)
men	PRN
ter	ADP+PRN
vigen	NOU(type=comm,number=pl)
leggen	VRB(mood=inf,tense=-,number=-)
mochte	VRB(mood=finite,tense=past,number=sg)
Quaemt	VRB(mood=finite,tense=past,number=sg)
in	ADP
den	PRN
mont	NOU(type=comm,number=sg)
het	PRN
moster+ut	ADV(type=-,degree=-)+PRN+VRB(mood=finite,tense=past,number=sg)
Dos	ADV(type=-,degree=-)
halp	VRB(mood=finite,tense=past,number=sg)
got	NOU(type=comm,number=sg)
uasten	VRB(mood=inf,tense=-,number=-)
sire	PRN
brut	NOU(type=comm,number=sg)
Mar	CON(type=coor)
wildi	PRN+VRB(mood=finite,tense=pres,number=sg)
weten	VRB(mood=inf,tense=-,number=-)
wat	ADV(type=-,degree=-)
van	ADP
hare	PRN
Dis	PRN
harde	ADV(type=-,degree=-)
quaet	ADJ(degree=-)
uergeten	VRB(mood=part,tense=past,number=-)
ware	VRB(mood=finite,tense=past,number=sg)
Daer	ADV(type=-,degree=-)
staet	VRB(mood=finite,tense=pres,number=sg)
bescreuen	ADJ(degree=-)
in	ADP
latijn	NOU(type=comm,number=sg)
So+wanner+dat	CON(type=sub)
die	PRN
maget	NOU(type=comm,number=sg)
fijn	ADJ(degree=-)
Die	PRN
was	VRB(mood=finite,tense=past,number=sg)
geuudet	VRB(mood=part,tense=past,number=-)
metter	ADP+PRN
minnen	NOU(type=comm,number=sg)
Vernam	VRB(mood=finite,tense=past,number=sg)
dat	CON(type=sub)
iwent	PRN
quam	VRB(mood=finite,tense=past,number=sg)
daer+binnen	ADV(type=-,degree=-)+PRN
Dis	ADV(type=-,degree=-)
alt	PRN+PRN
conuent	NOU(type=comm,number=sg)
hadde	VRB(mood=finite,tense=past,number=sg)
it	PRN
tebat	ADV(type=-,degree=-)+ADV(type=-,degree=-)
Nochtan+dat	CON(type=sub)+CON(type=sub)
sijs	PRN+PRN
nit	ADV(type=-,degree=-)
selue	PRN
en	ADV(type=-,degree=-)
at	VRB(mood=finite,tense=past,number=sg)
Noch	CON(type=coor)
nit	ADV(type=-,degree=-)
nontfinc	ADV(type=-,degree=-)+VRB(mood=finite,tense=past,number=sg)
in	ADP
haren	PRN
monde	NOU(type=comm,number=sg)
Want	CON(type=sub)
sijs	PRN+PRN
genutten	VRB(mood=inf,tense=-,number=-)
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
conde	VRB(mood=finite,tense=past,number=sg)
So	ADV(type=-,degree=-)
was	VRB(mood=finite,tense=past,number=sg)
har	PRN
herte	NOU(type=comm,number=sg)
meer	PRN
in	ADP
hogen	NOU(type=comm,number=sg)
Dan	CON(type=sub)
och	CON(type=coor)
si	PRN
hadde	VRB(mood=finite,tense=past,number=sg)
selue	PRN
mogen	VRB(mood=inf,tense=-,number=-)
Mettin	ADP+PRN
ijonfrowen	NOU(type=comm,number=pl)
int	ADP+PRN
geuoch	NOU(type=comm,number=sg)
Dis	PRN
selues	PRN
oc	ADV(type=-,degree=-)
ontbiten	VRB(mood=inf,tense=-,number=-)
gnoch	ADV(type=-,degree=-)
Want	CON(type=coor)
menechwerf	NOU(type=comm,number=pl)+PRN
te	ADP
goeder	ADJ(degree=-)
trowen	NOU(type=comm,number=sg)
Plach	VRB(mood=finite,tense=past,number=sg)
si	PRN
uerlien	VRB(mood=inf,tense=-,number=-)
din	PRN
ijonfrowen	NOU(type=comm,number=pl)
Die	PRN
int	ADP+PRN
conuent	NOU(type=comm,number=sg)
daer+binnen	ADV(type=-,degree=-)+PRN
waren	VRB(mood=finite,tense=past,number=pl)
Dat	CON(type=sub)
sijs	PRN+PRN
tebat	ADV(type=-,degree=-)+ADV(type=-,degree=-)
oc	ADV(type=-,degree=-)
plach	VRB(mood=finite,tense=past,number=sg)
geuaren	VRB(mood=inf,tense=-,number=-)
Daer+na	ADV(type=-,degree=-)+PRN
wel	ADV(type=-,degree=-)
lange.	ADV(type=-,degree=-)
alse	CON(type=sub)
int	ADP+PRN
conuent	NOU(type=comm,number=sg)
Pitance	NOU(type=comm,number=sg)
quam	VRB(mood=finite,tense=past,number=sg)
ochte	CON(type=coor)
een	PRN
prosent	NOU(type=comm,number=sg)
Dis	ADV(type=-,degree=-)
alle	PRN
die	PRN
ijonfrowen	NOU(type=comm,number=pl)
it	PRN
Tebat	ADV(type=-,degree=-)+ADV(type=-,degree=-)
gecregen	VRB(mood=finite,tense=past,number=pl)
och	CON(type=coor)
genit	NOU(type=comm,number=sg)
Och	CON(type=coor)
dis	PRN
gemakes	NOU(type=comm,number=sg)
it	PRN
gewonnen	VRB(mood=finite,tense=past,number=pl)
Gemeenlic	ADV(type=-,degree=-)
alle	PRN
dandre	ADJ(degree=-)+PRN
nonnen;	NOU(type=comm,number=pl)
Nu	ADV(type=-,degree=-)
comt	VRB(mood=finite,tense=pres,number=sg)
hir	ADV(type=-,degree=-)
uoert	VRB(mood=finite,tense=pres,number=sg)
gi	PRN
papelarde	NOU(type=comm,number=pl)
Ghi	PRN
metten	ADP+PRN
grisen	ADJ(degree=-)
langen	ADJ(degree=-)
barde	NOU(type=comm,number=pl)
Die	PRN
al	ADV(type=-,degree=-)
uolmaket	ADJ(degree=-)
schinen	VRB(mood=inf,tense=-,number=-)
willet	VRB(mood=finite,tense=pres,number=sg)
Ende	CON(type=coor)
al	ADV(type=-,degree=-)
benijdt	VRB(mood=finite,tense=pres,number=sg)
ende	CON(type=coor)
al	ADV(type=-,degree=-)
beghillet	VRB(mood=finite,tense=pres,number=sg)
Ende	CON(type=coor)
al	ADV(type=-,degree=-)
begrijpt	VRB(mood=finite,tense=pres,number=sg)
met	ADP
fellen	ADJ(degree=-)
moede	NOU(type=comm,number=sg)
Dat	CON(type=sub)
men	PRN
dengenen	PRN+PRN
doet	VRB(mood=finite,tense=pres,number=sg)
te	ADP
goede	ADJ(degree=-)
Jn	ADP
karitaten	NOU(type=comm,number=sg)
dies	PRN+PRN
behoeuen	VRB(mood=finite,tense=pres,number=pl)
Hort	VRB(mood=finite,tense=pres,number=sg)
harewert	ADV(type=-,degree=-)
ghi	PRN
loese	ADJ(degree=-)
boeuen	NOU(type=comm,number=pl)
Die	PRN
omme+gaet	VRB(mood=finite,tense=pres,number=sg)
met	ADP
begardien	NOU(type=comm,number=sg)
Wis	ADV(type=-,degree=-)
plach	VRB(mood=finite,tense=past,number=sg)
dis	PRN
godes	NOU(type=comm,number=sg)
brut	NOU(type=comm,number=sg)
uerlien	VRB(mood=inf,tense=-,number=-)
Die	PRN
menechwerff	NOU(type=comm,number=pl)+PRN
dis	PRN
beghiede	VRB(mood=finite,tense=past,number=sg)
Dat	CON(type=sub)
si	PRN
dis	PRN
goedes	NOU(type=comm,number=sg)
dat	PRN
geschiede	VRB(mood=finite,tense=past,number=sg)
Din	PRN
armen	ADJ(degree=-)
godes	NOU(type=comm,number=sg)
nonnekinen	NOU(type=comm,number=pl)
Die	PRN
waren	VRB(mood=finite,tense=past,number=pl)
allewege	ADV(type=-,degree=-)
in	ADP
pinen	NOU(type=comm,number=pl)
Was	VRB(mood=finite,tense=past,number=sg)
ene	PRN
maent	NOU(type=comm,number=sg)
altoes	ADV(type=-,degree=-)
te	ADV(type=-,degree=-)
blider	ADJ(degree=-)
Daer+na	ADV(type=-,degree=-)+PRN
ende	CON(type=coor)
oc	ADV(type=-,degree=-)
wel	ADV(type=-,degree=-)
lange	ADV(type=-,degree=-)
sider	ADV(type=-,degree=-)
So+welkentijt	NOU(type=comm,number=sg)+PRN
si	PRN
dis	PRN
gedachte	VRB(mood=finite,tense=past,number=sg)
Endt	CON(type=coor)+PRN
hare	PRN
got	NOU(type=comm,number=sg)
te+uoren+brachte	ADV(type=-,degree=-)+VRB(mood=finite,tense=past,number=sg)
Dit	PRN
was	VRB(mood=finite,tense=past,number=sg)
dat	CON(type=sub)
recht	NOU(type=comm,number=sg)
uan	ADP
karitaten	NOU(type=comm,number=sg)
Die	PRN
elken	PRN
goedes	NOU(type=comm,number=sg)
ende	CON(type=coor)
baten	NOU(type=comm,number=sg)
Wel	ADV(type=-,degree=-)
onnet;	VRB(mood=finite,tense=pres,number=sg)
daer	ADV(type=-,degree=-)+PRN
si	PRN
buten	ADV(type=-,degree=-)+PRN
leuen	VRB(mood=finite,tense=pres,number=pl)
Die	PRN
godes	NOU(type=comm,number=sg)
armen	NOU(type=comm,number=pl)
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
geuen	VRB(mood=inf,tense=-,number=-)
Dis	PRN
hen	PRN
behoeuet.	VRB(mood=finite,tense=pres,number=sg)
mar	CON(type=coor)
met	ADP
nide	NOU(type=comm,number=sg)
Begripen	VRB(mood=finite,tense=pres,number=pl)
dat	PRN
in	ADP
allen	PRN
tide	NOU(type=comm,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
met	ADP
harre	PRN
quader	ADJ(degree=-)
spraken	NOU(type=comm,number=sg)
Din	PRN
armen	NOU(type=comm,number=pl)
dat	CON(type=sub)
tongoede	ADJ(degree=-)+ADP
maken	VRB(mood=finite,tense=pres,number=pl)
Dat	PRN
si	PRN
beijagen	VRB(mood=finite,tense=pres,number=pl)
uan	ADP
den	PRN
goeden	NOU(type=comm,number=sg)
Die	PRN
op	ADP
die	PRN
dogt	NOU(type=comm,number=sg)
hen	PRN
bat	ADV(type=-,degree=-)
beuroeden	VRB(mood=finite,tense=pres,number=pl)
Hoe+dat	CON(type=sub)
si	PRN
mester	NOU(type=comm,number=sg)
ijacope	NOU(type=proper,number=-)
uan	ADP
uitri	NOU(type=proper,number=-)
verloste	VRB(mood=finite,tense=past,number=sg)
van	ADP
den	PRN
bande	NOU(type=comm,number=sg)
van	ADP
kranker	ADJ(degree=-)
minnen	NOU(type=comm,number=sg)
.iiij.	NUM(type=car)
Oc	ADV(type=-,degree=-)
was	VRB(mood=finite,tense=past,number=sg)
tin	ADP+PRN
tiden	NOU(type=comm,number=sg)
in	ADP
dat	PRN
lant	NOU(type=comm,number=sg)
En	PRN
man	NOU(type=comm,number=sg)
uermart	ADJ(degree=-)
en	CON(type=coor)
wel+bekant	ADJ(degree=-)
Die	PRN
oc	ADV(type=-,degree=-)
was	VRB(mood=finite,tense=past,number=sg)
cont	ADJ(degree=-)
der	PRN
maget	NOU(type=comm,number=sg)
uri	ADJ(degree=-)
Hit	VRB(mood=finite,tense=past,number=sg)
meester	NOU(type=comm,number=sg)
ijacob	NOU(type=proper,number=-)
uan	ADP
uitri	NOU(type=proper,number=-)
Die	PRN
goede	ADJ(degree=-)
man	NOU(type=comm,number=sg)
was	VRB(mood=finite,tense=past,number=sg)
worden	VRB(mood=part,tense=past,number=-)
mare	ADJ(degree=-)
Om+dat	CON(type=sub)
hi	PRN
was	VRB(mood=finite,tense=past,number=sg)
goet	ADJ(degree=-)
predekare	NOU(type=comm,number=sg)
Ende	CON(type=coor)
hi	PRN
wel	ADV(type=-,degree=-)
conste	VRB(mood=finite,tense=past,number=sg)
in	ADP
din	PRN
sermone	NOU(type=comm,number=pl)
De	PRN
kracht	NOU(type=comm,number=sg)
uan	ADP
din	PRN
scrifturen	NOU(type=comm,number=pl)
tonen	VRB(mood=inf,tense=-,number=-)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
te	ADP
rechte	NOU(type=comm,number=sg)
wel	ADV(type=-,degree=-)
bedieden	VRB(mood=inf,tense=-,number=-)
Din	PRN
clerken	NOU(type=comm,number=pl)
ende	CON(type=coor)
oc	ADV(type=-,degree=-)
andren	ADJ(degree=-)
lieden;	NOU(type=comm,number=pl)
de	RES(type=-)
rode	RES(type=-)
titel	RES(type=-)
is	RES(type=-)
van	RES(type=-)
hand	RES(type=-)
C	RES(type=-)
Op	ADP
enen	PRN
tijt	NOU(type=comm,number=sg)
so	ADV(type=-,degree=-)
was	VRB(mood=finite,tense=past,number=sg)
geuaren	VRB(mood=part,tense=past,number=-)
Met	ADP
droeuer	ADJ(degree=-)
herten	NOU(type=comm,number=sg)
achterwaren	VRB(mood=inf,tense=-,number=-)
Die	PRN
here;	NOU(type=comm,number=sg)
alse	CON(type=sub)
op	ADP
gerechte	ADJ(degree=-)
trowe	NOU(type=comm,number=sg)
Ene	PRN
utuercorne	ADJ(degree=-)
schone	ADJ(degree=-)
urowe	NOU(type=comm,number=sg)
Die	PRN
hem	PRN
met	ADP
menscheliker	ADJ(degree=-)
minnen	NOU(type=comm,number=sg)
Teuoren	ADV(type=-,degree=-)
so	ADV(type=-,degree=-)
plach	VRB(mood=finite,tense=past,number=sg)
aue+winnen	VRB(mood=inf,tense=-,number=-)
Sijn	PRN
herte	NOU(type=comm,number=sg)
sere	ADV(type=-,degree=-)
ende	CON(type=coor)
utermaten	ADV(type=-,degree=-)
Dat	CON(type=sub)
hijs	PRN+PRN
en	ADV(type=-,degree=-)
conde	VRB(mood=finite,tense=past,number=sg)
nit	ADV(type=-,degree=-)
gelaten	VRB(mood=inf,tense=-,number=-)
Hine	CON(type=-)+PRN
es	VRB(mood=finite,tense=pres,number=sg)
geuaren	VRB(mood=part,tense=past,number=-)
dar	ADV(type=-,degree=-)
si	PRN
lach	VRB(mood=finite,tense=past,number=sg)
Onlostech.	ADJ(degree=-)
ende	CON(type=coor)
selue	PRN
plach	VRB(mood=finite,tense=past,number=sg)
Hars	PRN
met	ADP
phisiken	NOU(type=comm,number=sg)
lange	ADJ(degree=-)
stonde	NOU(type=comm,number=sg)
Want	CON(type=coor)
hijs	PRN+PRN
onsseggen	VRB(mood=inf,tense=-,number=-)
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
conde	VRB(mood=finite,tense=past,number=sg)
Der	PRN
cranker	ADJ(degree=-)
minnen	NOU(type=comm,number=sg)
die	PRN
hem	PRN
dede	VRB(mood=finite,tense=past,number=sg)
Dis	PRN
plegen.	VRB(mood=inf,tense=-,number=-)
daer	ADV(type=-,degree=-)+PRN
hi	PRN
selue	PRN
mede	ADV(type=-,degree=-)+PRN
So	ADV(type=-,degree=-)
trege	ADJ(degree=-)
wart	VRB(mood=finite,tense=past,number=sg)
ende	CON(type=coor)
oc	ADV(type=-,degree=-)
so	ADV(type=-,degree=-)
lat	ADJ(degree=-)
Dat	CON(type=sub)
hi	PRN
tin	ADP+PRN
tiden	NOU(type=comm,number=sg)
al	ADV(type=-,degree=-)
uergat	VRB(mood=finite,tense=past,number=sg)
Dis	PRN
sermonerens.	NOU(type=comm,number=sg)
ende	CON(type=coor)
al+stille	ADV(type=-,degree=-)
Daer	ADV(type=-,degree=-)
lach	VRB(mood=finite,tense=past,number=sg)
om	ADP
harre	PRN
minnen	NOU(type=comm,number=sg)
wille	NOU(type=comm,number=sg)
Want	CON(type=coor)
euen	ADV(type=-,degree=-)
lanc	ADJ(degree=-)
dat	CON(type=sub)
hem	PRN
die	PRN
moet	NOU(type=comm,number=sg)
Met	ADP
hare	PRN
also	ADV(type=-,degree=-)
te	ADP
sine	VRB(mood=inf,tense=-,number=-)
stoet	VRB(mood=finite,tense=past,number=sg)
Heft	VRB(mood=finite,tense=pres,number=sg)
hi	PRN
sijns	PRN
selues	PRN
al	ADV(type=-,degree=-)
uergeten	VRB(mood=inf,tense=-,number=-)
Wat	ADV(type=-,degree=-)
wondre.	NOU(type=comm,number=sg)
want	CON(type=sub)
hi	PRN
was	VRB(mood=finite,tense=past,number=sg)
beseten	ADJ(degree=-)
Van	ADP
harre	PRN
minnen	NOU(type=comm,number=sg)
dine	PRN+PRN
duanc	VRB(mood=finite,tense=past,number=sg)
So+dat	CON(type=sub)
hi	PRN
wart	VRB(mood=finite,tense=past,number=sg)
ten	ADP+PRN
dogden	NOU(type=comm,number=pl)
cranc;	ADJ(degree=-)
Mar	CON(type=coor)
godes	NOU(type=comm,number=sg)
brut	NOU(type=comm,number=sg)
die	PRN
heft	VRB(mood=finite,tense=pres,number=sg)
uernomen	VRB(mood=part,tense=past,number=-)
Dat	CON(type=sub)
hi	PRN
aldos	ADV(type=-,degree=-)
was	VRB(mood=finite,tense=past,number=sg)
aue+comen	VRB(mood=part,tense=past,number=-)
Dis	PRN
predekens.	NOU(type=comm,number=sg)
ende	CON(type=coor)
omme	ADP
wat	ADV(type=-,degree=-)
saken	NOU(type=comm,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
hoe	ADV(type=-,degree=-)
hi	PRN
began	VRB(mood=finite,tense=past,number=sg)
mesraken	VRB(mood=inf,tense=-,number=-)
Si	PRN
hadde	VRB(mood=finite,tense=past,number=sg)
int	ADP+PRN
herte	NOU(type=comm,number=sg)
groten	ADJ(degree=-)
toren	NOU(type=comm,number=sg)
Dat	CON(type=sub)
hi	PRN
so	ADV(type=-,degree=-)
dullic	ADV(type=-,degree=-)
heft	VRB(mood=finite,tense=pres,number=sg)
uerloren	VRB(mood=part,tense=past,number=-)
Die	PRN
gracie	NOU(type=comm,number=sg)
die	PRN
hem	PRN
was	VRB(mood=finite,tense=past,number=sg)
uerleent	VRB(mood=part,tense=past,number=-)
Van	ADP
rowe	NOU(type=comm,number=sg)
groet	ADJ(degree=-)
heft	VRB(mood=finite,tense=pres,number=sg)
si	PRN
geweent	VRB(mood=part,tense=past,number=-)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
gebeden	VRB(mood=part,tense=past,number=-)
dis	PRN
te	ADP
gode	NOU(type=comm,number=sg)
Dat	CON(type=sub)
hi	PRN
din	PRN
mensche	NOU(type=comm,number=sg)
och	CON(type=sub)
hijt	PRN+PRN
gebode	VRB(mood=finite,tense=past,number=sg)
Verloestte	VRB(mood=finite,tense=past,number=sg)
uan	ADP
der	PRN
cranker	ADJ(degree=-)
minnen	NOU(type=comm,number=sg)
Ende	CON(type=coor)
har	PRN
baraet	NOU(type=comm,number=sg)
hem	PRN
dade	VRB(mood=finite,tense=past,number=sg)
kinnen	VRB(mood=inf,tense=-,number=-)
Mar	CON(type=coor)
got	NOU(type=comm,number=sg)
die	PRN
alle	PRN
dinge	NOU(type=comm,number=pl)
sit	VRB(mood=finite,tense=pres,number=sg)
Ende	CON(type=coor)
wilde	VRB(mood=finite,tense=past,number=sg)
dis	PRN
noch	ADV(type=-,degree=-)
horen	VRB(mood=inf,tense=-,number=-)
nit	ADV(type=-,degree=-)
Want	CON(type=sub)
hi	PRN
der	PRN
baten	NOU(type=comm,number=sg)
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
gherde	VRB(mood=finite,tense=past,number=sg)
Noch	CON(type=coor)
uan	ADP
der	PRN
crankheit	NOU(type=comm,number=sg)
die	PRN
hem	PRN
derde	VRB(mood=finite,tense=past,number=sg)
Der	PRN
loessenessen	NOU(type=comm,number=sg)
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
rochte	VRB(mood=finite,tense=past,number=sg)
So	ADV(type=-,degree=-)
lostelic	ADJ(degree=-)
hem	PRN
wesen	VRB(mood=inf,tense=-,number=-)
dochte	VRB(mood=finite,tense=past,number=sg)
Met	ADP
kranker	ADJ(degree=-)
minnen	NOU(type=comm,number=sg)
sijn	VRB(mood=finite,tense=pres,number=pl)
beuaen	VRB(mood=part,tense=past,number=-)
Dat	CON(type=sub)
heft	VRB(mood=finite,tense=pres,number=sg)
die	PRN
uiant	NOU(type=comm,number=sg)
al	ADV(type=-,degree=-)
gedaen	VRB(mood=part,tense=past,number=-)
Die	PRN
hem	PRN
met	ADP
sinen	PRN
losen	ADJ(degree=-)
treken	NOU(type=comm,number=pl)
Die	PRN
doget	NOU(type=comm,number=sg)
dos	ADV(type=-,degree=-)
waende	VRB(mood=finite,tense=past,number=sg)
aue+breken;	VRB(mood=inf,tense=-,number=-)
Dis	PRN
hadde	VRB(mood=finite,tense=past,number=sg)
int	ADP+PRN
herte	NOU(type=comm,number=sg)
groten	ADJ(degree=-)
rowe	NOU(type=comm,number=sg)
Do	CON(type=sub)
sijt	PRN+PRN
uernam.	VRB(mood=finite,tense=past,number=sg)
lutgart	NOU(type=proper,number=-)
die	PRN
urowe	NOU(type=comm,number=sg)
Dis	ADV(type=-,degree=-)
ginc	VRB(mood=finite,tense=past,number=sg)
si	PRN
so	ADV(type=-,degree=-)
har	PRN
lijf	NOU(type=comm,number=sg)
karinen	VRB(mood=inf,tense=-,number=-)
Met	ADP
eiseliken	ADJ(degree=-)
disciplinen	NOU(type=comm,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
met	ADP
groten	ADJ(degree=-)
slagen	NOU(type=comm,number=pl)
blowen	VRB(mood=inf,tense=-,number=-)
Dat	CON(type=sub)+PRN
hare	PRN
har	PRN
leuen	NOU(type=comm,number=sg)
mochte	VRB(mood=finite,tense=past,number=sg)
rowen	VRB(mood=inf,tense=-,number=-)
Aldos	ADV(type=-,degree=-)
so	ADV(type=-,degree=-)
bat	VRB(mood=finite,tense=past,number=sg)
si	PRN
tonsen	ADP+PRN
here	NOU(type=comm,number=sg)
Al	ADV(type=-,degree=-)
suchtende	VRB(mood=part,tense=pres,number=-)
met	ADP
groten	ADJ(degree=-)
sere	NOU(type=comm,number=sg)
Dat	CON(type=sub)
hi	PRN
din	PRN
mensche	NOU(type=comm,number=sg)
wilde	VRB(mood=finite,tense=past,number=sg)
ontladen	VRB(mood=part,tense=past,number=-)
Van	ADP
sire	PRN
commerliker	ADJ(degree=-)
schaden	NOU(type=comm,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
uerlenen	VRB(mood=inf,tense=-,number=-)
sonder	ADP
beide	NOU(type=comm,number=sg)
Kinnesse	NOU(type=comm,number=sg)
ende	CON(type=coor)
onderschedechheide	NOU(type=comm,number=sg)
Waerbi+dat	CON(type=sub)
hi	PRN
din	PRN
uiant	NOU(type=comm,number=sg)
wreet	ADJ(degree=-)
Die	PRN
hem	PRN
te	ADP
derne	VRB(mood=inf,tense=-,number=-)
was	VRB(mood=finite,tense=past,number=sg)
gereet	ADJ(degree=-)
Mochte	VRB(mood=finite,tense=past,number=sg)
onder+brengen.	VRB(mood=inf,tense=-,number=-)
ende	CON(type=coor)
it	ADV(type=-,degree=-)
saen	ADV(type=-,degree=-)
Der	PRN
kranker	ADJ(degree=-)
minnen	NOU(type=comm,number=sg)
aue+staen	VRB(mood=inf,tense=-,number=-)
Mar	CON(type=coor)
got	NOU(type=comm,number=sg)
die	PRN
coninc	NOU(type=comm,number=sg)
uan	ADP
den	PRN
trone	NOU(type=comm,number=sg)
Die	PRN
al	ADV(type=-,degree=-)
te	ADP
horne	VRB(mood=inf,tense=-,number=-)
was	VRB(mood=finite,tense=past,number=sg)
gewone	ADJ(degree=-)
Dat	CON(type=sub)
hem	PRN
die	PRN
maget	NOU(type=comm,number=sg)
utuercoren	ADJ(degree=-)
Lutgart	NOU(type=proper,number=-)
plach	VRB(mood=finite,tense=past,number=sg)
bidden	VRB(mood=inf,tense=-,number=-)
dar+teuoren	ADV(type=-,degree=-)+PRN
Doe	ADV(type=-,degree=-)
hi	PRN
uernam	VRB(mood=finite,tense=past,number=sg)
dat	CON(type=sub)
si	PRN
soe	ADV(type=-,degree=-)
suare	ADJ(degree=-)
Verloet	VRB(mood=finite,tense=past,number=sg)
met	ADP
disciplinen	NOU(type=comm,number=sg)
hare	PRN
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
met	ADP
haren	PRN
beden	NOU(type=comm,number=pl)
lanc	ADJ(degree=-)
Din	PRN
man	NOU(type=comm,number=sg)
die	PRN
worden	VRB(mood=part,tense=past,number=-)
was	VRB(mood=finite,tense=past,number=sg)
so	ADV(type=-,degree=-)
cranc	ADJ(degree=-)
Ten	ADP+PRN
dogden;	NOU(type=comm,number=pl)
wilde	VRB(mood=finite,tense=past,number=sg)
weder+bringen	VRB(mood=inf,tense=-,number=-)
Te	ADP
gheesteliker	ADJ(degree=-)
vfeningen	NOU(type=comm,number=sg)
So	ADV(type=-,degree=-)
heuet	VRB(mood=finite,tense=pres,number=sg)
hi	PRN
op	ADP
enen	PRN
dach	NOU(type=comm,number=sg)
Al+daer	ADV(type=-,degree=-)
in	ADP
knigebede	NOU(type=comm,number=sg)
lach	VRB(mood=finite,tense=past,number=sg)
Die	PRN
maget	NOU(type=comm,number=sg)
edel	ADJ(degree=-)
ende	CON(type=coor)
fijn	ADJ(degree=-)
Gesendet	VRB(mood=part,tense=past,number=-)
enen	PRN
bode	NOU(type=comm,number=sg)
sijn	PRN
Die	PRN
sprac	VRB(mood=finite,tense=past,number=sg)
te	ADP
hare	PRN
in	ADP
derre	PRN
wise	NOU(type=comm,number=sg)
Die	PRN
coninc	NOU(type=comm,number=sg)
uan	ADP
den	PRN
paradise	NOU(type=comm,number=sg)
Lutgart	NOU(type=proper,number=-)
hi	PRN
grutet	VRB(mood=finite,tense=pres,number=sg)
v	PRN
met	ADP
mi	PRN
Ende	CON(type=coor)
v	PRN
ontbidt.	VRB(mood=finite,tense=pres,number=sg)
warumme	ADV(type=-,degree=-)
gi	PRN
V.	PRN
so	ADV(type=-,degree=-)
uerpijnt	VRB(mood=finite,tense=pres,number=sg)
om	ADP
enen	PRN
man	NOU(type=comm,number=sg)
Die	PRN
nit	ADV(type=-,degree=-)
so	ADV(type=-,degree=-)
uele	PRN
goeds	NOU(type=comm,number=sg)
en	ADV(type=-,degree=-)
an	VRB(mood=finite,tense=pres,number=sg)
Hem	PRN
seluen.	PRN
dat	CON(type=sub)
hi	PRN
achtte	VRB(mood=finite,tense=past,number=sg)
dis	PRN
Dat	CON(type=sub)
got	NOU(type=comm,number=sg)
uersage	VRB(mood=finite,tense=past,number=sg)
sijn	PRN
uerlis	NOU(type=comm,number=sg)
Noch	CON(type=coor)
dat	CON(type=sub)
hi	PRN
hem	PRN
die	PRN
gracie	NOU(type=comm,number=sg)
gaue	VRB(mood=finite,tense=past,number=sg)
Dat	CON(type=sub)
hi	PRN
der	PRN
besechheit	NOU(type=comm,number=sg)
quame+aue	VRB(mood=finite,tense=past,number=sg)
Van	ADP
cranker	ADJ(degree=-)
minnen	NOU(type=comm,number=sg)
die	PRN
hem	PRN
dert	VRB(mood=finite,tense=pres,number=sg)
Och	CON(type=coor)
hi	PRN
dan	ADV(type=-,degree=-)
selue	PRN
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
ghert	VRB(mood=finite,tense=pres,number=sg)
Noch	CON(type=coor)
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
ruket	VRB(mood=finite,tense=pres,number=sg)
sire	PRN
baten	NOU(type=comm,number=sg)
So	ADV(type=-,degree=-)
mogdi	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
wel	ADV(type=-,degree=-)
oc	ADV(type=-,degree=-)
gematen	VRB(mood=inf,tense=-,number=-)
Van	ADP
meer	PRN
te	ADP
biddene	VRB(mood=inf,tense=-,number=-)
ouer	ADP
hem	PRN
Dit	PRN
heuet	VRB(mood=finite,tense=pres,number=sg)
v	PRN
dis	PRN
bode	NOU(type=comm,number=sg)
ic	PRN
bem	VRB(mood=finite,tense=pres,number=sg)
Met	ADP
mi	PRN
ontboden	VRB(mood=finite,tense=past,number=pl)
maget	NOU(type=comm,number=sg)
goet	ADJ(degree=-)
Nu	ADV(type=-,degree=-)
houdt	VRB(mood=finite,tense=pres,number=sg)
in	ADP
rasten	NOU(type=comm,number=sg)
vwen	PRN
moet	NOU(type=comm,number=sg)
Dit	PRN
moet	VRB(mood=finite,tense=pres,number=sg)
in	ADP
uersten	NOU(type=comm,number=sg)
sijn	VRB(mood=inf,tense=-,number=-)
geleget	VRB(mood=part,tense=past,number=-)
O+wi	INT
doe	ADV(type=-,degree=-)
weder	ADV(type=-,degree=-)
heft	VRB(mood=finite,tense=pres,number=sg)
geseget	VRB(mood=part,tense=past,number=-)
Die	PRN
fine	ADJ(degree=-)
godesbrut	NOU(type=comm,number=sg)+NOU(type=comm,number=sg)
lutgart	NOU(type=proper,number=-)
Wel	ADV(type=-,degree=-)
sute	ADJ(degree=-)
got	NOU(type=comm,number=sg)
die	PRN
oit	ADV(type=-,degree=-)
wart	VRB(mood=finite,tense=past,number=sg)
Ontfarmech	ADJ(degree=-)
ende	CON(type=coor)
uol	ADJ(degree=-)
genaden	NOU(type=comm,number=sg)
Och	CON(type=sub)
dese	PRN
mensche	NOU(type=comm,number=sg)
es	VRB(mood=finite,tense=pres,number=sg)
so	ADV(type=-,degree=-)
uerladen	VRB(mood=part,tense=past,number=-)
Van	ADP
cranker	ADJ(degree=-)
minnen.	NOU(type=comm,number=sg)
dat	CON(type=sub)
hi	PRN
nit	ADV(type=-,degree=-)
Te	ADP
rechte	NOU(type=comm,number=sg)
en	ADV(type=-,degree=-)
merket	VRB(mood=finite,tense=pres,number=sg)
noch	CON(type=coor)
en	ADV(type=-,degree=-)
sit	VRB(mood=finite,tense=pres,number=sg)
Wat	PRN
hem	PRN
mescomt	VRB(mood=finite,tense=pres,number=sg)
noch	CON(type=coor)
wat	PRN
hem	PRN
lettet	VRB(mood=finite,tense=pres,number=sg)
Moet	VRB(mood=finite,tense=pres,number=sg)
hi	PRN
dan	CON(type=sub)
werden	VRB(mood=inf,tense=-,number=-)
so	ADV(type=-,degree=-)
onssettet	VRB(mood=part,tense=past,number=-)
Van	ADP
vwer	PRN
helpen.	NOU(type=comm,number=sg)
dat	CON(type=sub)
hem	PRN
al	ADV(type=-,degree=-)
Ontgeuen	VRB(mood=inf,tense=-,number=-)
werde	VRB(mood=finite,tense=past,number=sg)
sijn	PRN
geual	NOU(type=comm,number=sg)
Dat	CON(type=sub)
hi	PRN
teuoren	ADV(type=-,degree=-)
ie	ADV(type=-,degree=-)
gewan	VRB(mood=finite,tense=past,number=sg)
Wel	ADV(type=-,degree=-)
sute	ADJ(degree=-)
got	NOU(type=comm,number=sg)
wat	ADV(type=-,degree=-)
selen	VRB(mood=finite,tense=pres,number=pl)
dan	CON(type=sub)
Die	PRN
arme	ADJ(degree=-)
silen	NOU(type=comm,number=pl)
uan	ADP
dengenen	PRN+PRN
Die	PRN
hen	PRN
te	ADP
quaden	ADJ(degree=-)
dingen	NOU(type=comm,number=pl)
wenen	VRB(mood=finite,tense=pres,number=pl)
Dire	PRN
in	ADP
die	PRN
werelt	NOU(type=comm,number=sg)
menech	PRN
es	VRB(mood=finite,tense=pres,number=sg)
Want	CON(type=sub)
wale	ADV(type=-,degree=-)
benic	PRN+VRB(mood=finite,tense=pres,number=sg)
dis	PRN
gewes	ADJ(degree=-)
Dat	CON(type=sub)
se	PRN
die	PRN
uiant	NOU(type=comm,number=sg)
sal	VRB(mood=finite,tense=pres,number=sg)
uerleiden	VRB(mood=inf,tense=-,number=-)
Met	ADP
sire	PRN
boser	ADJ(degree=-)
lustechheiden	NOU(type=comm,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
met	ADP
hem	PRN
ter	ADP+PRN
hellen	NOU(type=comm,number=sg)
uuren	VRB(mood=inf,tense=-,number=-)
Dor	ADP
al	ADV(type=-,degree=-)
dat	CON(type=sub)
si	PRN
v	PRN
so	ADV(type=-,degree=-)
tesuren	ADJ(degree=-)+ADP
Sijn	VRB(mood=finite,tense=pres,number=pl)
worden;	VRB(mood=part,tense=past,number=-)
die	PRN
in	ADP
sonden	NOU(type=comm,number=sg)
leuen	VRB(mood=finite,tense=pres,number=pl)
Hen+si	ADV(type=-,degree=-)+PRN+VRB(mood=finite,tense=pres,number=sg)
dat	CON(type=sub)
gi	PRN
hen	PRN
willet	VRB(mood=finite,tense=pres,number=sg)
geuen	VRB(mood=inf,tense=-,number=-)
Die	PRN
gracie	NOU(type=comm,number=sg)
weder.	VRB(mood=inf,tense=-,number=-)
dat	CON(type=sub)
si	PRN
binnen	ADV(type=-,degree=-)
Hen	PRN
seluen	PRN
mogen	VRB(mood=finite,tense=pres,number=pl)
bat	ADV(type=-,degree=-)
bekinnen	VRB(mood=inf,tense=-,number=-)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
der	PRN
sonden	NOU(type=comm,number=pl)
aue+staen	VRB(mood=inf,tense=-,number=-)
Mar	CON(type=coor)
dat	CON(type=sub)
gi	PRN
desen	PRN
mensche	NOU(type=comm,number=sg)
saen	ADV(type=-,degree=-)
Tewege	ADP+NOU(type=comm,number=sg)
brenget	VRB(mood=finite,tense=pres,number=sg)
here	NOU(type=comm,number=sg)
goet	ADJ(degree=-)
Sent+dat	CON(type=sub)+CON(type=sub)
ic	PRN
al	ADV(type=-,degree=-)
uolseggen	VRB(mood=inf,tense=-,number=-)
moet	VRB(mood=finite,tense=pres,number=sg)
Dat	CON(type=sub)
ic	PRN
int	ADP+PRN
herte	NOU(type=comm,number=sg)
binnen	ADV(type=-,degree=-)
pense	VRB(mood=finite,tense=pres,number=sg)
Daer	ADV(type=-,degree=-)
ic	PRN
mi	PRN
seluen	PRN
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
uense	VRB(mood=finite,tense=pres,number=sg)
Dis	PRN
biddic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
wel	ADV(type=-,degree=-)
sute	ADJ(degree=-)
here	NOU(type=comm,number=sg)
Van	ADP
alle	ADV(type=-,degree=-)
mire	PRN
herten	NOU(type=comm,number=sg)
sere	NOU(type=comm,number=sg)
So+dat	CON(type=sub)
hi	PRN
wel	ADV(type=-,degree=-)
tesinen	ADP+PRN
uromen	NOU(type=comm,number=sg)
Der	PRN
krankheit	NOU(type=comm,number=sg)
moge	VRB(mood=finite,tense=pres,number=sg)
al	ADV(type=-,degree=-)
aue+comen	VRB(mood=inf,tense=-,number=-)
Die	PRN
hem	PRN
int	ADP+PRN
herte	NOU(type=comm,number=sg)
leget	VRB(mood=finite,tense=pres,number=sg)
stille	ADJ(degree=-)
Weder	CON(type=sub)
hi	PRN
wille	VRB(mood=finite,tense=pres,number=sg)
so	CON(type=sub)
ne	CON(type=-)
wille	VRB(mood=finite,tense=pres,number=sg)
Och	CON(type=coor)
doet	VRB(mood=finite,tense=pres,number=sg)
mi	PRN
seluen	PRN
uten	ADP+PRN
boeke	NOU(type=comm,number=sg)
So+dat	CON(type=sub)
ic	PRN
vwes	PRN
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
roeke	VRB(mood=finite,tense=pres,number=sg)
Daer	ADV(type=-,degree=-)
gi	PRN
mi	PRN
selue	PRN
in	ADP
hebt	VRB(mood=finite,tense=pres,number=sg)
gescreuen	VRB(mood=part,tense=past,number=-)
Ende	CON(type=coor)
al	ADV(type=-,degree=-)
dat	PRN
gi	PRN
mi	PRN
hebt	VRB(mood=finite,tense=pres,number=sg)
gegeuen	VRB(mood=part,tense=past,number=-)
Dat	PRN
nemet	VRB(mood=finite,tense=pres,number=sg)
hir	ADV(type=-,degree=-)
op.	VRB(mood=finite,tense=pres,number=sg)
weder	ADV(type=-,degree=-)
nu	ADV(type=-,degree=-)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
mi	PRN
seluen	PRN
scheedt	VRB(mood=finite,tense=pres,number=sg)
uan	ADP
v	PRN
Hort	VRB(mood=finite,tense=pres,number=sg)
hir	ADV(type=-,degree=-)
noch	ADV(type=-,degree=-)
wonder	NOU(type=comm,number=sg)
uan	ADP
lutgarden	NOU(type=proper,number=-)
Hoe	ADV(type=-,degree=-)
si	PRN
met	ADP
dosgedanen	ADJ(degree=-)
warden	NOU(type=comm,number=pl)
Din	PRN
groten	ADJ(degree=-)
here	NOU(type=comm,number=sg)
heft	VRB(mood=finite,tense=pres,number=sg)
onderbrachtt	VRB(mood=part,tense=past,number=-)
Die	PRN
alles	PRN
dinges	NOU(type=comm,number=sg)
heuet	VRB(mood=finite,tense=pres,number=sg)
macht	NOU(type=comm,number=sg)
Want	CON(type=sub)
doe	ADV(type=-,degree=-)
die	PRN
bede	NOU(type=comm,number=sg)
was	VRB(mood=finite,tense=past,number=sg)
uolcomen	VRB(mood=part,tense=past,number=-)
So	ADV(type=-,degree=-)
heft	VRB(mood=finite,tense=pres,number=sg)
die	PRN
goede	ADJ(degree=-)
man	NOU(type=comm,number=sg)
uernomen	VRB(mood=part,tense=past,number=-)
Dat	CON(type=sub)
hem	PRN
die	PRN
godes	NOU(type=comm,number=sg)
cracht	NOU(type=comm,number=sg)
was	VRB(mood=finite,tense=past,number=sg)
bi	ADV(type=-,degree=-)
Want	CON(type=coor)
hem	PRN
dat	PRN
herte	NOU(type=comm,number=sg)
wart	VRB(mood=finite,tense=past,number=sg)
so	ADV(type=-,degree=-)
uri	ADJ(degree=-)
Van	ADP
alre	PRN
krankheit	NOU(type=comm,number=sg)
die	PRN
hem	PRN
derde	VRB(mood=finite,tense=past,number=sg)
Dat	CON(type=sub)
hi	PRN
sent	ADV(type=-,degree=-)
nemmermeer	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
gherde	VRB(mood=finite,tense=past,number=sg)
Der	PRN
metsamheiden	NOU(type=comm,number=sg)
uan	ADP
der	PRN
urowen	NOU(type=comm,number=pl)
Want	CON(type=sub)
hi	PRN
began	VRB(mood=finite,tense=past,number=sg)
uan	ADP
binnen	ADV(type=-,degree=-)
schowen	VRB(mood=inf,tense=-,number=-)
Die	PRN
urese	NOU(type=comm,number=sg)
die	PRN
daer+an	ADV(type=-,degree=-)+PRN
gelach	VRB(mood=finite,tense=past,number=sg)
Dire	PRN
hi	PRN
teuoren	ADV(type=-,degree=-)
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
sach;	VRB(mood=finite,tense=past,number=sg)
Nu	ADV(type=-,degree=-)
merket	VRB(mood=finite,tense=pres,number=sg)
wel	ADV(type=-,degree=-)
dis	PRN
biddic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
Ghi	PRN
ijonge	ADJ(degree=-)
liede	NOU(type=comm,number=pl)
die	PRN
hir	ADV(type=-,degree=-)
nu	ADV(type=-,degree=-)
Hebt	VRB(mood=finite,tense=pres,number=sg)
dit	PRN
exempel	NOU(type=comm,number=sg)
horen	VRB(mood=inf,tense=-,number=-)
tellen	VRB(mood=inf,tense=-,number=-)
Hoe	ADV(type=-,degree=-)
si	PRN
mesraken	VRB(mood=finite,tense=pres,number=pl)
die	PRN
hen	PRN
quellen	VRB(mood=finite,tense=pres,number=pl)
Met	ADP
kranker	ADJ(degree=-)
minnen.	NOU(type=comm,number=sg)
ende	CON(type=coor)
laten	VRB(mood=finite,tense=pres,number=pl)
Den	PRN
rechten	ADJ(degree=-)
wech	NOU(type=comm,number=sg)
uan	ADP
karitaten	NOU(type=comm,number=sg)
Warumme	ADV(type=-,degree=-)
en	ADV(type=-,degree=-)
willen	VRB(mood=finite,tense=pres,number=pl)
si	PRN
nit	ADV(type=-,degree=-)
kinnen	VRB(mood=inf,tense=-,number=-)
Die	PRN
omme+gaen	VRB(mood=inf,tense=-,number=-)
met	ADP
ualscher	ADJ(degree=-)
minnen	NOU(type=comm,number=sg)
Hoe	ADV(type=-,degree=-)
dommelic	ADV(type=-,degree=-)
si	PRN
hen	PRN
uerbouden	VRB(mood=finite,tense=pres,number=pl)
Si	PRN
laten	VRB(mood=finite,tense=pres,number=pl)
dat	PRN
si	PRN
minnen	VRB(mood=inf,tense=-,number=-)
souden	VRB(mood=finite,tense=past,number=pl)
Si	PRN
minnen	VRB(mood=finite,tense=pres,number=pl)
dat	PRN
si	PRN
souden	VRB(mood=finite,tense=past,number=pl)
laten	VRB(mood=inf,tense=-,number=-)
Wart	PRN+VRB(mood=finite,tense=past,number=sg)
dat	CON(type=sub)
si	PRN
rochten	VRB(mood=finite,tense=past,number=pl)
harre	PRN
baten	NOU(type=comm,number=sg)
Mar	CON(type=coor)
merket	VRB(mood=finite,tense=pres,number=sg)
wonder	NOU(type=comm,number=sg)
uan	ADP
din	PRN
riesen	ADJ(degree=-)
Hoe+dat	CON(type=sub)
si	PRN
willens	VRB(mood=part,tense=past,number=-)
al	ADV(type=-,degree=-)
uerlisen	VRB(mood=finite,tense=pres,number=pl)
Der	PRN
minnen	NOU(type=comm,number=sg)
goet	ADJ(degree=-)
dat	CON(type=sub)
si	PRN
wel	ADV(type=-,degree=-)
can	VRB(mood=finite,tense=pres,number=sg)
Den	PRN
genen	PRN
geuen	VRB(mood=inf,tense=-,number=-)
din	PRN
sijs	PRN+PRN
an	VRB(mood=finite,tense=pres,number=sg)
Ende	CON(type=coor)
toe+gewegen	VRB(mood=inf,tense=-,number=-)
ende	CON(type=coor)
bringen	VRB(mood=inf,tense=-,number=-)
Van	ADP
allen	PRN
graciliken	ADJ(degree=-)
dingen	NOU(type=comm,number=pl)
Die	PRN
rikheit	NOU(type=comm,number=sg)
migel	ADJ(degree=-)
ende	CON(type=coor)
groet	ADJ(degree=-)
Ende	CON(type=coor)
willens	VRB(mood=part,tense=past,number=-)
uallen	VRB(mood=inf,tense=-,number=-)
in	ADP
die	PRN
noet	NOU(type=comm,number=sg)
Jn	ADP
groten	ADJ(degree=-)
commer	NOU(type=comm,number=sg)
ende	CON(type=coor)
in	ADP
pine	NOU(type=comm,number=sg)
Daer	ADV(type=-,degree=-)+PRN
si	PRN
begeren	VRB(mood=finite,tense=pres,number=pl)
in	ADV(type=-,degree=-)+PRN
tesine	ADP+VRB(mood=inf,tense=-,number=-)
Si	PRN
sijn	VRB(mood=finite,tense=pres,number=pl)
noch	ADV(type=-,degree=-)
dommer	ADV(type=-,degree=-)
dan	CON(type=sub)
dat	PRN
dir	NOU(type=comm,number=sg)
Dat	CON(type=sub)
selue	PRN
lopet	VRB(mood=finite,tense=pres,number=sg)
in	ADP
dat	PRN
uir	NOU(type=comm,number=sg)
Ende	CON(type=coor)
willens	VRB(mood=part,tense=past,number=-)
hem	PRN
uerbernet	VRB(mood=finite,tense=pres,number=sg)
daer	ADV(type=-,degree=-)
Dos	ADV(type=-,degree=-)
dogen	VRB(mood=finite,tense=pres,number=pl)
dese	PRN
pine	NOU(type=comm,number=sg)
suar	ADJ(degree=-)
Wel	ADV(type=-,degree=-)
groten	ADJ(degree=-)
commer	NOU(type=comm,number=sg)
ende	CON(type=coor)
quale	NOU(type=comm,number=sg)
Dat	CON(type=sub)
si	PRN
uerlisen	VRB(mood=finite,tense=pres,number=pl)
altemale	ADV(type=-,degree=-)
Want	CON(type=coor)
dat	CON(type=sub)
si	PRN
doegen	VRB(mood=finite,tense=pres,number=pl)
selc	PRN
uerdrit	NOU(type=comm,number=sg)
En	ADV(type=-,degree=-)
mach	VRB(mood=finite,tense=pres,number=sg)
der	PRN
sielen	NOU(type=comm,number=sg)
vromen	VRB(mood=inf,tense=-,number=-)
nit	ADV(type=-,degree=-)
Dis	ADV(type=-,degree=-)
soude	VRB(mood=finite,tense=past,number=sg)
hem	PRN
igewelc	PRN
uersin	VRB(mood=inf,tense=-,number=-)
Hoe	ADV(type=-,degree=-)
hi	PRN
betide	ADV(type=-,degree=-)
mochte	VRB(mood=finite,tense=past,number=sg)
ontflin	VRB(mood=inf,tense=-,number=-)
Der	PRN
cranker	ADJ(degree=-)
minnen	NOU(type=comm,number=sg)
ende	CON(type=coor)
ontstaen	VRB(mood=inf,tense=-,number=-)
Eer	CON(type=sub)
hire	ADV(type=-,degree=-)+PRN+PRN
bleue	VRB(mood=finite,tense=past,number=sg)
bi	ADV(type=-,degree=-)+PRN
geuaen	VRB(mood=part,tense=past,number=-)
Want	CON(type=coor)
bliuet	VRB(mood=finite,tense=pres,number=sg)
hi	PRN
dar+af	ADV(type=-,degree=-)+PRN
gebonden	VRB(mood=part,tense=past,number=-)
So	ADV(type=-,degree=-)
werdet	VRB(mood=finite,tense=pres,number=sg)
hem	PRN
die	PRN
sin	NOU(type=comm,number=sg)
ontfonden	VRB(mood=part,tense=past,number=-)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
dat	PRN
herte	NOU(type=comm,number=sg)
so	ADV(type=-,degree=-)
ontkirt	VRB(mood=part,tense=past,number=-)
Dat	CON(type=sub)
hem	PRN
die	PRN
doget	NOU(type=comm,number=sg)
oc	ADV(type=-,degree=-)
faillirt	VRB(mood=finite,tense=pres,number=sg)
Wille	VRB(mood=finite,tense=pres,number=sg)
of	CON(type=coor)
en	ADV(type=-,degree=-)
wille	VRB(mood=finite,tense=pres,number=sg)
an	ADP
sinen	PRN
danc	NOU(type=comm,number=sg)
Want	CON(type=coor)
sent+dat	CON(type=sub)+CON(type=sub)
hi	PRN
in	ADP
dat	PRN
beduanc	NOU(type=comm,number=sg)
Hem	PRN
werpet	VRB(mood=finite,tense=pres,number=sg)
uan	ADP
der	PRN
boser	ADJ(degree=-)
ghilen	NOU(type=comm,number=sg)
So	ADV(type=-,degree=-)
moet	VRB(mood=finite,tense=pres,number=sg)
hi	PRN
doen	VRB(mood=inf,tense=-,number=-)
bi	ADP
some	PRN
wilen	NOU(type=comm,number=sg)
Dat	PRN
hem	PRN
ten	ADP+PRN
besten	ADJ(degree=-)
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
staet	VRB(mood=finite,tense=pres,number=sg)
Daer+omme	ADV(type=-,degree=-)+PRN
souden	VRB(mood=finite,tense=past,number=pl)
dit	PRN
baraet	NOU(type=comm,number=sg)
Beschiwen	VRB(mood=inf,tense=-,number=-)
alle	PRN
ijonge	ADJ(degree=-)
liede	NOU(type=comm,number=pl)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
met	ADP
haren	PRN
scharpen	ADJ(degree=-)
niede	NOU(type=comm,number=sg)
Bekiren	VRB(mood=finite,tense=pres,number=pl)
hen	PRN
ter	ADP+PRN
godes	NOU(type=comm,number=sg)
minnen	NOU(type=comm,number=sg)
Daer	ADV(type=-,degree=-)+PRN
souden	VRB(mood=finite,tense=past,number=pl)
si	PRN
meer	PRN
ane	ADV(type=-,degree=-)+PRN
winnen	VRB(mood=inf,tense=-,number=-)
Dat	PRN
seggic	PRN+VRB(mood=finite,tense=pres,number=sg)
hen	PRN
wel	ADV(type=-,degree=-)
ouer+waer	ADV(type=-,degree=-)
Want	CON(type=sub)
die	PRN
uan	ADP
godes	NOU(type=comm,number=sg)
minnen	NOU(type=comm,number=sg)
claer	ADJ(degree=-)
Verlichtet	VRB(mood=part,tense=past,number=-)
sijn.	VRB(mood=finite,tense=pres,number=pl)
si	PRN
hebben	VRB(mood=finite,tense=pres,number=pl)
al	ADV(type=-,degree=-)
Geluc.	NOU(type=comm,number=sg)
ende	CON(type=coor)
eere.	NOU(type=comm,number=sg)
ende	CON(type=coor)
oc	ADV(type=-,degree=-)
geual	NOU(type=comm,number=sg)
Oc	ADV(type=-,degree=-)
selen	VRB(mood=finite,tense=pres,number=pl)
si	PRN
te	ADP
haren	PRN
uromen	NOU(type=comm,number=sg)
Hir+na	ADV(type=-,degree=-)+PRN
te	ADP
goeden	ADJ(degree=-)
inde	NOU(type=comm,number=sg)
comen	VRB(mood=inf,tense=-,number=-)
So	ADV(type=-,degree=-)
mote	VRB(mood=finite,tense=pres,number=sg)
wi.	PRN
oc	ADV(type=-,degree=-)
allegader	PRN
Dis	PRN
onne	VRB(mood=finite,tense=pres,number=sg)
ons	PRN
got	NOU(type=comm,number=sg)
die	PRN
melde	ADJ(degree=-)
uader.	NOU(type=comm,number=sg)
amen.	INT
Van+din+dat	CON(type=sub)
si	PRN
des	PRN
abts	NOU(type=comm,number=sg)
symoens	NOU(type=proper,number=-)
sile	NOU(type=comm,number=sg)
uan	ADP
foinni	NOU(type=proper,number=-)
verloestte	VRB(mood=finite,tense=past,number=sg)
van	ADP
den	PRN
vegeuire	NOU(type=comm,number=sg)
amen	RES(type=-)
jongere	RES(type=-)
toevoeging,	RES(type=-)
gelijktijdige	RES(type=-)
hand	RES(type=-)
de	RES(type=-)
rode	RES(type=-)
titel	RES(type=-)
is	RES(type=-)
van	RES(type=-)
hand	RES(type=-)
C	RES(type=-)
.v.	NUM(type=car)
JN	ADP
enen	PRN
closter	NOU(type=comm,number=sg)
in	ADP
din	PRN
dagen	NOU(type=comm,number=pl)
Daer	ADV(type=-,degree=-)
grawe	ADJ(degree=-)
moneke	NOU(type=comm,number=pl)
ordne	NOU(type=comm,number=sg)
dragen	VRB(mood=finite,tense=pres,number=pl)
Die	PRN
es	VRB(mood=finite,tense=pres,number=sg)
genamet	ADJ(degree=-)
alsic	CON(type=sub)+PRN
mi	PRN
Versta.	VRB(mood=finite,tense=pres,number=sg)
die	PRN
closter	NOU(type=comm,number=sg)
uan	ADP
foinni	NOU(type=proper,number=-)
So	ADV(type=-,degree=-)
was	VRB(mood=finite,tense=past,number=sg)
gemaket	VRB(mood=part,tense=past,number=-)
abt	NOU(type=comm,number=sg)
en	PRN
here	NOU(type=comm,number=sg)
Die	PRN
langen	ADJ(degree=-)
tijt	NOU(type=comm,number=sg)
hilt	VRB(mood=finite,tense=past,number=sg)
in	ADP
sine	PRN
eere	NOU(type=comm,number=sg)
Din	PRN
closter	NOU(type=comm,number=sg)
al.	ADV(type=-,degree=-)
hit	VRB(mood=finite,tense=past,number=sg)
dant	NOU(type=comm,number=sg)
symon	NOU(type=proper,number=-)
Die	PRN
gerne	ADV(type=-,degree=-)
pijnde	VRB(mood=finite,tense=past,number=sg)
om	ADP
wale	ADV(type=-,degree=-)
don	VRB(mood=inf,tense=-,number=-)
Hi	PRN
was	VRB(mood=finite,tense=past,number=sg)
behendech	ADJ(degree=-)
ende	CON(type=coor)
uroet	ADJ(degree=-)
Ende	CON(type=coor)
anders	ADV(type=-,degree=-)
was	VRB(mood=finite,tense=past,number=sg)
sijn	PRN
leuen	NOU(type=comm,number=sg)
goet	ADJ(degree=-)
Mar	CON(type=coor)
alte	ADV(type=-,degree=-)+ADV(type=-,degree=-)
suaer	ADJ(degree=-)
was	VRB(mood=finite,tense=past,number=sg)
hi	PRN
dengenen	PRN+PRN
Die	PRN
crankest	ADV(type=-,degree=-)
in	ADP
din	PRN
closter	NOU(type=comm,number=sg)
schenen	VRB(mood=finite,tense=past,number=pl)
Ende	CON(type=coor)
alte	ADV(type=-,degree=-)+ADV(type=-,degree=-)
stijf	ADJ(degree=-)
ende	CON(type=coor)
al	ADV(type=-,degree=-)
te	ADV(type=-,degree=-)
fel	ADJ(degree=-)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
te	ADP
wrekene	VRB(mood=inf,tense=-,number=-)
alte	ADV(type=-,degree=-)+ADV(type=-,degree=-)
snel	ADJ(degree=-)
Van	ADP
ijongen	ADJ(degree=-)
lieden	NOU(type=comm,number=pl)
die	PRN
mesdaden	NOU(type=comm,number=pl)
Dat	PRN
was	VRB(mood=finite,tense=past,number=sg)
uan	ADP
hem	PRN
wel	ADV(type=-,degree=-)
grote	ADJ(degree=-)
schade	NOU(type=comm,number=sg)
Want	CON(type=sub)
buten	ADV(type=-,degree=-)
din	PRN
in	ADP
alre	PRN
wise	NOU(type=comm,number=pl)
So	ADV(type=-,degree=-)
was	VRB(mood=finite,tense=past,number=sg)
hi	PRN
uan	ADP
wel	ADV(type=-,degree=-)
groten	ADJ(degree=-)
prise	NOU(type=comm,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
uan	ADP
seden	NOU(type=comm,number=pl)
wel+gerakt	ADJ(degree=-)
Alse	CON(type=sub)
ons	PRN
wel	ADV(type=-,degree=-)
cont	ADJ(degree=-)
die	PRN
uite	NOU(type=comm,number=sg)
makt	VRB(mood=finite,tense=pres,number=sg)
Die	PRN
sine	PRN
seden	NOU(type=comm,number=pl)
int	ADP+PRN
geuoch	NOU(type=comm,number=sg)
Volcomenlike	ADV(type=-,degree=-)
priset	VRB(mood=finite,tense=pres,number=sg)
gnoch	ADV(type=-,degree=-)
Mar	CON(type=coor)
dis	PRN
hi	PRN
hadde	VRB(mood=finite,tense=past,number=sg)
lof	NOU(type=comm,number=sg)
uercregen	VRB(mood=part,tense=past,number=-)
Bidie+so	ADV(type=-,degree=-)+CON(type=sub)
haddene	PRN+VRB(mood=finite,tense=past,number=sg)
onderslegen	VRB(mood=part,tense=past,number=-)
Lutgart	NOU(type=proper,number=-)
die	PRN
goede	ADJ(degree=-)
ende	CON(type=coor)
utuercoren	ADJ(degree=-)
Daer+an	ADV(type=-,degree=-)+PRN
en	ADV(type=-,degree=-)
heft	VRB(mood=finite,tense=pres,number=sg)
hi	PRN
nit	ADV(type=-,degree=-)
uerloren	VRB(mood=part,tense=past,number=-)
Want	CON(type=coor)
op	ADP
die	PRN
wile	NOU(type=comm,number=sg)
dat	PRN
hi	PRN
schit	VRB(mood=finite,tense=past,number=sg)
Van	ADP
derre	PRN
werelt.	NOU(type=comm,number=sg)
ende	CON(type=coor)
lit	VRB(mood=finite,tense=past,number=sg)
Dit	PRN
brosche	ADJ(degree=-)
lijf	NOU(type=comm,number=sg)
dit	PRN
arme	ADJ(degree=-)
leuen	NOU(type=comm,number=sg)
So	ADV(type=-,degree=-)
wart	VRB(mood=finite,tense=past,number=sg)
die	PRN
sile	NOU(type=comm,number=sg)
en+wech+gedreuen	VRB(mood=part,tense=past,number=-)
Daer	ADV(type=-,degree=-)
si	PRN
antwerde	NOU(type=comm,number=sg)
moste	VRB(mood=finite,tense=past,number=sg)
ontfaen	VRB(mood=part,tense=past,number=-)
Van	ADP
allen	PRN
dat	PRN
si	PRN
ie	ADV(type=-,degree=-)
gedaen	VRB(mood=part,tense=past,number=-)
Teuoren	ADV(type=-,degree=-)
hadde	VRB(mood=finite,tense=past,number=sg)
in	ADP
haren	PRN
liue	NOU(type=comm,number=sg)
Daer	ADV(type=-,degree=-)+PRN
wi	PRN
erminge.	NOU(type=comm,number=pl)
wi	PRN
caitiue	NOU(type=comm,number=pl)
Op	ADV(type=-,degree=-)+PRN
souden	VRB(mood=finite,tense=past,number=pl)
scowen	VRB(mood=inf,tense=-,number=-)
ende	CON(type=coor)
merken	VRB(mood=inf,tense=-,number=-)
Want	CON(type=sub)
igewelc	PRN
van	ADP
sinen	PRN
werken	NOU(type=comm,number=pl)
Weder	CON(type=sub)
si	PRN
quaet	ADJ(degree=-)
sijn	VRB(mood=finite,tense=pres,number=pl)
ochte	CON(type=sub)
goet	ADJ(degree=-)
Teijoncst	ADV(type=-,degree=-)
antwerde	NOU(type=comm,number=sg)
geuen	VRB(mood=inf,tense=-,number=-)
moet	VRB(mood=finite,tense=pres,number=sg)
Aldos	ADV(type=-,degree=-)
so	ADV(type=-,degree=-)
moste	VRB(mood=finite,tense=past,number=sg)
comen	VRB(mood=inf,tense=-,number=-)
uoert	VRB(mood=inf,tense=-,number=-)
Die	PRN
sile	NOU(type=comm,number=sg)
aldaer	ADV(type=-,degree=-)
si	PRN
heft	VRB(mood=finite,tense=pres,number=sg)
gehort	VRB(mood=part,tense=past,number=-)
Die	PRN
gods	NOU(type=comm,number=sg)
sententie	NOU(type=comm,number=sg)
die	PRN
se	PRN
schire	ADJ(degree=-)
Gewiset	VRB(mood=part,tense=past,number=-)
heft	VRB(mood=finite,tense=pres,number=sg)
tin	ADP+PRN
uegeuire	NOU(type=comm,number=sg)
Om	ADP
hare	PRN
sonden	NOU(type=comm,number=pl)
alse	CON(type=sub)
daer	ADV(type=-,degree=-)
Tesine	ADP+VRB(mood=inf,tense=-,number=-)
lange	ADJ(degree=-)
.xl.	NUM(type=car)
ijar;	NOU(type=comm,number=pl)
Hir+binnen	ADV(type=-,degree=-)+PRN
quam	VRB(mood=finite,tense=past,number=sg)
met	ADP
waren	ADJ(degree=-)
warden	NOU(type=comm,number=pl)
Ter	ADP+PRN
wel+gerakder	ADJ(degree=-)
magt	NOU(type=comm,number=sg)
lutgarden	NOU(type=proper,number=-)
Al	ADV(type=-,degree=-)
tote	ADP
aiwires	NOU(type=proper,number=-)
die	PRN
nimare	NOU(type=comm,number=sg)
Van	ADP
hem.	PRN
dat	CON(type=sub)
hi	PRN
uerscheeden	VRB(mood=part,tense=past,number=-)
ware	VRB(mood=finite,tense=past,number=sg)
Dis	PRN
was	VRB(mood=finite,tense=past,number=sg)
si	PRN
rowech	ADJ(degree=-)
ende	CON(type=coor)
onblide	ADJ(degree=-)
Want	CON(type=sub)
sine	PRN+PRN
lange	ADV(type=-,degree=-)
in	ADP
sinen	PRN
tide	NOU(type=comm,number=sg)
Met	ADP
uaster	ADJ(degree=-)
herten	NOU(type=comm,number=sg)
daer+teuoren	ADV(type=-,degree=-)+PRN
Geminnet	VRB(mood=part,tense=past,number=-)
hadde	VRB(mood=finite,tense=past,number=sg)
ende	CON(type=coor)
utuercoren	VRB(mood=part,tense=past,number=-)
Dis	PRN
wart	VRB(mood=finite,tense=past,number=sg)
si	PRN
saen	ADV(type=-,degree=-)
also	ADV(type=-,degree=-)
beraden	ADJ(degree=-)
Dat	CON(type=sub)
si	PRN
hem	PRN
wilde	VRB(mood=finite,tense=past,number=sg)
staen	VRB(mood=inf,tense=-,number=-)
in	ADP
staden	NOU(type=comm,number=sg)
Met	ADP
harre	PRN
macht	NOU(type=comm,number=sg)
getrowelike	ADV(type=-,degree=-)
Dos	ADV(type=-,degree=-)
ginc	VRB(mood=finite,tense=past,number=sg)
die	PRN
magt	NOU(type=comm,number=sg)
omodelike	ADV(type=-,degree=-)
Te	ADP
gode	NOU(type=comm,number=sg)
bidden	VRB(mood=inf,tense=-,number=-)
sonder	ADP
beide	NOU(type=comm,number=sg)
Dat	CON(type=sub)
hi	PRN
dor	ADP
sine	PRN
ontfarmechheide	NOU(type=comm,number=sg)
Die	PRN
sile	NOU(type=comm,number=sg)
die	PRN
hi	PRN
eer	ADV(type=-,degree=-)
geboet	VRB(mood=finite,tense=past,number=sg)
Van	ADP
niute.	PRN
wilde	VRB(mood=finite,tense=past,number=sg)
ut	ADP
alre	PRN
noet	NOU(type=comm,number=sg)
Verloessen.	VRB(mood=inf,tense=-,number=-)
ende	CON(type=coor)
it	ADV(type=-,degree=-)
schire	ADV(type=-,degree=-)
geuen	VRB(mood=inf,tense=-,number=-)
Met	ADP
hem	PRN
dat	PRN
ewelike	ADJ(degree=-)
leuen	NOU(type=comm,number=sg)
Dit	PRN
was	VRB(mood=finite,tense=past,number=sg)
der	PRN
goeder	ADJ(degree=-)
urowen	NOU(type=comm,number=sg)
bede	NOU(type=comm,number=sg)
Die	PRN
si	PRN
so	ADV(type=-,degree=-)
lange	ADJ(degree=-)
wile	NOU(type=comm,number=sg)
dede	VRB(mood=finite,tense=past,number=sg)
Op	ADP
enen	PRN
dach	NOU(type=comm,number=sg)
dat	CON(type=sub)
quam	VRB(mood=finite,tense=past,number=sg)
wel	ADV(type=-,degree=-)
lise	ADV(type=-,degree=-)
Van	ADP
bouen	ADP
utin	ADP+PRN
paradise	NOU(type=comm,number=sg)
Geulogen	VRB(mood=part,tense=past,number=-)
ene	PRN
stemme	NOU(type=comm,number=sg)
aldaer	ADV(type=-,degree=-)
Die	PRN
seide	VRB(mood=finite,tense=past,number=sg)
gods	NOU(type=comm,number=sg)
urindinne	NOU(type=comm,number=sg)
maer	NOU(type=comm,number=sg)
Lutgart	NOU(type=proper,number=-)
nu	ADV(type=-,degree=-)
weset	VRB(mood=finite,tense=pres,number=sg)
wel	ADV(type=-,degree=-)
terasten	ADP+NOU(type=comm,number=sg)
V.	PRN
disciplinen	NOU(type=comm,number=sg)
ende	CON(type=coor)
v	PRN
uasten	NOU(type=comm,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
v	PRN
beden	NOU(type=comm,number=pl)
sonder	ADP
waen	NOU(type=comm,number=sg)
Der	PRN
silen	NOU(type=comm,number=sg)
sal	VRB(mood=finite,tense=pres,number=sg)
in	ADP
staden	NOU(type=comm,number=sg)
staen	VRB(mood=inf,tense=-,number=-)
Dat	PRN
si	VRB(mood=finite,tense=pres,number=sg)
v	PRN
cundech	ADJ(degree=-)
oppenbare	ADV(type=-,degree=-)
Want	CON(type=coor)
dat	PRN
gi	PRN
biddet	VRB(mood=finite,tense=pres,number=sg)
ouer	ADP
hare	PRN
Dos	ADV(type=-,degree=-)
ernstelic;	ADV(type=-,degree=-)
moet	VRB(mood=finite,tense=pres,number=sg)
emmer	ADV(type=-,degree=-)
comen	VRB(mood=inf,tense=-,number=-)
Te	ADP
baten	NOU(type=comm,number=sg)
hare	PRN
ende	CON(type=coor)
oc	ADV(type=-,degree=-)
te	ADP
uromen	NOU(type=comm,number=sg)
O+wi	INT
ho	ADV(type=-,degree=-)
blide	ADJ(degree=-)
was	VRB(mood=finite,tense=past,number=sg)
lutgart	NOU(type=proper,number=-)
Doe	CON(type=sub)
si	PRN
uerhorde	VRB(mood=finite,tense=past,number=sg)
dese	PRN
wart	NOU(type=comm,number=pl)
Har	PRN
herte	NOU(type=comm,number=sg)
was	VRB(mood=finite,tense=past,number=sg)
getroestet	VRB(mood=part,tense=past,number=-)
wale	ADV(type=-,degree=-)
Doe	CON(type=sub)
si	PRN
uerhorde	VRB(mood=finite,tense=past,number=sg)
dese	PRN
tale	NOU(type=comm,number=sg)
Wat	ADV(type=-,degree=-)
wondre	NOU(type=comm,number=sg)
dis;	PRN
want	CON(type=sub)
si	PRN
uernam	VRB(mood=finite,tense=past,number=sg)
Dat	CON(type=sub)
hare	PRN
bede	NOU(type=comm,number=sg)
wel	ADV(type=-,degree=-)
bequam	VRB(mood=finite,tense=past,number=sg)
Den	PRN
hogsten	ADJ(degree=-)
coninc	NOU(type=comm,number=sg)
onsen	PRN
here	NOU(type=comm,number=sg)
Dis	PRN
ginc	VRB(mood=finite,tense=past,number=sg)
si	PRN
hem	PRN
noch	ADV(type=-,degree=-)
bidden	VRB(mood=inf,tense=-,number=-)
sere	ADV(type=-,degree=-)
bidden	RES(type=-)
op	RES(type=-)
rasuur,	RES(type=-)
hand	RES(type=-)
C	RES(type=-)
hier	RES(type=-)
begint	RES(type=-)
hand	RES(type=-)
C	RES(type=-)
Die	PRN
alle	PRN
dinc	NOU(type=comm,number=pl)
geleisten	VRB(mood=inf,tense=-,number=-)
mach	VRB(mood=finite,tense=pres,number=sg)
Dat	CON(type=sub)
hi	PRN
din	PRN
eweliken	ADJ(degree=-)
dach	NOU(type=comm,number=sg)
Van	ADP
sinen	PRN
rike	NOU(type=comm,number=sg)
dade	VRB(mood=finite,tense=past,number=sg)
schinen	VRB(mood=inf,tense=-,number=-)
Der	PRN
silen.	NOU(type=comm,number=sg)
ende	CON(type=coor)
vt	ADP
alre	PRN
pinen	NOU(type=comm,number=pl)
Verlossen	VRB(mood=inf,tense=-,number=-)
wilde	VRB(mood=finite,tense=past,number=sg)
die	PRN
it	ADV(type=-,degree=-)
schire	ADV(type=-,degree=-)
Ende	CON(type=coor)
utin	ADP+PRN
scharpen	ADJ(degree=-)
vegeuire	NOU(type=comm,number=sg)
Jt	ADV(type=-,degree=-)
cortelinge	ADV(type=-,degree=-)
dor	ADP
genade	NOU(type=comm,number=sg)
Te	ADP
sinen	PRN
rike	NOU(type=comm,number=sg)
comen	VRB(mood=inf,tense=-,number=-)
dade	VRB(mood=finite,tense=past,number=sg)
So	ADV(type=-,degree=-)
lange	ADV(type=-,degree=-)
bat	VRB(mood=finite,tense=past,number=sg)
die	PRN
maget	NOU(type=comm,number=sg)
fijn	ADJ(degree=-)
Dat	PRN
anderwerf	NOU(type=comm,number=sg)+NUM(type=ord)
din	PRN
bode	NOU(type=comm,number=sg)
sijn	PRN
Aldaer	ADV(type=-,degree=-)
got	NOU(type=comm,number=sg)
sendde	VRB(mood=finite,tense=past,number=sg)
weder	ADV(type=-,degree=-)
lise	ADV(type=-,degree=-)
Die	PRN
sprac	VRB(mood=finite,tense=past,number=sg)
tehare	ADP+PRN
in	ADP
derre	PRN
wise	NOU(type=comm,number=sg)
Lutgart	NOU(type=proper,number=-)
nv	ADV(type=-,degree=-)
laett	VRB(mood=finite,tense=pres,number=sg)
v	PRN
suchten	NOU(type=comm,number=sg)
staen	VRB(mood=inf,tense=-,number=-)
Der	PRN
silen	NOU(type=comm,number=sg)
sal	VRB(mood=finite,tense=pres,number=sg)
men	PRN
wouden	VRB(mood=inf,tense=-,number=-)
saen	ADV(type=-,degree=-)
So+dat	CON(type=sub)
si	PRN
sal	VRB(mood=finite,tense=pres,number=sg)
wel	ADV(type=-,degree=-)
cortelinge	ADV(type=-,degree=-)
Dis	ADV(type=-,degree=-)
gise	PRN+PRN
ontfaet	VRB(mood=finite,tense=pres,number=sg)
in	ADP
v	PRN
gedinge	NOU(type=comm,number=sg)
Met	ADP
gode	NOU(type=comm,number=sg)
ginder+bouen	ADV(type=-,degree=-)
schone	ADJ(degree=-)
Jn	ADP
hemelrike	NOU(type=comm,number=sg)
spannen	VRB(mood=inf,tense=-,number=-)
crone	NOU(type=comm,number=sg)
Dor	ADP
vwen	PRN
wille	NOU(type=comm,number=sg)
maget	NOU(type=comm,number=sg)
wert	ADJ(degree=-)
Want	CON(type=sub)
sider+meer	PRN
dat	PRN
gijt	PRN+PRN
begert	VRB(mood=finite,tense=pres,number=sg)
En	ADV(type=-,degree=-)
es	VRB(mood=finite,tense=pres,number=sg)
nit	ADV(type=-,degree=-)
recht	NOU(type=comm,number=sg)
dat	CON(type=sub)
mens	PRN+PRN
v	PRN
werne	VRB(mood=finite,tense=pres,number=sg)
Dit	PRN
horde	VRB(mood=finite,tense=past,number=sg)
noch	ADV(type=-,degree=-)
die	PRN
maget	NOU(type=comm,number=sg)
gerne	ADV(type=-,degree=-)
Si	PRN
dankeds	PRN+VRB(mood=finite,tense=past,number=sg)
gode	NOU(type=comm,number=sg)
sonder	ADP
wanc	NOU(type=comm,number=sg)
Mar	CON(type=coor)
dat	CON(type=sub)
die	PRN
verste	NOU(type=comm,number=sg)
wart	VRB(mood=finite,tense=past,number=sg)
so	ADV(type=-,degree=-)
lanc	ADJ(degree=-)
Dat	PRN
was	VRB(mood=finite,tense=past,number=sg)
hare	PRN
vtermaten	ADV(type=-,degree=-)
leet	NOU(type=comm,number=sg)
Ho	PRN
menech	PRN
werf	NOU(type=comm,number=sg)
si	PRN
wee	INT
gebeet	VRB(mood=inf,tense=-,number=-)
Met	ADP
langen	ADJ(degree=-)
beden	NOU(type=comm,number=pl)
die	PRN
si	PRN
dede	VRB(mood=finite,tense=past,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
met	ADP
disciplinen	NOU(type=comm,number=pl)
mede	ADV(type=-,degree=-)
Die	PRN
migel	ADJ(degree=-)
waren	VRB(mood=finite,tense=past,number=pl)
ende	CON(type=coor)
suar	ADJ(degree=-)
En	ADV(type=-,degree=-)
canic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
nit	ADV(type=-,degree=-)
ouer+waer	ADV(type=-,degree=-)
Geseggen	VRB(mood=inf,tense=-,number=-)
wel	ADV(type=-,degree=-)
want	CON(type=coor)
vele	PRN
was	VRB(mood=finite,tense=past,number=sg)
Der	PRN
beden	NOU(type=comm,number=pl)
die	PRN
sire+ouer	ADV(type=-,degree=-)+PRN+PRN
las	VRB(mood=finite,tense=past,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
der	PRN
groter	ADJ(degree=-)
disciplinen	NOU(type=comm,number=pl)
Dar	ADV(type=-,degree=-)+PRN
si	PRN
van	ADP
irsten	NUM(type=ord)
mede	ADV(type=-,degree=-)+PRN
pinen	VRB(mood=inf,tense=-,number=-)
Hars	PRN
selues	PRN
lijf	NOU(type=comm,number=sg)
begonste	VRB(mood=finite,tense=past,number=sg)
suare	ADV(type=-,degree=-)
Alse+och	CON(type=sub)
si	PRN
alles	PRN
schuldech	ADJ(degree=-)
ware	VRB(mood=finite,tense=past,number=sg)
Dis	PRN
ie	ADV(type=-,degree=-)
uerdinde	VRB(mood=finite,tense=past,number=sg)
in	ADP
sinen	PRN
liue	NOU(type=comm,number=sg)
Die	PRN
man	NOU(type=comm,number=sg)
daer	ADV(type=-,degree=-)+PRN
ic	PRN
v	PRN
aue	ADV(type=-,degree=-)+PRN
scriue	VRB(mood=finite,tense=pres,number=sg)
Mar	CON(type=sub)
wildi	PRN+VRB(mood=finite,tense=pres,number=sg)
dat	CON(type=sub)
ic	PRN
v	PRN
ontbinde	VRB(mood=finite,tense=pres,number=sg)
Na+din+dat	CON(type=sub)
ic	PRN
gescreuen	VRB(mood=part,tense=past,number=-)
uinde	VRB(mood=finite,tense=pres,number=sg)
Hoe	ADV(type=-,degree=-)
na	ADV(type=-,degree=-)
si	PRN
quam	VRB(mood=finite,tense=past,number=sg)
met	ADP
haren	PRN
beden	NOU(type=comm,number=pl)
Der	PRN
eweliker	ADJ(degree=-)
gods	NOU(type=comm,number=sg)
geneden	NOU(type=comm,number=sg)
Jc	PRN
saelt	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
seggen.	VRB(mood=inf,tense=-,number=-)
hort	VRB(mood=finite,tense=pres,number=sg)
na	ADP
mi	PRN
Doe	ADV(type=-,degree=-)
sosterwijs	ADV(type=-,degree=-)
die	PRN
maget	NOU(type=comm,number=sg)
urj	ADJ(degree=-)
Op	ADP
enen	PRN
namelike	ADJ(degree=-)
dach	NOU(type=comm,number=sg)
Geknilt	ADJ(degree=-)
in	ADP
harre	PRN
beden	NOU(type=comm,number=pl)
lach	VRB(mood=finite,tense=past,number=sg)
Begansi	PRN+VRB(mood=finite,tense=past,number=sg)
wonderlike	ADV(type=-,degree=-)
sere	ADV(type=-,degree=-)
Te	ADP
gode	NOU(type=comm,number=sg)
bidden	VRB(mood=inf,tense=-,number=-)
onsen	PRN
here	NOU(type=comm,number=sg)
Dat	CON(type=sub)
hi	PRN
dor	ADP
sine	PRN
onmodechheide	NOU(type=comm,number=sg)
Dis	PRN
heren	NOU(type=comm,number=sg)
sile	NOU(type=comm,number=sg)
al	ADV(type=-,degree=-)
sonder	ADP
beide	NOU(type=comm,number=sg)
Verloessen	VRB(mood=inf,tense=-,number=-)
wilde	VRB(mood=finite,tense=past,number=sg)
ut	ADP
alre	PRN
qualen	NOU(type=comm,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
te	ADP
sinen	PRN
rike	NOU(type=comm,number=sg)
halen	VRB(mood=inf,tense=-,number=-)
Si	PRN
sprac	VRB(mood=finite,tense=past,number=sg)
al+dos	ADV(type=-,degree=-)
almechtech	ADJ(degree=-)
got	NOU(type=comm,number=sg)
Die	PRN
ouer+al	ADV(type=-,degree=-)
hebt	VRB(mood=finite,tense=pres,number=sg)
v	PRN
gebot	NOU(type=comm,number=sg)
Noch	ADV(type=-,degree=-)
biddic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
dat	CON(type=sub)
gi	PRN
ontfaet	VRB(mood=finite,tense=pres,number=sg)
Die	PRN
bede	NOU(type=comm,number=sg)
mijn.	PRN
ende	CON(type=coor)
oc	ADV(type=-,degree=-)
verstaet	VRB(mood=finite,tense=pres,number=sg)
Die	PRN
wart	NOU(type=comm,number=pl)
die	PRN
ic	PRN
v	PRN
segge	VRB(mood=finite,tense=pres,number=sg)
nv	ADV(type=-,degree=-)
Wel	ADV(type=-,degree=-)
lange	ADV(type=-,degree=-)
hebbic	PRN+VRB(mood=finite,tense=pres,number=sg)
gebeden	VRB(mood=part,tense=past,number=-)
v	PRN
Dat	CON(type=sub)
gi	PRN
der	PRN
silen	NOU(type=comm,number=sg)
dant	NOU(type=comm,number=sg)
symoens	NOU(type=proper,number=-)
Gebruken	VRB(mood=inf,tense=-,number=-)
daet	VRB(mood=finite,tense=past,number=sg)
dis	PRN
selues	PRN
loens	NOU(type=comm,number=sg)
Din	PRN
gi	PRN
verleent	VRB(mood=finite,tense=pres,number=sg)
din	PRN
andren	ADJ(degree=-)
silen	NOU(type=comm,number=pl)
Die	PRN
wilen+eer	ADV(type=-,degree=-)
so	ADV(type=-,degree=-)
v	PRN
beuilen	VRB(mood=finite,tense=past,number=pl)
Dat	CON(type=sub)
si	PRN
met	ADP
v	PRN
wel	ADV(type=-,degree=-)
salechlike	ADV(type=-,degree=-)
Nv	ADV(type=-,degree=-)
spannen	VRB(mood=finite,tense=pres,number=pl)
crone	NOU(type=comm,number=sg)
in	ADP
hemelrike	NOU(type=comm,number=sg)
Mar	CON(type=coor)
dis	ADV(type=-,degree=-)
gi	PRN
dit	PRN
in	ADP
uersten	NOU(type=comm,number=sg)
lanc	ADJ(degree=-)
Geleget	VRB(mood=part,tense=past,number=-)
hebbet.	VRB(mood=finite,tense=pres,number=sg)
ende	CON(type=coor)
stranc	ADJ(degree=-)
V	PRN
hebt	VRB(mood=finite,tense=pres,number=sg)
gehouden	VRB(mood=part,tense=past,number=-)
iegen	ADP
hare	PRN
Dis	PRN
seggic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
wel	ADV(type=-,degree=-)
oppenbare	ADV(type=-,degree=-)
Dat	CON(type=sub)
ic	PRN
voert+ane	ADV(type=-,degree=-)
in	ADP
minen	PRN
tide	NOU(type=comm,number=sg)
En	ADV(type=-,degree=-)
werde	VRB(mood=finite,tense=past,number=sg)
meer	ADV(type=-,degree=-)
no	CON(type=coor)
uro	ADJ(degree=-)
no	CON(type=coor)
blide	ADJ(degree=-)
Noch	CON(type=coor)
nemmermeer	ADV(type=-,degree=-)
en	ADV(type=-,degree=-)
sal	VRB(mood=finite,tense=pres,number=sg)
cesseren	VRB(mood=inf,tense=-,number=-)
Van	ADP
disciplinen.	NOU(type=comm,number=sg)
noch	CON(type=coor)
fineren	VRB(mood=inf,tense=-,number=-)
Van	ADP
beden	NOU(type=comm,number=pl)
oc	ADV(type=-,degree=-)
in	ADP
rechten	ADJ(degree=-)
trowen	NOU(type=comm,number=sg)
Tote	ADP
an	ADP
der	PRN
stont	NOU(type=comm,number=sg)
dat	PRN
ic	PRN
sal	VRB(mood=finite,tense=pres,number=sg)
schowen	VRB(mood=inf,tense=-,number=-)
Met	ADP
claren	ADJ(degree=-)
ogen	NOU(type=comm,number=pl)
ende	CON(type=coor)
conden	VRB(mood=finite,tense=past,number=pl)
Geurijt	VRB(mood=part,tense=past,number=-)
die	PRN
sile	NOU(type=comm,number=sg)
ende	CON(type=coor)
al	ADV(type=-,degree=-)
ontbonden	VRB(mood=inf,tense=-,number=-)
Van	ADP
allen	PRN
commere	NOU(type=comm,number=pl)
ende	CON(type=coor)
pinen	NOU(type=comm,number=pl)
Mar	CON(type=sub)
al+in+een	ADV(type=-,degree=-)
met	ADP
disciplinen	NOU(type=comm,number=sg)
Salic	PRN+VRB(mood=finite,tense=pres,number=sg)
mi	PRN
seluen	PRN
so	ADV(type=-,degree=-)
uerduen	VRB(mood=inf,tense=-,number=-)
Ende	CON(type=coor)
al	ADV(type=-,degree=-)
mijn	PRN
lijf	NOU(type=comm,number=sg)
oc	ADV(type=-,degree=-)
so	ADV(type=-,degree=-)
dorbluwen	VRB(mood=inf,tense=-,number=-)
Met	ADP
slagen	NOU(type=comm,number=pl)
groet	ADJ(degree=-)
sonder	ADP
getal	NOU(type=comm,number=sg)
Dat	CON(type=sub)
v	PRN
dis	PRN
here	NOU(type=comm,number=sg)
ontfarmen	VRB(mood=inf,tense=-,number=-)
sal	VRB(mood=finite,tense=pres,number=sg)
er	RES(type=-)
staat	RES(type=-)
Begans	RES(type=-)
met	RES(type=-)
afkortingsteken	RES(type=-)
voor	RES(type=-)
et	RES(type=-)
Op+dat	CON(type=sub)
gi	PRN
langer	ADV(type=-,degree=-)
legget	VRB(mood=finite,tense=pres,number=sg)
it	ADV(type=-,degree=-)
Jn	ADP
versten	NOU(type=comm,number=sg)
dit.	PRN
mar	CON(type=coor)
neen	INT
gi	PRN
nit	ADV(type=-,degree=-)
Dis	PRN
hopic.	PRN+VRB(mood=finite,tense=pres,number=sg)
want	CON(type=coor)
gi	PRN
sijt	VRB(mood=finite,tense=pres,number=sg)
so	ADV(type=-,degree=-)
melde	ADJ(degree=-)
Dat	CON(type=sub)
gi	PRN
die	PRN
sile	NOU(type=comm,number=sg)
met	ADP
gewelde	NOU(type=comm,number=sg)
Saen	ADV(type=-,degree=-)
loessen	VRB(mood=inf,tense=-,number=-)
selt	VRB(mood=finite,tense=pres,number=sg)
ut	ADP
alre	PRN
noet	NOU(type=comm,number=sg)
Die	PRN
si	PRN
noch	ADV(type=-,degree=-)
doget	VRB(mood=finite,tense=pres,number=sg)
alte	ADV(type=-,degree=-)+ADV(type=-,degree=-)
groet	ADJ(degree=-)
Eer	CON(type=sub)
dese	PRN
wart	NOU(type=comm,number=pl)
har	PRN
inde	NOU(type=comm,number=sg)
namen	VRB(mood=finite,tense=past,number=pl)
So	ADV(type=-,degree=-)
sach	VRB(mood=finite,tense=past,number=sg)
die	PRN
maget	NOU(type=comm,number=sg)
waer	ADV(type=-,degree=-)
si	PRN
quamen	VRB(mood=finite,tense=past,number=pl)
Van	ADP
bouen	ADV(type=-,degree=-)
uten	ADP+PRN
hogen	ADJ(degree=-)
trone	NOU(type=comm,number=sg)
Met	ADP
schinen	NOU(type=comm,number=sg)
clar.	ADJ(degree=-)
licht	ADJ(degree=-)
ende	CON(type=coor)
schone	ADJ(degree=-)
Die	PRN
godes	NOU(type=comm,number=sg)
sone	NOU(type=comm,number=sg)
metter	ADP+PRN
silen	NOU(type=comm,number=sg)
Dar+iegen	ADV(type=-,degree=-)+PRN
ginc	VRB(mood=finite,tense=past,number=sg)
die	PRN
maget	NOU(type=comm,number=sg)
knilen	VRB(mood=inf,tense=-,number=-)
Doe	ADV(type=-,degree=-)
sise	PRN+PRN
comen	VRB(mood=inf,tense=-,number=-)
sach	VRB(mood=finite,tense=past,number=sg)
bi	ADP
hare	PRN
Doe	ADV(type=-,degree=-)
sprac	VRB(mood=finite,tense=past,number=sg)
aldos	ADV(type=-,degree=-)
al	ADV(type=-,degree=-)
oppenbare	ADV(type=-,degree=-)
Die	PRN
godes	NOU(type=comm,number=sg)
sone	NOU(type=comm,number=sg)
al+daer	ADV(type=-,degree=-)
hi	PRN
stoet	VRB(mood=finite,tense=past,number=sg)
Lutgart	NOU(type=proper,number=-)
vwe	PRN
bede	NOU(type=comm,number=sg)
die	PRN
gi	PRN
doet	VRB(mood=finite,tense=pres,number=sg)
Si	PRN
heuet	VRB(mood=finite,tense=pres,number=sg)
mi	PRN
hir+neder	ADV(type=-,degree=-)
brachtt.	VRB(mood=part,tense=past,number=-)
Vwe	PRN
minne	NOU(type=comm,number=sg)
die	PRN
mi	PRN
so	ADV(type=-,degree=-)
vercrachtt	VRB(mood=finite,tense=pres,number=sg)
Dat	CON(type=sub)
ic	PRN
en	ADV(type=-,degree=-)
can	VRB(mood=finite,tense=pres,number=sg)
onsseggen	VRB(mood=inf,tense=-,number=-)
nit	ADV(type=-,degree=-)
Dis	PRN
gi	PRN
mi	PRN
biddet.	VRB(mood=finite,tense=pres,number=sg)
si	PRN
mi	PRN
rit	VRB(mood=finite,tense=past,number=sg)
Dat	CON(type=sub)
ic	PRN
hir+neder	ADV(type=-,degree=-)
quame	VRB(mood=finite,tense=past,number=sg)
nv	ADV(type=-,degree=-)
Ende	CON(type=coor)
it	ADV(type=-,degree=-)
die	PRN
sile	NOU(type=comm,number=sg)
toegede	VRB(mood=finite,tense=past,number=sg)
v	PRN
Die	PRN
ic	PRN
hir	ADV(type=-,degree=-)
brenge	VRB(mood=finite,tense=pres,number=sg)
nv	ADV(type=-,degree=-)
met	ADP
mi	PRN
Nv	ADV(type=-,degree=-)
sit	VRB(mood=finite,tense=pres,number=sg)
lutgart	NOU(type=proper,number=-)
dit	PRN
selue	PRN
es	VRB(mood=finite,tense=pres,number=sg)
si	PRN
Die	PRN
sile	NOU(type=comm,number=sg)
daer	ADV(type=-,degree=-)+PRN
gi	PRN
ouer	ADV(type=-,degree=-)+PRN
badet	VRB(mood=finite,tense=past,number=sg)
Nu	ADV(type=-,degree=-)
es	VRB(mood=finite,tense=pres,number=sg)
die	PRN
pine	NOU(type=comm,number=sg)
wel+bestadet	ADJ(degree=-)
Die	PRN
gi	PRN
dor	ADP
hare	PRN
willet	VRB(mood=finite,tense=pres,number=sg)
doegen	VRB(mood=inf,tense=-,number=-)
Want	CON(type=sub)
gi	PRN
se	PRN
sit	VRB(mood=finite,tense=pres,number=sg)
met	ADP
conden	ADJ(degree=-)
ogen	NOU(type=comm,number=pl)
Oc	ADV(type=-,degree=-)
seggic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
wel	ADV(type=-,degree=-)
ouer+waer	ADV(type=-,degree=-)
Dat	CON(type=sub)
si	PRN
wel	ADV(type=-,degree=-)
lange	ADJ(degree=-)
.xl.	NUM(type=car)
ijaer	NOU(type=comm,number=pl)
Jnt	ADP+PRN
vegeuir	NOU(type=comm,number=sg)
hadde	VRB(mood=finite,tense=past,number=sg)
emmer	ADV(type=-,degree=-)
moten	VRB(mood=inf,tense=-,number=-)
Noch	ADV(type=-,degree=-)
wesen.	VRB(mood=inf,tense=-,number=-)
ende	CON(type=coor)
al+daer	ADV(type=-,degree=-)
genoten	VRB(mood=part,tense=past,number=-)
Dis	PRN
si	PRN
uerdinde	VRB(mood=finite,tense=past,number=sg)
in	ADP
haren	PRN
tide	NOU(type=comm,number=sg)
Mar	CON(type=coor)
sijt	VRB(mood=finite,tense=pres,number=sg)
in	ADP
hogen	NOU(type=comm,number=sg)
ende	CON(type=coor)
blide	ADJ(degree=-)
Ende	CON(type=coor)
vwes	PRN
suchtens	NOU(type=comm,number=sg)
aue+staet	VRB(mood=finite,tense=pres,number=sg)
Want	CON(type=coor)
si	PRN
nv	ADV(type=-,degree=-)
heuet	VRB(mood=finite,tense=pres,number=sg)
uol	ADJ(degree=-)
aflaet	NOU(type=comm,number=sg)
Van	ADP
allen	PRN
sondeliken	ADJ(degree=-)
saken	NOU(type=comm,number=pl)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
uerlaet	NOU(type=comm,number=sg)
van	ADP
alre	PRN
wraken	NOU(type=comm,number=sg)
Dis	PRN
sijt	VRB(mood=finite,tense=pres,number=sg)
wel	ADV(type=-,degree=-)
seker	ADJ(degree=-)
kare	NOU(type=comm,number=sg)
mijn	PRN
Dat	PRN
toget	VRB(mood=finite,tense=pres,number=sg)
wel	ADV(type=-,degree=-)
die	PRN
clare	ADJ(degree=-)
schijn	NOU(type=comm,number=sg)
lees	RES(type=-)
ic	PRN
sit	RES(type=-)
met	RES(type=-)
door	RES(type=-)
hand	RES(type=-)
H	RES(type=-)
bovengeschreven	RES(type=-)
e:	RES(type=-)
siet	VRB(mood=finite,tense=pres,number=sg)
sit	RES(type=-)
met	RES(type=-)
door	RES(type=-)
hand	RES(type=-)
H	RES(type=-)
bovengeschreven	RES(type=-)
e:	RES(type=-)
siet	VRB(mood=finite,tense=pres,number=sg)
Daer	ADV(type=-,degree=-)+PRN
gise	PRN+PRN
mede	ADV(type=-,degree=-)+PRN
siet	VRB(mood=finite,tense=pres,number=sg)
uerclart	ADJ(degree=-)
Dis	PRN
mach	VRB(mood=finite,tense=pres,number=sg)
si	PRN
danken	VRB(mood=inf,tense=-,number=-)
v	PRN
lutgart	NOU(type=proper,number=-)
Te	ADP
rechte	NOU(type=comm,number=sg)
meer	ADV(type=-,degree=-)
dan	CON(type=sub)
imene	PRN
el	ADV(type=-,degree=-)
Want	CON(type=sub)
ouer+een	ADV(type=-,degree=-)
dat	PRN
weten	VRB(mood=finite,tense=pres,number=pl)
wel	ADV(type=-,degree=-)
Dat	CON(type=sub)
si	PRN
ne	ADV(type=-,degree=-)
ware	VRB(mood=finite,tense=past,number=sg)
nit	ADV(type=-,degree=-)
so	ADV(type=-,degree=-)
schire	ADJ(degree=-)
Verloesset	VRB(mood=part,tense=past,number=-)
uten	ADP+PRN
uegeuire	NOU(type=comm,number=sg)
Noch	CON(type=coor)
oc	ADV(type=-,degree=-)
verheuen	VRB(mood=part,tense=past,number=-)
also	ADV(type=-,degree=-)
saen	ADV(type=-,degree=-)
Te	ADP
hemele.	NOU(type=comm,number=sg)
en	CON(type=-)
haddi	PRN+VRB(mood=finite,tense=past,number=sg)
gedaen	VRB(mood=part,tense=past,number=-)
Die	PRN
hare	PRN
wel	ADV(type=-,degree=-)
in	ADP
staden	NOU(type=comm,number=sg)
stoedt	VRB(mood=finite,tense=past,number=sg)
Warbi	ADV(type=-,degree=-)+PRN
si	PRN
bliuen	VRB(mood=inf,tense=-,number=-)
sal	VRB(mood=finite,tense=pres,number=sg)
uerhoedt	ADJ(degree=-)
Voert	ADV(type=-,degree=-)
ewelic	ADV(type=-,degree=-)
van	ADP
allen	PRN
sere.	NOU(type=comm,number=sg)
Doe	ADV(type=-,degree=-)
sprac	VRB(mood=finite,tense=past,number=sg)
die	PRN
sile	NOU(type=comm,number=sg)
oc.	ADV(type=-,degree=-)
got	NOU(type=comm,number=sg)
die	PRN
here	NOU(type=comm,number=sg)
Hi	PRN
motu	PRN+VRB(mood=finite,tense=pres,number=sg)
lonen	VRB(mood=inf,tense=-,number=-)
maget	NOU(type=comm,number=sg)
vrj	ADJ(degree=-)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
uergelden	VRB(mood=inf,tense=-,number=-)
dat	CON(type=sub)
gi	PRN
mi	PRN
Verloesset	VRB(mood=part,tense=past,number=-)
hebt	VRB(mood=finite,tense=pres,number=sg)
ut	ADP
alre	PRN
pinen	NOU(type=comm,number=pl)
V	PRN
uasten	NOU(type=comm,number=sg)
ende	CON(type=coor)
v	PRN
disciplinen	NOU(type=comm,number=pl)
Daer	ADV(type=-,degree=-)+PRN
gi	PRN
v	PRN
seluen	PRN
mede	ADV(type=-,degree=-)+PRN
quellet	VRB(mood=finite,tense=pres,number=sg)
Mi	PRN
heuet	VRB(mood=finite,tense=pres,number=sg)
alle	PRN
noet	NOU(type=comm,number=sg)
beuellet	VRB(mood=part,tense=past,number=-)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
uan	ADP
.xl.	NUM(type=car)
ijaren	NOU(type=comm,number=pl)
lanc	ADJ(degree=-)
Dis	PRN
motti	PRN+VRB(mood=finite,tense=pres,number=sg)
hebben	VRB(mood=inf,tense=-,number=-)
groten	ADJ(degree=-)
danc	NOU(type=comm,number=sg)
Dat	PRN
uegeuir	NOU(type=comm,number=sg)
al	ADV(type=-,degree=-)
af+gecochtt	VRB(mood=part,tense=past,number=-)
Mar	CON(type=coor)
dat	CON(type=sub)
gi	PRN
mijns	PRN
so	ADV(type=-,degree=-)
wale	ADV(type=-,degree=-)
rochtt	VRB(mood=finite,tense=past,number=sg)
Dat	CON(type=sub)
motu	PRN+VRB(mood=finite,tense=pres,number=sg)
lonen	VRB(mood=inf,tense=-,number=-)
got	NOU(type=comm,number=sg)
die	PRN
goede	ADJ(degree=-)
Dos	ADV(type=-,degree=-)
schit+en+wech	VRB(mood=finite,tense=past,number=sg)
met	ADP
bliden	ADJ(degree=-)
moede	NOU(type=comm,number=sg)
Die	PRN
sile.	NOU(type=comm,number=sg)
ende	CON(type=coor)
es	VRB(mood=finite,tense=pres,number=sg)
opwert	ADV(type=-,degree=-)
gecregen	VRB(mood=part,tense=past,number=-)
Met	ADP
gode	NOU(type=comm,number=sg)
die	PRN
se	PRN
heft	VRB(mood=finite,tense=pres,number=sg)
gedregen	VRB(mood=part,tense=past,number=-)
Ter	ADP+PRN
groter	ADJ(degree=-)
feesten	NOU(type=comm,number=sg)
ginder+bouen	ADV(type=-,degree=-)
Daer	ADV(type=-,degree=-)
alle	PRN
dingle	NOU(type=comm,number=pl)+PRN
gode	NOU(type=comm,number=sg)
louen	VRB(mood=finite,tense=pres,number=pl)
Doe	ADV(type=-,degree=-)
was	VRB(mood=finite,tense=past,number=sg)
die	PRN
maget	NOU(type=comm,number=sg)
harde	ADV(type=-,degree=-)
uro	ADJ(degree=-)
Dis	CON(type=sub)
si	PRN
uerloesset	VRB(mood=part,tense=past,number=-)
sach	VRB(mood=finite,tense=past,number=sg)
also	ADV(type=-,degree=-)
Die	PRN
sile.	NOU(type=comm,number=sg)
want	CON(type=coor)
si	PRN
was	VRB(mood=finite,tense=past,number=sg)
uerlaten	VRB(mood=part,tense=past,number=-)
Van	ADP
groter	ADJ(degree=-)
pinen	NOU(type=comm,number=pl)
utermaten	ADV(type=-,degree=-)
Daer	ADV(type=-,degree=-)+PRN
si	PRN
teuoren	ADV(type=-,degree=-)
mede	ADV(type=-,degree=-)+PRN
suare	ADJ(degree=-)
Plach	VRB(mood=finite,tense=past,number=sg)
al+in+een	ADV(type=-,degree=-)
uerladen	VRB(mood=part,tense=past,number=-)
hare	PRN
Tote	ADP
op	ADP
din	PRN
nameliken	ADJ(degree=-)
dach	NOU(type=comm,number=sg)
Dat	PRN
si	PRN
die	PRN
sile	NOU(type=comm,number=sg)
comen	VRB(mood=inf,tense=-,number=-)
sach	VRB(mood=finite,tense=past,number=sg)
Met	ADP
groten	ADJ(degree=-)
schine	NOU(type=comm,number=sg)
also	ADV(type=-,degree=-)
uerclart	ADJ(degree=-)
Dis	PRN
dankde	VRB(mood=finite,tense=past,number=sg)
godes	NOU(type=comm,number=sg)
brut	NOU(type=comm,number=sg)
lutgart	NOU(type=proper,number=-)
Met	ADP
blider	ADJ(degree=-)
herten	NOU(type=comm,number=sg)
menechfout	ADV(type=-,degree=-)
Der	PRN
eweliker	ADJ(degree=-)
gods	NOU(type=comm,number=sg)
gewout	NOU(type=comm,number=sg)
Dat	PRN
es	VRB(mood=finite,tense=pres,number=sg)
got	NOU(type=comm,number=sg)
selue.	PRN
dis	CON(type=sub)
so	ADV(type=-,degree=-)
saen	ADV(type=-,degree=-)
Van	ADP
hem	PRN
was	VRB(mood=finite,tense=past,number=sg)
hare	PRN
bede	NOU(type=comm,number=sg)
ontfaen	VRB(mood=part,tense=past,number=-)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
met	ADP
eeren	NOU(type=comm,number=sg)
ende	CON(type=coor)
vromen	NOU(type=comm,number=sg)
Die	PRN
dinc	NOU(type=comm,number=pl)
te	ADP
goeden	ADJ(degree=-)
pointe	NOU(type=comm,number=pl)
comen	VRB(mood=finite,tense=pres,number=pl)
Hoe	ADV(type=-,degree=-)
si	PRN
begerde	VRB(mood=finite,tense=past,number=sg)
wesen	VRB(mood=inf,tense=-,number=-)
uersekert	ADJ(degree=-)
van	ADP
haren	PRN
leuene	NOU(type=comm,number=sg)
ende	CON(type=coor)
hoe	ADV(type=-,degree=-)
si	PRN
daer+af	ADV(type=-,degree=-)+PRN
versekert	VRB(mood=part,tense=past,number=-)
wart	VRB(mood=finite,tense=past,number=sg)
.vi.	NUM(type=car)
Men	PRN
mach	VRB(mood=finite,tense=pres,number=sg)
hir	ADV(type=-,degree=-)
horen	VRB(mood=inf,tense=-,number=-)
wonder	NOU(type=comm,number=sg)
groet	ADJ(degree=-)
Hoe	ADV(type=-,degree=-)
got	NOU(type=comm,number=sg)
die	PRN
alle	PRN
dinc	NOU(type=comm,number=pl)
geboet	VRB(mood=finite,tense=past,number=sg)
Was	VRB(mood=finite,tense=past,number=sg)
ere	PRN
maget	NOU(type=comm,number=sg)
onderdaen	ADJ(degree=-)
Die	PRN
wel	ADV(type=-,degree=-)
te	ADP
rechte	NOU(type=comm,number=sg)
welt	VRB(mood=finite,tense=pres,number=sg)
verstaen	VRB(mood=inf,tense=-,number=-)
Dat	PRN
ic	PRN
hem	PRN
segge.	VRB(mood=finite,tense=pres,number=sg)
hi	PRN
mach	VRB(mood=finite,tense=pres,number=sg)
bekinnen	VRB(mood=inf,tense=-,number=-)
Die	PRN
uriheit	NOU(type=comm,number=sg)
uan	ADP
gerechter	ADJ(degree=-)
minnen	NOU(type=comm,number=sg)
Daer	ADV(type=-,degree=-)
minne	NOU(type=comm,number=sg)
int	ADP+PRN
herte	NOU(type=comm,number=sg)
es	VRB(mood=finite,tense=pres,number=sg)
wel+bedegen	ADJ(degree=-)
Daer	ADV(type=-,degree=-)+PRN
plegt	VRB(mood=finite,tense=pres,number=sg)
si	PRN
gerne	ADV(type=-,degree=-)
toe	ADV(type=-,degree=-)+PRN
gewegen	VRB(mood=inf,tense=-,number=-)
Van	ADP
alre	PRN
baten	NOU(type=comm,number=sg)
groet	ADJ(degree=-)
gewin	NOU(type=comm,number=sg)
Der	PRN
silen	NOU(type=comm,number=sg)
daer	ADV(type=-,degree=-)+PRN
si	PRN
wonet	VRB(mood=finite,tense=pres,number=sg)
in	ADV(type=-,degree=-)+PRN
Dat	PRN
comt	VRB(mood=finite,tense=pres,number=sg)
bidie+alsic	CON(type=sub)+PRN
v	PRN
seide	VRB(mood=finite,tense=past,number=sg)
Dat	CON(type=sub)
got	NOU(type=comm,number=sg)
met	ADP
sire	PRN
almechtechheide	NOU(type=comm,number=sg)
Hem	PRN
seluen	PRN
onderdanech	ADJ(degree=-)
geuet	VRB(mood=finite,tense=pres,number=sg)
Der	PRN
silen	NOU(type=comm,number=sg)
die	PRN
in	ADP
minnen	NOU(type=comm,number=sg)
leuet	VRB(mood=finite,tense=pres,number=sg)
Dat	PRN
prouic	PRN+VRB(mood=finite,tense=pres,number=sg)
bi	ADP
lutgarden	NOU(type=proper,number=-)
wale	ADV(type=-,degree=-)
Die	PRN
sonder	ADP
alle	PRN
wedertale	NOU(type=comm,number=sg)
Beide	CON(type=coor)
also	ADV(type=-,degree=-)
uaste	ADJ(degree=-)
ende	CON(type=coor)
also	ADV(type=-,degree=-)
stranc	ADJ(degree=-)
Met	ADP
harre	PRN
starker	ADJ(degree=-)
minnen	NOU(type=comm,number=sg)
duanc	VRB(mood=finite,tense=past,number=sg)
Den	PRN
hogsten	ADJ(degree=-)
coninc	NOU(type=comm,number=sg)
onsen	PRN
here	NOU(type=comm,number=sg)
Dat	CON(type=sub)
si	PRN
uan	ADP
hem	PRN
ilanc+so+mere	ADV(type=-,degree=-)+ADV(type=-,degree=-)+ADV(type=-,degree=-)+ADV(type=-,degree=-)+CON(type=sub)
Jn	ADP
gracien	NOU(type=comm,number=sg)
wart	VRB(mood=finite,tense=past,number=sg)
op+uerheuen	VRB(mood=part,tense=past,number=-)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
ilanc+so+eer	ADV(type=-,degree=-)
gegeuen	VRB(mood=part,tense=past,number=-)
Wart	VRB(mood=finite,tense=past,number=sg)
hare	PRN
algader	PRN
dat	PRN
si	PRN
sochte	VRB(mood=finite,tense=past,number=sg)
Want	CON(type=sub)
hijs	PRN+PRN
onsseggen	VRB(mood=inf,tense=-,number=-)
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
mochte	VRB(mood=finite,tense=past,number=sg)
Noch	CON(type=coor)
aue+breken	VRB(mood=inf,tense=-,number=-)
met	ADP
gewoude	NOU(type=comm,number=sg)
Der	PRN
minnen	NOU(type=comm,number=sg)
dat	PRN
si	PRN
hebben	VRB(mood=inf,tense=-,number=-)
woude	VRB(mood=finite,tense=past,number=sg)
Nochtan	ADV(type=-,degree=-)
so	ADV(type=-,degree=-)
schinet	PRN+VRB(mood=finite,tense=pres,number=sg)
meere	PRN
wonder	NOU(type=comm,number=sg)
Dat	CON(type=sub)
si	PRN
die	PRN
gode	NOU(type=comm,number=sg)
brachte	VRB(mood=finite,tense=past,number=sg)
al	ADV(type=-,degree=-)
onder	VRB(mood=finite,tense=past,number=sg)
Met	ADP
hare	PRN
krachtechliker	ADJ(degree=-)
minnen	NOU(type=comm,number=sg)
Noit	ADV(type=-,degree=-)
dogt	NOU(type=comm,number=sg)
in	ADP
hare	PRN
en	ADV(type=-,degree=-)
wilde	VRB(mood=finite,tense=past,number=sg)
kinnen	VRB(mood=inf,tense=-,number=-)
Noch	CON(type=coor)
nimene	PRN
horen	VRB(mood=inf,tense=-,number=-)
prisen	VRB(mood=inf,tense=-,number=-)
mede	ADV(type=-,degree=-)
Dis	PRN
goedes	NOU(type=comm,number=sg)
iwent	PRN
dat	PRN
si	PRN
dede	VRB(mood=finite,tense=past,number=sg)
Mar	CON(type=coor)
alle	PRN
wile	NOU(type=comm,number=pl)
ende	CON(type=coor)
alle	ADV(type=-,degree=-)
wege	ADV(type=-,degree=-)
Hilt	VRB(mood=finite,tense=past,number=sg)
si	PRN
har	PRN
seluen	PRN
ouer	ADP
trege	ADJ(degree=-)
Ende	CON(type=coor)
ouer	ADP
slap	ADJ(degree=-)
ende	CON(type=coor)
ongerakt	ADJ(degree=-)
Oc	ADV(type=-,degree=-)
heuet	VRB(mood=finite,tense=pres,number=sg)
si	PRN
altoes	ADV(type=-,degree=-)
besakt	VRB(mood=part,tense=past,number=-)
Dis	PRN
goedes	NOU(type=comm,number=sg)
dat	PRN
men	PRN
sach	VRB(mood=finite,tense=past,number=sg)
an	ADP
hare	PRN
Mar	CON(type=coor)
och	CON(type=sub)
si	PRN
uol	ADJ(degree=-)
uan	ADP
sonden	NOU(type=comm,number=pl)
ware	VRB(mood=finite,tense=past,number=sg)
Was	VRB(mood=finite,tense=past,number=sg)
si	PRN
altoes	ADV(type=-,degree=-)
in	ADP
groten	ADJ(degree=-)
sorgen	NOU(type=comm,number=pl)
er	RES(type=-)
staat	RES(type=-)
wiart	VRB(mood=finite,tense=past,number=sg)
Want	CON(type=sub)
si	PRN
wel	ADV(type=-,degree=-)
wiste	VRB(mood=finite,tense=past,number=sg)
dat	CON(type=sub)
uerborgen	ADJ(degree=-)
Den	PRN
godes	NOU(type=comm,number=sg)
ogen	NOU(type=comm,number=pl)
dinc	NOU(type=comm,number=sg)
engeene	PRN
Ne	ADV(type=-,degree=-)
mochte	VRB(mood=finite,tense=past,number=sg)
sijn	VRB(mood=inf,tense=-,number=-)
no	CON(type=coor)
groet	ADJ(degree=-)
no	CON(type=coor)
cleene	ADJ(degree=-)
Die	PRN
men	PRN
in	ADP
dese	PRN
werelt	NOU(type=comm,number=sg)
doet	VRB(mood=finite,tense=pres,number=sg)
Dis	PRN
was	VRB(mood=finite,tense=past,number=sg)
beuaen	VRB(mood=part,tense=past,number=-)
die	PRN
maget	NOU(type=comm,number=sg)
goet	ADJ(degree=-)
Met	ADP
groten	ADJ(degree=-)
uare	NOU(type=comm,number=sg)
in	ADP
allen	PRN
stonden	NOU(type=comm,number=pl)
Si	PRN
duchtte	VRB(mood=finite,tense=past,number=sg)
dat	CON(type=sub)
se	PRN
om	ADP
hare	PRN
sonden	NOU(type=comm,number=pl)
Die	PRN
goede	ADJ(degree=-)
got	NOU(type=comm,number=sg)
uertuschen	VRB(mood=inf,tense=-,number=-)
mochte	VRB(mood=finite,tense=past,number=sg)
Waert	PRN+VRB(mood=finite,tense=past,number=sg)
dat	CON(type=sub)
hi	PRN
binnen	ADV(type=-,degree=-)
wel	ADV(type=-,degree=-)
besochte	VRB(mood=finite,tense=past,number=sg)
Har	PRN
herte	NOU(type=comm,number=sg)
daer	ADV(type=-,degree=-)+PRN
si	PRN
binnen	ADV(type=-,degree=-)+PRN
droch	VRB(mood=finite,tense=past,number=sg)
Dat	PRN
haren	PRN
sinne	NOU(type=comm,number=sg)
meest	ADV(type=-,degree=-)
uerwoch	VRB(mood=finite,tense=past,number=sg)
Mar	CON(type=coor)
doe	CON(type=sub)
die	PRN
magt	NOU(type=comm,number=sg)
van	ADP
hogen	ADJ(degree=-)
prise	NOU(type=comm,number=sg)
Geweset	VRB(mood=part,tense=past,number=-)
hadde	VRB(mood=finite,tense=past,number=sg)
in	ADP
derre	PRN
wise	NOU(type=comm,number=sg)
Jn	ADP
groten	ADJ(degree=-)
vreesen	NOU(type=comm,number=sg)
lange	ADJ(degree=-)
stonde	NOU(type=comm,number=sg)
Ende	CON(type=coor)
in	ADP
har	PRN
seluen	PRN
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
conde	VRB(mood=finite,tense=past,number=sg)
Geuinden	VRB(mood=inf,tense=-,number=-)
it	PRN
dat	CON(type=sub)
haren	PRN
moede	NOU(type=comm,number=sg)
Of	CON(type=sub)
cleene	ADJ(degree=-)
of	CON(type=sub)
groet	ADJ(degree=-)
in	ADP
staden	NOU(type=comm,number=sg)
stoede	VRB(mood=finite,tense=past,number=sg)
Began	VRB(mood=finite,tense=past,number=sg)
si	PRN
suken	VRB(mood=inf,tense=-,number=-)
enen	PRN
raet	NOU(type=comm,number=sg)
Warbi	ADV(type=-,degree=-)+PRN
si	PRN
enech	PRN
toeuerlaet	NOU(type=comm,number=sg)
Vercrigen	VRB(mood=inf,tense=-,number=-)
mochte	VRB(mood=finite,tense=past,number=sg)
dat	CON(type=sub)
se	PRN
sachte	ADV(type=-,degree=-)
Te	ADP
troste	NOU(type=comm,number=sg)
ende	CON(type=coor)
oc	ADV(type=-,degree=-)
te	ADP
rasten	NOU(type=comm,number=sg)
brachte	VRB(mood=finite,tense=past,number=sg)
Din	PRN
raet	NOU(type=comm,number=sg)
si	PRN
heuet	VRB(mood=finite,tense=pres,number=sg)
uonden	VRB(mood=part,tense=past,number=-)
saen	ADV(type=-,degree=-)
Jc	PRN
sal	VRB(mood=finite,tense=pres,number=sg)
v	PRN
seggen	VRB(mood=inf,tense=-,number=-)
hoe+gedaen	ADJ(degree=-)
Op	ADP
eenen	PRN
nameliken	ADJ(degree=-)
dach	NOU(type=comm,number=sg)
Daer	CON(type=sub)
si	PRN
in	ADP
kniegebede	NOU(type=comm,number=sg)
lach	VRB(mood=finite,tense=past,number=sg)
Began	VRB(mood=finite,tense=past,number=sg)
si	PRN
bidden	VRB(mood=inf,tense=-,number=-)
ende	CON(type=coor)
manen	VRB(mood=inf,tense=-,number=-)
Al	ADV(type=-,degree=-)
suchtende	VRB(mood=part,tense=pres,number=-)
met	ADP
groten	ADJ(degree=-)
tranen	NOU(type=comm,number=pl)
Din	PRN
hosten	ADJ(degree=-)
coninc	NOU(type=comm,number=sg)
onsen	PRN
here	NOU(type=comm,number=sg)
Dat	CON(type=sub)
hi	PRN
die	PRN
vrese	NOU(type=comm,number=sg)
die	PRN
so	ADV(type=-,degree=-)
sere	ADV(type=-,degree=-)
Verloed	VRB(mood=finite,tense=past,number=sg)
har	PRN
herte.	NOU(type=comm,number=sg)
al	ADV(type=-,degree=-)
aue+leide	VRB(mood=finite,tense=past,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
uerleende	VRB(mood=finite,tense=past,number=sg)
sekerheide	NOU(type=comm,number=sg)
Der	PRN
silen	NOU(type=comm,number=sg)
binnen+dat	CON(type=sub)
si	PRN
lise	ADV(type=-,degree=-)
Ten	ADP+PRN
eweliken	ADJ(degree=-)
paradise	NOU(type=comm,number=sg)
Na	ADP
desen	PRN
liue	NOU(type=comm,number=sg)
soude	VRB(mood=finite,tense=past,number=sg)
comen	VRB(mood=inf,tense=-,number=-)
Dos	ADV(type=-,degree=-)
mochte	VRB(mood=finite,tense=past,number=sg)
sijn	VRB(mood=inf,tense=-,number=-)
hare	PRN
al	ADV(type=-,degree=-)
benomen	VRB(mood=part,tense=past,number=-)
Die	PRN
grote	ADJ(degree=-)
ureese	NOU(type=comm,number=sg)
ende	CON(type=coor)
anders	ADV(type=-,degree=-)
nit	ADV(type=-,degree=-)
Mar	CON(type=coor)
eer	CON(type=sub)
die	PRN
maget	NOU(type=comm,number=sg)
denen	ADV(type=-,degree=-)
schit	VRB(mood=finite,tense=past,number=sg)
Ende	CON(type=coor)
eer	CON(type=sub)
si	PRN
kirde	VRB(mood=finite,tense=past,number=sg)
uan	ADP
der	PRN
stat	NOU(type=comm,number=sg)
Al+daer	ADV(type=-,degree=-)
si	PRN
dis	PRN
te	ADP
godes	NOU(type=comm,number=sg)
bat	VRB(mood=finite,tense=past,number=sg)
So	ADV(type=-,degree=-)
es	VRB(mood=finite,tense=pres,number=sg)
si	PRN
worden	VRB(mood=part,tense=past,number=-)
wel	ADV(type=-,degree=-)
in	ADP
hogen	NOU(type=comm,number=sg)
Meer	PRN
dan	CON(type=sub)
v	PRN
imen	PRN
soude	VRB(mood=finite,tense=past,number=sg)
mogen	VRB(mood=inf,tense=-,number=-)
Geseggen	VRB(mood=inf,tense=-,number=-)
wel	ADV(type=-,degree=-)
met	ADP
didscher	ADJ(degree=-)
spraken	NOU(type=comm,number=sg)
Want	CON(type=coor)
daer	ADV(type=-,degree=-)
si	PRN
lach	VRB(mood=finite,tense=past,number=sg)
met	ADP
terre	ADP+PRN
saken	NOU(type=comm,number=sg)
lees	RES(type=-)
uercuschen	VRB(mood=inf,tense=-,number=-)
Onledech.	ADJ(degree=-)
ende	CON(type=coor)
bat	VRB(mood=finite,tense=past,number=sg)
te	ADP
gode	NOU(type=comm,number=sg)
So	ADV(type=-,degree=-)
quam	VRB(mood=finite,tense=past,number=sg)
geulogen	VRB(mood=part,tense=past,number=-)
een	NUM(type=car)
sijn	PRN
bode	NOU(type=comm,number=sg)
Van	ADP
bouen	ADV(type=-,degree=-)
uten	ADP+PRN
hogen	ADJ(degree=-)
trone	NOU(type=comm,number=sg)
Jc	PRN
wane	VRB(mood=finite,tense=pres,number=sg)
het	PRN
was	VRB(mood=finite,tense=past,number=sg)
en	PRN
ingel	NOU(type=comm,number=sg)
schone	ADJ(degree=-)
Die	PRN
hare	PRN
brachte	VRB(mood=finite,tense=past,number=sg)
selc	PRN
salut	NOU(type=comm,number=sg)
Daer	ADV(type=-,degree=-)+PRN
si	PRN
es	VRB(mood=finite,tense=pres,number=sg)
mede	ADV(type=-,degree=-)+PRN
comen	VRB(mood=part,tense=past,number=-)
vt	ADP
Der	PRN
ureesen	NOU(type=comm,number=sg)
groet	ADJ(degree=-)
daer	ADV(type=-,degree=-)+PRN
si	PRN
teuoren	ADV(type=-,degree=-)
Af	ADV(type=-,degree=-)+PRN
hadde	VRB(mood=finite,tense=past,number=sg)
commer	NOU(type=comm,number=sg)
ende	CON(type=coor)
toren	NOU(type=comm,number=sg)
Gedoget.	VRB(mood=part,tense=past,number=-)
ende	CON(type=coor)
groten	ADJ(degree=-)
uaer	NOU(type=comm,number=sg)
Ende	CON(type=coor)
alse	CON(type=sub)
comen	VRB(mood=part,tense=past,number=-)
was	VRB(mood=finite,tense=past,number=sg)
al+daer	ADV(type=-,degree=-)
Die	PRN
bode.	NOU(type=comm,number=sg)
sprac	VRB(mood=finite,tense=past,number=sg)
hi	PRN
ende	CON(type=coor)
seide	VRB(mood=finite,tense=past,number=sg)
Lutgart	NOU(type=proper,number=-)
die	PRN
godes	NOU(type=comm,number=sg)
mogentheide	NOU(type=comm,number=sg)
Si	PRN
motu	PRN+VRB(mood=finite,tense=pres,number=sg)
eewelic	ADV(type=-,degree=-)
gesterken	VRB(mood=inf,tense=-,number=-)
Jn	ADP
dogden	NOU(type=comm,number=pl)
ende	CON(type=coor)
in	ADP
goeden	ADJ(degree=-)
werken	NOU(type=comm,number=pl)
Jc	PRN
ben	VRB(mood=finite,tense=pres,number=sg)
hir	ADV(type=-,degree=-)
comen	VRB(mood=part,tense=past,number=-)
want	CON(type=sub)
ic	PRN
weet	VRB(mood=finite,tense=pres,number=sg)
Dat	CON(type=sub)
gi	PRN
gedoeget	VRB(mood=part,tense=past,number=-)
hebbet	VRB(mood=finite,tense=pres,number=sg)
leet	NOU(type=comm,number=sg)
Van	ADP
ureesen	NOU(type=comm,number=sg)
die	PRN
v	PRN
heft	VRB(mood=finite,tense=pres,number=sg)
gedert	VRB(mood=part,tense=past,number=-)
Wel	ADV(type=-,degree=-)
lange.	ADV(type=-,degree=-)
want	CON(type=sub)
gi	PRN
sijt	VRB(mood=finite,tense=pres,number=sg)
ueruert	ADJ(degree=-)
Van+din+dat	CON(type=sub)
gi	PRN
nit	ADV(type=-,degree=-)
wel	ADV(type=-,degree=-)
en	ADV(type=-,degree=-)
kinnet	VRB(mood=finite,tense=pres,number=sg)
Alsi	CON(type=sub)+VRB(mood=finite,tense=pres,number=sg)
dat	CON(type=sub)
gi	PRN
nv	ADV(type=-,degree=-)
gode	NOU(type=comm,number=sg)
minnet	VRB(mood=finite,tense=pres,number=sg)
Met	ADP
starken	ADJ(degree=-)
wille	NOU(type=comm,number=sg)
ende	CON(type=coor)
oc	ADV(type=-,degree=-)
met	ADP
urien	ADJ(degree=-)
Wartoe	ADV(type=-,degree=-)+PRN
die	PRN
minne	NOU(type=comm,number=sg)
sal	VRB(mood=finite,tense=pres,number=sg)
gedien	VRB(mood=inf,tense=-,number=-)
Want	CON(type=coor)
dikke	ADV(type=-,degree=-)
siet	VRB(mood=finite,tense=pres,number=sg)
men	PRN
die	PRN
wel	ADV(type=-,degree=-)
sere	ADV(type=-,degree=-)
Van	ADP
irsten	NUM(type=ord)
minnen	VRB(mood=finite,tense=pres,number=pl)
onsen	PRN
here	NOU(type=comm,number=sg)
Dat	CON(type=sub)
si	PRN
hen	PRN
laten	VRB(mood=finite,tense=pres,number=pl)
so	ADV(type=-,degree=-)
uertregen	VRB(mood=inf,tense=-,number=-)
Dat	CON(type=sub)
si	PRN
ne	ADV(type=-,degree=-)
conen	VRB(mood=finite,tense=pres,number=pl)
nit	ADV(type=-,degree=-)
uolplegen	VRB(mood=inf,tense=-,number=-)
Der	PRN
godes	NOU(type=comm,number=sg)
minnen	NOU(type=comm,number=sg)
daer	ADV(type=-,degree=-)+PRN
si	PRN
in	ADV(type=-,degree=-)+PRN
So	ADV(type=-,degree=-)
wel	ADV(type=-,degree=-)
hen	PRN
proeueden	VRB(mood=finite,tense=past,number=pl)
int	ADP+PRN
begin	NOU(type=comm,number=sg)
Daer+omme	ADV(type=-,degree=-)+PRN
onssiedi	PRN+VRB(mood=finite,tense=pres,number=sg)
dat	CON(type=sub)
uan	ADP
din	PRN
Oc	ADV(type=-,degree=-)
die	PRN
gelike	NOU(type=comm,number=sg)
v	PRN
mach	VRB(mood=finite,tense=pres,number=sg)
geschin	VRB(mood=inf,tense=-,number=-)
Mar	CON(type=coor)
sijt	VRB(mood=finite,tense=pres,number=sg)
terasten	ADP+NOU(type=comm,number=sg)
maget	NOU(type=comm,number=sg)
schone	ADJ(degree=-)
Die	PRN
hogste	ADJ(degree=-)
coninc	NOU(type=comm,number=sg)
uan	ADP
den	PRN
trone	NOU(type=comm,number=sg)
Ontbiedet	VRB(mood=finite,tense=pres,number=sg)
v	PRN
dat	CON(type=sub)
hem	PRN
so	ADV(type=-,degree=-)
wale	ADV(type=-,degree=-)
Becomt	VRB(mood=finite,tense=pres,number=sg)
v	PRN
leuen	NOU(type=comm,number=sg)
altemale	ADV(type=-,degree=-)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
v	PRN
wesen.	NOU(type=comm,number=sg)
dat	CON(type=sub)
hijt	PRN+PRN
al	ADV(type=-,degree=-)
Te	ADP
goeden	ADJ(degree=-)
inde	NOU(type=comm,number=sg)
brengen	VRB(mood=inf,tense=-,number=-)
sal	VRB(mood=finite,tense=pres,number=sg)
Dit	PRN
heft	VRB(mood=finite,tense=pres,number=sg)
hi	PRN
v	PRN
ontboden	VRB(mood=part,tense=past,number=-)
nv	ADV(type=-,degree=-)
Dis	PRN
danket	VRB(mood=finite,tense=pres,number=sg)
hem	PRN
dat	PRN
radic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
So	ADV(type=-,degree=-)
mogdi	PRN+VRB(mood=finite,tense=pres,number=sg)
oc	ADV(type=-,degree=-)
wel	ADV(type=-,degree=-)
gerne.	ADV(type=-,degree=-)
want	CON(type=sub)
Gi	PRN
selet	VRB(mood=finite,tense=pres,number=sg)
iegen	ADP
din	PRN
viant	NOU(type=comm,number=sg)
Met	ADP
sire	PRN
helpen	NOU(type=comm,number=sg)
uechten	VRB(mood=inf,tense=-,number=-)
sege	NOU(type=comm,number=sg)
de	RES(type=-)
tweede	RES(type=-)
o	RES(type=-)
ten	RES(type=-)
onrechte	RES(type=-)
gewijzigd	RES(type=-)
in	RES(type=-)
e:	RES(type=-)
ontbeden	VRB(mood=part,tense=past,number=-)
Nv	ADV(type=-,degree=-)
blijft	VRB(mood=finite,tense=pres,number=sg)
te	ADP
gode.	NOU(type=comm,number=sg)
ic	PRN
uare+en+wege	VRB(mood=finite,tense=pres,number=sg)
Doe	CON(type=sub)
dese	PRN
wart	NOU(type=comm,number=pl)
gesproken	VRB(mood=part,tense=past,number=-)
waren	VRB(mood=finite,tense=past,number=pl)
So	ADV(type=-,degree=-)
es	VRB(mood=finite,tense=pres,number=sg)
die	PRN
bode	NOU(type=comm,number=sg)
en+wech+geuaren	VRB(mood=part,tense=past,number=-)
Tin	ADP+PRN
schonen	ADJ(degree=-)
paradise	NOU(type=comm,number=sg)
wert	ADP
Die	PRN
maget	NOU(type=comm,number=sg)
die	PRN
so	ADV(type=-,degree=-)
was	VRB(mood=finite,tense=past,number=sg)
ueruert	ADJ(degree=-)
Teuoren.	ADV(type=-,degree=-)
doe	ADV(type=-,degree=-)
si	PRN
dat	CON(type=sub)
verstoet	VRB(mood=finite,tense=past,number=sg)
Van	VRB(mood=finite,tense=past,number=sg)
si	PRN
getrostet	VRB(mood=part,tense=past,number=-)
haren	PRN
moet	NOU(type=comm,number=sg)
So+dat	CON(type=sub)
si	PRN
an	ADP
din	PRN
seluen	PRN
tide	NOU(type=comm,number=sg)
Stont+op	VRB(mood=finite,tense=past,number=sg)
in	ADP
hogen	NOU(type=comm,number=sg)
ende	CON(type=coor)
blide	ADJ(degree=-)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
gepaiset	ADJ(degree=-)
harde	ADV(type=-,degree=-)
wale	ADV(type=-,degree=-)
Want	CON(type=sub)
se	PRN
dis	PRN
godes	NOU(type=comm,number=sg)
boden	NOU(type=comm,number=sg)
tale	NOU(type=comm,number=sg)
Terasten	ADP+NOU(type=comm,number=sg)
hadde	VRB(mood=finite,tense=past,number=sg)
weder	ADV(type=-,degree=-)
brachtt	VRB(mood=part,tense=past,number=-)
Tin	ADP+PRN
tiden.	NOU(type=comm,number=sg)
ende	CON(type=coor)
wel	ADV(type=-,degree=-)
gesachtt	VRB(mood=part,tense=past,number=-)
Dat	PRN
ongemac	NOU(type=comm,number=sg)
van	ADP
harre	PRN
smerten	NOU(type=comm,number=sg)
Dis	PRN
dankde	VRB(mood=finite,tense=past,number=sg)
si	PRN
met	ADP
blider	ADJ(degree=-)
herten	NOU(type=comm,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
met	ADP
vrien	ADJ(degree=-)
wille	NOU(type=comm,number=sg)
sere	ADV(type=-,degree=-)
Den	PRN
riken	ADJ(degree=-)
coninc	NOU(type=comm,number=sg)
onsen	PRN
here;	NOU(type=comm,number=sg)
Mar	CON(type=coor)
doe	CON(type=sub)
lutgart	NOU(type=proper,number=-)
die	PRN
maget	NOU(type=comm,number=sg)
fijn	ADJ(degree=-)
Geweset	VRB(mood=part,tense=past,number=-)
hadde	VRB(mood=finite,tense=past,number=sg)
en	PRN
stukkelkin	NOU(type=comm,number=sg)
Getrostet	VRB(mood=part,tense=past,number=-)
wel	ADV(type=-,degree=-)
in	ADP
derre	PRN
wise	NOU(type=comm,number=sg)
Began	VRB(mood=finite,tense=past,number=sg)
si	PRN
peisen	VRB(mood=inf,tense=-,number=-)
weder	ADV(type=-,degree=-)
lise	ADV(type=-,degree=-)
Dat	CON(type=sub)
si	PRN
uersekert	ADJ(degree=-)
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
ware	VRB(mood=finite,tense=past,number=sg)
Teuollen	ADV(type=-,degree=-)+ADV(type=-,degree=-)
gnoch.	ADV(type=-,degree=-)
noch	CON(type=coor)
uan	ADP
din	PRN
uare	NOU(type=comm,number=sg)
Geheelen	ADJ(degree=-)
troest	NOU(type=comm,number=sg)
en	ADV(type=-,degree=-)
hadde	VRB(mood=finite,tense=past,number=sg)
nit	ADV(type=-,degree=-)
An	ADP
dat	CON(type=sub)
gelof	NOU(type=comm,number=sg)
dat	PRN
hare	PRN
onthit	VRB(mood=finite,tense=past,number=sg)
Die	PRN
ingel	NOU(type=comm,number=sg)
die	PRN
te	ADP
hare	PRN
quam	VRB(mood=finite,tense=past,number=sg)
Dis	ADV(type=-,degree=-)
si	PRN
daer+ane	ADV(type=-,degree=-)+PRN
exempel	NOU(type=comm,number=sg)
nam	VRB(mood=finite,tense=past,number=sg)
Dat	CON(type=sub)
die	PRN
nature	NOU(type=comm,number=sg)
es	VRB(mood=finite,tense=pres,number=sg)
also	ADV(type=-,degree=-)
cranc	ADJ(degree=-)
Van	ADP
allen	PRN
menschen	NOU(type=comm,number=pl)
euen	ADV(type=-,degree=-)
lanc	ADJ(degree=-)
Dat	CON(type=sub)
si	PRN
in	ADP
dese	PRN
werelt	NOU(type=comm,number=sg)
leuen	VRB(mood=finite,tense=pres,number=pl)
Dat	CON(type=sub)
sonder	ADP
uallen	NOU(type=comm,number=sg)
ende	CON(type=coor)
sneuen	NOU(type=comm,number=sg)
Nimen	PRN
in	ADP
dese	PRN
werelt	NOU(type=comm,number=sg)
wijt	ADJ(degree=-)
En	ADV(type=-,degree=-)
can	VRB(mood=finite,tense=pres,number=sg)
uolleuen	VRB(mood=inf,tense=-,number=-)
sinen	PRN
tijt	NOU(type=comm,number=sg)
Noch	CON(type=coor)
din	PRN
uolbrengen	VRB(mood=inf,tense=-,number=-)
so+dat	CON(type=sub)
hi	PRN
Der	PRN
godes	NOU(type=comm,number=sg)
hulden	NOU(type=comm,number=sg)
seker	ADJ(degree=-)
si	VRB(mood=finite,tense=pres,number=sg)
Daer+omme	ADV(type=-,degree=-)+PRN
wart	VRB(mood=finite,tense=past,number=sg)
die	PRN
maget	NOU(type=comm,number=sg)
wert	ADJ(degree=-)
Tin	ADP+PRN
tiden	NOU(type=comm,number=sg)
weder	ADV(type=-,degree=-)
so	ADV(type=-,degree=-)
ueruert	ADJ(degree=-)
Dat	CON(type=sub)
si	PRN
din	PRN
troest	NOU(type=comm,number=sg)
uan	ADP
daer+teuoren	ADV(type=-,degree=-)+PRN
Saen	ADV(type=-,degree=-)
heuet	VRB(mood=finite,tense=pres,number=sg)
weder	ADV(type=-,degree=-)
al	ADV(type=-,degree=-)
uerloren	VRB(mood=part,tense=past,number=-)
Van	ADP
irst	ADV(type=-,degree=-)
began	VRB(mood=finite,tense=past,number=sg)
si	PRN
weder	ADV(type=-,degree=-)
duchten	VRB(mood=inf,tense=-,number=-)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
din	PRN
suaren	ADJ(degree=-)
pas	NOU(type=comm,number=sg)
ontfruchten	VRB(mood=inf,tense=-,number=-)
Van	ADP
dire	PRN
wreeder	ADJ(degree=-)
godes	NOU(type=comm,number=sg)
wraken	NOU(type=comm,number=sg)
Daer	ADV(type=-,degree=-)+PRN
si	PRN
moste	VRB(mood=finite,tense=past,number=sg)
emmer	ADV(type=-,degree=-)
toe	ADV(type=-,degree=-)+PRN
geraken	VRB(mood=inf,tense=-,number=-)
Wart	PRN+VRB(mood=finite,tense=past,number=sg)
dat	CON(type=sub)
die	PRN
sile	NOU(type=comm,number=sg)
so	ADV(type=-,degree=-)
met	ADP
sonden	NOU(type=comm,number=pl)
Teijoncst	ADV(type=-,degree=-)
besmettet	ADJ(degree=-)
worde	VRB(mood=finite,tense=past,number=sg)
uonden	VRB(mood=part,tense=past,number=-)
Dat	CON(type=sub)
si	PRN
der	PRN
wraken	NOU(type=comm,number=sg)
werdech	ADJ(degree=-)
ware	VRB(mood=finite,tense=past,number=sg)
Dos	ADV(type=-,degree=-)
bleef	VRB(mood=finite,tense=past,number=sg)
die	PRN
maget	NOU(type=comm,number=sg)
noch	ADV(type=-,degree=-)
in	ADP
uare	NOU(type=comm,number=sg)
Tote	ADP
an	ADP
der	PRN
stont	NOU(type=comm,number=sg)
dat	CON(type=sub)
quam	VRB(mood=finite,tense=past,number=sg)
die	PRN
bode	NOU(type=comm,number=sg)
Gesendet	VRB(mood=part,tense=past,number=-)
weder	ADV(type=-,degree=-)
daer	ADV(type=-,degree=-)
van	ADP
gode	NOU(type=comm,number=sg)
Op	ADP
ene	PRN
wile	NOU(type=comm,number=sg)
al+daer	ADV(type=-,degree=-)
si	PRN
sat	VRB(mood=finite,tense=past,number=sg)
Ende	CON(type=coor)
al+in+een	ADV(type=-,degree=-)
te	ADP
gode	NOU(type=comm,number=sg)
bat	VRB(mood=finite,tense=past,number=sg)
Dat	CON(type=sub)
hi	PRN
noch	ADV(type=-,degree=-)
bat	ADV(type=-,degree=-)
uan	ADP
derre	PRN
saken	NOU(type=comm,number=sg)
Har	PRN
herte	NOU(type=comm,number=sg)
wilde	VRB(mood=finite,tense=past,number=sg)
seker	ADJ(degree=-)
maken	VRB(mood=inf,tense=-,number=-)
Al+daer	ADV(type=-,degree=-)
die	PRN
bode	NOU(type=comm,number=sg)
was	VRB(mood=finite,tense=past,number=sg)
gestaen	VRB(mood=part,tense=past,number=-)
So	ADV(type=-,degree=-)
sprac	VRB(mood=finite,tense=past,number=sg)
hi	PRN
toter	ADP+PRN
maget	NOU(type=comm,number=sg)
saen	ADV(type=-,degree=-)
Lutgart	NOU(type=proper,number=-)
ic	PRN
ben	VRB(mood=finite,tense=pres,number=sg)
hir	ADV(type=-,degree=-)
weder+comen	VRB(mood=part,tense=past,number=-)
Want	CON(type=coor)
ic	PRN
wel	ADV(type=-,degree=-)
hebbe	VRB(mood=finite,tense=pres,number=sg)
noch	ADV(type=-,degree=-)
uernomen	VRB(mood=part,tense=past,number=-)
Dat	CON(type=sub)
v	PRN
mijn	PRN
troest	NOU(type=comm,number=sg)
din	PRN
ic	PRN
v	PRN
gaf	VRB(mood=finite,tense=past,number=sg)
En	ADV(type=-,degree=-)
heuet	VRB(mood=finite,tense=pres,number=sg)
nit	ADV(type=-,degree=-)
doen	VRB(mood=inf,tense=-,number=-)
comen+af	VRB(mood=inf,tense=-,number=-)
Der	PRN
groter	ADJ(degree=-)
sorgen	NOU(type=comm,number=pl)
die	PRN
gi	PRN
claget	VRB(mood=finite,tense=pres,number=sg)
Dat	CON(type=sub)
gise	PRN+PRN
int	ADP+PRN
herte	NOU(type=comm,number=sg)
binnen	ADV(type=-,degree=-)
draget	VRB(mood=finite,tense=pres,number=sg)
Mar	CON(type=coor)
sidermeer	CON(type=sub)
dat	CON(type=sub)
mine	PRN
wart	NOU(type=comm,number=pl)
Nit	ADV(type=-,degree=-)
wale	ADV(type=-,degree=-)
en	ADV(type=-,degree=-)
connen	VRB(mood=finite,tense=pres,number=pl)
v	PRN
lutgart	NOU(type=proper,number=-)
Gegeuen	VRB(mood=inf,tense=-,number=-)
sekerheiden	NOU(type=comm,number=sg)
gnoch	ADV(type=-,degree=-)
Noch	CON(type=coor)
trostes	NOU(type=comm,number=sg)
oc	ADV(type=-,degree=-)
na	ADP
v	PRN
geuoch	NOU(type=comm,number=sg)
So	ADV(type=-,degree=-)
segget	VRB(mood=finite,tense=pres,number=sg)
mi	PRN
wat	ADV(type=-,degree=-)
ende	CON(type=coor)
hoe	ADV(type=-,degree=-)
Gi	PRN
selue	PRN
willet	VRB(mood=finite,tense=pres,number=sg)
dat	CON(type=sub)
ic	PRN
doe	VRB(mood=finite,tense=pres,number=sg)
Warbi	ADV(type=-,degree=-)+PRN
gi	PRN
moget	VRB(mood=finite,tense=pres,number=sg)
sijn	VRB(mood=finite,tense=pres,number=pl)
uerwert	VRB(mood=part,tense=past,number=-)
Van	ADP
dire	PRN
onrasten	NOU(type=comm,number=sg)
die	PRN
v	PRN
dert	VRB(mood=finite,tense=pres,number=sg)
Jc	PRN
saelt	PRN+VRB(mood=finite,tense=pres,number=sg)
uolbrengen	VRB(mood=inf,tense=-,number=-)
canic	PRN+VRB(mood=finite,tense=pres,number=sg)
dan	ADV(type=-,degree=-)
Ochtic	CON(type=sub)+PRN
v	PRN
seluen	PRN
wale	ADV(type=-,degree=-)
en	ADV(type=-,degree=-)
can	VRB(mood=finite,tense=pres,number=sg)
Terasten	ADP+NOU(type=comm,number=sg)
dan	ADV(type=-,degree=-)
gebrengen	VRB(mood=inf,tense=-,number=-)
nit	ADV(type=-,degree=-)
Lutgart	NOU(type=proper,number=-)
so	ADV(type=-,degree=-)
mikket	VRB(mood=finite,tense=pres,number=sg)
ende	CON(type=coor)
sit	VRB(mood=finite,tense=pres,number=sg)
Win	PRN
gi	PRN
begert	VRB(mood=finite,tense=pres,number=sg)
dat	PRN
bouen	ADV(type=-,degree=-)
mi	PRN
Van	ADP
derre	PRN
saken	NOU(type=comm,number=pl)
bode	NOU(type=comm,number=sg)
si	VRB(mood=finite,tense=pres,number=sg)
Tote	ADP
v.	PRN
hi	PRN
salet	PRN+VRB(mood=finite,tense=pres,number=sg)
emmer	ADV(type=-,degree=-)
wesen	VRB(mood=inf,tense=-,number=-)
Doe	CON(type=sub)
sprac	VRB(mood=finite,tense=past,number=sg)
die	PRN
bode	NOU(type=comm,number=sg)
noch	ADV(type=-,degree=-)
mettesen	ADP+PRN
Hir	ADV(type=-,degree=-)
es	VRB(mood=finite,tense=pres,number=sg)
in	ADP
desen	PRN
closter	NOU(type=comm,number=sg)
binnen	ADV(type=-,degree=-)
Die	PRN
gode	NOU(type=comm,number=sg)
met	ADP
gerechter	ADJ(degree=-)
minnen	NOU(type=comm,number=sg)
Geuestet	VRB(mood=part,tense=past,number=-)
heft	VRB(mood=finite,tense=pres,number=sg)
in	ADP
haren	PRN
moede	NOU(type=comm,number=sg)
Ene	PRN
edele	ADJ(degree=-)
nonne	NOU(type=comm,number=sg)
ende	CON(type=coor)
eene	PRN
goede	ADJ(degree=-)
Dat	PRN
es	VRB(mood=finite,tense=pres,number=sg)
uan	ADP
raeuie	NOU(type=proper,number=-)
ver	NOU(type=comm,number=sg)
marie	NOU(type=proper,number=-)
Wildi	PRN+VRB(mood=finite,tense=pres,number=sg)
lutgart	NOU(type=proper,number=-)
dat	CON(type=sub)
si	PRN
v	PRN
lie	VRB(mood=finite,tense=pres,number=sg)
Dis	PRN
selues	PRN
oc	ADV(type=-,degree=-)
dat	PRN
ic	PRN
v	PRN
seide	VRB(mood=finite,tense=past,number=sg)
Si	PRN
saels	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
lien	VRB(mood=inf,tense=-,number=-)
sonder	ADP
beide	NOU(type=comm,number=sg)
So	ADV(type=-,degree=-)
hebbedi	PRN+VRB(mood=finite,tense=pres,number=sg)
van	ADP
tueen	NUM(type=car)
orconden	NOU(type=comm,number=pl)
Hir+af	ADV(type=-,degree=-)+PRN
die	PRN
warheit	NOU(type=comm,number=sg)
onderuonden	VRB(mood=part,tense=past,number=-)
Dos	ADV(type=-,degree=-)
mogdi	PRN+VRB(mood=finite,tense=pres,number=sg)
werden	VRB(mood=inf,tense=-,number=-)
oppenbare	ADV(type=-,degree=-)
Ontcommert	VRB(mood=part,tense=past,number=-)
van	ADP
din	PRN
groten	ADJ(degree=-)
vare	NOU(type=comm,number=sg)
Din	PRN
gi	PRN
noch	ADV(type=-,degree=-)
gode	NOU(type=comm,number=sg)
alteenen	ADV(type=-,degree=-)
claget	VRB(mood=finite,tense=pres,number=sg)
Ai.	INT
here	NOU(type=comm,number=sg)
weder	ADV(type=-,degree=-)
sprac	VRB(mood=finite,tense=past,number=sg)
die	PRN
maget	NOU(type=comm,number=sg)
Wat	ADV(type=-,degree=-)
holpet	PRN+VRB(mood=finite,tense=past,number=sg)
dat	CON(type=sub)
gi	PRN
dis	PRN
gewoeget	VRB(mood=finite,tense=past,number=sg)
Marien	NOU(type=proper,number=-)
die	PRN
har	PRN
herte	NOU(type=comm,number=sg)
voeget	VRB(mood=finite,tense=pres,number=sg)
So	ADV(type=-,degree=-)
simpellic	ADV(type=-,degree=-)
an	ADP
onsen	PRN
here	NOU(type=comm,number=sg)
Dat	CON(type=sub)
men	PRN
ne	ADV(type=-,degree=-)
can	VRB(mood=finite,tense=pres,number=sg)
no	CON(type=coor)
min	ADV(type=-,degree=-)
no	CON(type=coor)
mere	PRN
Vergronden	VRB(mood=inf,tense=-,number=-)
noch	CON(type=coor)
genemen+ware	VRB(mood=inf,tense=-,number=-)
Hoet	ADV(type=-,degree=-)+PRN
tuschen	ADP
hem	PRN
staet	VRB(mood=finite,tense=pres,number=sg)
ende	CON(type=coor)
hare	PRN
Si	PRN
es	VRB(mood=finite,tense=pres,number=sg)
so	ADV(type=-,degree=-)
scamel	ADJ(degree=-)
ende	CON(type=coor)
bloede	ADJ(degree=-)
Dat	CON(type=sub)
si	PRN
mi	PRN
soude	VRB(mood=finite,tense=past,number=sg)
onttekken	VRB(mood=inf,tense=-,number=-)
noede	ADV(type=-,degree=-)
Des	PRN
iwent.	PRN
ochte	CON(type=coor)
cundech	ADJ(degree=-)
maken	VRB(mood=inf,tense=-,number=-)
Al	CON(type=sub)
wiste	VRB(mood=finite,tense=past,number=sg)
si	PRN
uan	ADP
derre	PRN
saken	NOU(type=comm,number=pl)
Al	ADV(type=-,degree=-)
uten	ADP+PRN
gronde	NOU(type=comm,number=sg)
die	PRN
warheide	NOU(type=comm,number=sg)
Jc	PRN
wane	VRB(mood=finite,tense=pres,number=sg)
sijs	PRN+PRN
mi	PRN
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
seide	VRB(mood=finite,tense=past,number=sg)
Dis	PRN
es	VRB(mood=finite,tense=pres,number=sg)
mi	PRN
lieuer	ADJ(degree=-)
dat	CON(type=sub)
sijs	PRN+PRN
nit	ADV(type=-,degree=-)
En	ADV(type=-,degree=-)
wete.	VRB(mood=finite,tense=pres,number=sg)
wat+so	ADV(type=-,degree=-)+PRN
mi	PRN
geschit	VRB(mood=finite,tense=pres,number=sg)
Dar+na;	ADV(type=-,degree=-)+PRN
mar	CON(type=coor)
enen	PRN
uroeden	ADJ(degree=-)
man	NOU(type=comm,number=sg)
Die	PRN
wel	ADV(type=-,degree=-)
testaden	ADP+NOU(type=comm,number=sg)
spreken	VRB(mood=inf,tense=-,number=-)
can	VRB(mood=finite,tense=pres,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
uan	ADP
heimeliken	ADJ(degree=-)
dingen	NOU(type=comm,number=pl)
Sijn	PRN
seggen	NOU(type=comm,number=sg)
wel	ADV(type=-,degree=-)
te	ADP
pointe	NOU(type=comm,number=sg)
bringen	VRB(mood=inf,tense=-,number=-)
Ende	CON(type=coor)
anders	ADV(type=-,degree=-)
onderscheedech	ADJ(degree=-)
si	VRB(mood=finite,tense=pres,number=sg)
Din	PRN
sendet	VRB(mood=finite,tense=pres,number=sg)
hare	PRN
tote	ADP
mi	PRN
Hi	PRN
sal	VRB(mood=finite,tense=pres,number=sg)
mi	PRN
mogen	VRB(mood=inf,tense=-,number=-)
uele	ADV(type=-,degree=-)
bat	ADV(type=-,degree=-)
Getrosten	VRB(mood=inf,tense=-,number=-)
dan	CON(type=sub)
die	PRN
urowe.	NOU(type=comm,number=sg)
op+dat+Dat	CON(type=sub)
hi	PRN
mi	PRN
sekerlic	ADV(type=-,degree=-)
uerlijt	VRB(mood=finite,tense=pres,number=sg)
Dis	PRN
selues	PRN
dis	PRN
gi	PRN
bode	NOU(type=comm,number=sg)
sijt	VRB(mood=finite,tense=pres,number=sg)
Do	CON(type=sub)
sprac	VRB(mood=finite,tense=past,number=sg)
die	PRN
bode	NOU(type=comm,number=sg)
al+daer	ADV(type=-,degree=-)
hi	PRN
stoet	VRB(mood=finite,tense=past,number=sg)
Lutgart	NOU(type=proper,number=-)
nu	ADV(type=-,degree=-)
houdet	VRB(mood=finite,tense=pres,number=sg)
vwen	PRN
moet	NOU(type=comm,number=sg)
Jn	ADP
rasten.	NOU(type=comm,number=sg)
ende	CON(type=coor)
weset	VRB(mood=finite,tense=pres,number=sg)
blide	ADJ(degree=-)
Dit	PRN
sal	VRB(mood=finite,tense=pres,number=sg)
geschin	VRB(mood=inf,tense=-,number=-)
in	ADP
corten	ADJ(degree=-)
tide	NOU(type=comm,number=sg)
Dos	ADV(type=-,degree=-)
es	VRB(mood=finite,tense=pres,number=sg)
die	PRN
bode	NOU(type=comm,number=sg)
en+wech+geuaren	VRB(mood=part,tense=past,number=-)
Nv	ADV(type=-,degree=-)
hort	VRB(mood=finite,tense=pres,number=sg)
ic	PRN
sal	VRB(mood=finite,tense=pres,number=sg)
v	PRN
oppenbaren	VRB(mood=inf,tense=-,number=-)
En	ADV(type=-,degree=-)
laettijs	PRN+PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
uerwassen	VRB(mood=inf,tense=-,number=-)
nit	ADV(type=-,degree=-)
Wat	ADV(type=-,degree=-)
sider	ADV(type=-,degree=-)
es	VRB(mood=finite,tense=pres,number=sg)
darna	ADV(type=-,degree=-)+PRN
geschit.	VRB(mood=part,tense=past,number=-)
Der	PRN
dage	NOU(type=comm,number=pl)
sent	ADJ(degree=-)
nit	ADV(type=-,degree=-)
viue	NUM(type=car)
en	ADV(type=-,degree=-)
leden	VRB(mood=part,tense=past,number=-)
So	ADV(type=-,degree=-)
quam	VRB(mood=finite,tense=past,number=sg)
gegaen	VRB(mood=part,tense=past,number=-)
in	ADV(type=-,degree=-)+PRN
weet	VRB(mood=finite,tense=pres,number=sg)
gereden	VRB(mood=part,tense=past,number=-)
Taiwires	ADP+NOU(type=proper,number=-)
inden	ADP+PRN
closter	NOU(type=comm,number=sg)
mar	ADV(type=-,degree=-)
En	PRN
ijongelinc	NOU(type=comm,number=sg)
schone	ADJ(degree=-)
ende	CON(type=coor)
clar	ADJ(degree=-)
Vol	ADJ(degree=-)
sere	PRN
ijoegede.	NOU(type=comm,number=sg)
ende	CON(type=coor)
wel+Gesettet	ADJ(degree=-)+ADV(type=-,degree=-)
dapper	ADJ(degree=-)
ende	CON(type=coor)
snel	ADJ(degree=-)
Ende	CON(type=coor)
alles	PRN
harde	ADV(type=-,degree=-)
wel	ADV(type=-,degree=-)
bequame	ADJ(degree=-)
Mar	CON(type=coor)
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
wisten	VRB(mood=finite,tense=past,number=pl)
sinen	PRN
name	NOU(type=comm,number=sg)
Die	PRN
nonnen	NOU(type=comm,number=pl)
die	PRN
daer	ADV(type=-,degree=-)
waren	VRB(mood=finite,tense=past,number=pl)
binnen	ADV(type=-,degree=-)
Want	CON(type=coor)
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
consten	VRB(mood=finite,tense=past,number=pl)
si	PRN
bekinnen	VRB(mood=inf,tense=-,number=-)
Noch	CON(type=coor)
wie	PRN
hi	PRN
was.	VRB(mood=finite,tense=past,number=sg)
noch	CON(type=coor)
uan	ADP
wat	ADV(type=-,degree=-)
lande	NOU(type=comm,number=sg)
Mar	CON(type=coor)
och	CON(type=coor)
hi	PRN
hem	PRN
dar	ADV(type=-,degree=-)
wel	ADV(type=-,degree=-)
bekande	VRB(mood=finite,tense=past,number=sg)
So	ADV(type=-,degree=-)
quam	VRB(mood=finite,tense=past,number=sg)
hi	PRN
gaende	VRB(mood=part,tense=pres,number=-)
in	ADP
dat	PRN
parloer	NOU(type=comm,number=sg)
Op	ADP
enen	PRN
tijt	NOU(type=comm,number=sg)
dat	PRN
in	ADP
den	PRN
koer	NOU(type=comm,number=sg)
Lutgart	NOU(type=proper,number=-)
die	PRN
fine	ADJ(degree=-)
maget	NOU(type=comm,number=sg)
was	VRB(mood=finite,tense=past,number=sg)
Al+daer	ADV(type=-,degree=-)
si	PRN
hare	PRN
beden	NOU(type=comm,number=pl)
las	VRB(mood=finite,tense=past,number=sg)
Die	PRN
bode	NOU(type=comm,number=sg)
al+daer	ADV(type=-,degree=-)
hi	PRN
was	VRB(mood=finite,tense=past,number=sg)
gestaen	VRB(mood=part,tense=past,number=-)
So	ADV(type=-,degree=-)
heuet	VRB(mood=finite,tense=pres,number=sg)
hi	PRN
begonnen	VRB(mood=part,tense=past,number=-)
saen	ADV(type=-,degree=-)
Dos	ADV(type=-,degree=-)
spreken	VRB(mood=inf,tense=-,number=-)
din	PRN
ijonfrowen	NOU(type=comm,number=pl)
toe	VRB(mood=inf,tense=-,number=-)
Die	PRN
daer	ADV(type=-,degree=-)
uersament	VRB(mood=part,tense=past,number=-)
waren	VRB(mood=finite,tense=past,number=pl)
doe	ADV(type=-,degree=-)
Die	PRN
got	NOU(type=comm,number=sg)
die	PRN
al	ADV(type=-,degree=-)
geleisten	VRB(mood=inf,tense=-,number=-)
mach	VRB(mood=finite,tense=pres,number=sg)
Verleen	VRB(mood=finite,tense=pres,number=sg)
v	PRN
seit	VRB(mood=finite,tense=pres,number=sg)
hi	PRN
goeden	ADJ(degree=-)
dach	NOU(type=comm,number=sg)
Gi	PRN
vrowen.	NOU(type=comm,number=pl)
ende	CON(type=coor)
v	PRN
mote	VRB(mood=finite,tense=pres,number=sg)
geuen	VRB(mood=inf,tense=-,number=-)
Met	ADP
hem	PRN
dat	PRN
ewelike	ADJ(degree=-)
leuen	NOU(type=comm,number=sg)
Got	NOU(type=comm,number=sg)
lonv	PRN+VRB(mood=finite,tense=pres,number=sg)
urint.	NOU(type=comm,number=sg)
die	PRN
vrowen	NOU(type=comm,number=pl)
seiden	VRB(mood=finite,tense=past,number=pl)
Do	CON(type=sub)
sprac	VRB(mood=finite,tense=past,number=sg)
die	PRN
bode.	NOU(type=comm,number=sg)
in	ADP
houeschheiden	NOU(type=comm,number=sg)
Badic	PRN+VRB(mood=finite,tense=past,number=sg)
v	PRN
gerne	ADV(type=-,degree=-)
gi	PRN
ijonfrowen	NOU(type=comm,number=pl)
Dat	CON(type=sub)
ic	PRN
lutgarden	NOU(type=proper,number=-)
mochte	VRB(mood=finite,tense=past,number=sg)
schowen	VRB(mood=inf,tense=-,number=-)
Die	PRN
soudic	PRN+VRB(mood=finite,tense=past,number=sg)
harde	ADV(type=-,degree=-)
gerne	ADV(type=-,degree=-)
sin	VRB(mood=inf,tense=-,number=-)
Op+dat	CON(type=sub)
het	PRN
mochte	VRB(mood=finite,tense=past,number=sg)
mi	PRN
geschin	VRB(mood=inf,tense=-,number=-)
Lutgarden	NOU(type=proper,number=-)
meinic	PRN+VRB(mood=finite,tense=pres,number=sg)
van	ADP
senttruden	NOU(type=proper,number=-)
Comt	VRB(mood=finite,tense=pres,number=sg)
si.	PRN
ic	PRN
sal	VRB(mood=finite,tense=pres,number=sg)
doen	VRB(mood=inf,tense=-,number=-)
hare	PRN
luden	VRB(mood=inf,tense=-,number=-)
En	PRN
orconschap	NOU(type=comm,number=sg)
dat	PRN
hort	VRB(mood=finite,tense=pres,number=sg)
te	ADP
hare	PRN
Dis	PRN
ic	PRN
ontcommert	ADJ(degree=-)
gerne	ADV(type=-,degree=-)
ware	VRB(mood=finite,tense=past,number=sg)
Na	ADP
desen	PRN
warden	NOU(type=comm,number=pl)
ginc	VRB(mood=finite,tense=past,number=sg)
tehant	ADV(type=-,degree=-)
Te	ADP
rechte	NOU(type=comm,number=sg)
al	ADV(type=-,degree=-)
dor	ADP
den	PRN
closter+pant	NOU(type=comm,number=sg)
Tote	ADP
in	ADP
den	PRN
koer	NOU(type=comm,number=sg)
der	PRN
vrowen	NOU(type=comm,number=pl)
eene	NUM(type=car)
Dar	ADV(type=-,degree=-)
si	PRN
lutgarden	NOU(type=proper,number=-)
vant	VRB(mood=finite,tense=past,number=sg)
allene	ADV(type=-,degree=-)
Onledech	ADJ(degree=-)
sittende	VRB(mood=part,tense=pres,number=-)
ouer	ADP
dat	PRN
Dat	PRN
si	PRN
al	ADV(type=-,degree=-)
noch	ADV(type=-,degree=-)
te	ADP
gode	NOU(type=comm,number=sg)
bat	VRB(mood=finite,tense=past,number=sg)
Dat	CON(type=sub)
hise	PRN+PRN
wilde	VRB(mood=finite,tense=past,number=sg)
van	ADP
der	PRN
saken	NOU(type=comm,number=sg)
Die	PRN
hare	PRN
wart.	VRB(mood=finite,tense=past,number=sg)
bat	ADV(type=-,degree=-)
seker	ADJ(degree=-)
maken	VRB(mood=inf,tense=-,number=-)
Doe	CON(type=sub)
gaf	VRB(mood=finite,tense=past,number=sg)
die	PRN
nonne	NOU(type=comm,number=sg)
en	PRN
teeken	NOU(type=comm,number=sg)
lise	ADV(type=-,degree=-)
Der	PRN
maget	NOU(type=comm,number=sg)
fijn	ADJ(degree=-)
uan	ADP
hogen	ADJ(degree=-)
prise	NOU(type=comm,number=sg)
Dat	CON(type=sub)
si	PRN
din	PRN
bode	NOU(type=comm,number=sg)
ginge	VRB(mood=finite,tense=past,number=sg)
spreken	VRB(mood=inf,tense=-,number=-)
Dar+na	ADV(type=-,degree=-)+PRN
tesamen	ADV(type=-,degree=-)
dat	CON(type=sub)
si	PRN
streken	VRB(mood=finite,tense=past,number=pl)
Al	ADV(type=-,degree=-)
dor	ADP
din	PRN
pant	NOU(type=comm,number=sg)
van	ADP
vtin	ADP+PRN
kore	NOU(type=comm,number=sg)
Dos	ADV(type=-,degree=-)
quamen	VRB(mood=finite,tense=past,number=pl)
si	PRN
totin	ADP+ADP
parlore	NOU(type=comm,number=sg)
Nv	ADV(type=-,degree=-)
hort	VRB(mood=finite,tense=pres,number=sg)
hoe	ADV(type=-,degree=-)
tuschen	ADP
hen	PRN
uerginc	VRB(mood=finite,tense=past,number=sg)
Dat	PRN
parlement.	NOU(type=comm,number=sg)
die	PRN
ijongelinc	NOU(type=comm,number=sg)
Doe	CON(type=sub)
hi	PRN
die	PRN
magt	NOU(type=comm,number=sg)
hem	PRN
sach	VRB(mood=finite,tense=past,number=sg)
genaken	VRB(mood=inf,tense=-,number=-)
So	ADV(type=-,degree=-)
heuet	VRB(mood=finite,tense=pres,number=sg)
hi	PRN
met	ADP
schonre	ADJ(degree=-)
spraken	NOU(type=comm,number=sg)
Aldos	ADV(type=-,degree=-)
begonnen	VRB(mood=part,tense=past,number=-)
een	PRN
salut	NOU(type=comm,number=sg)
Got	NOU(type=comm,number=sg)
houdu	PRN+VRB(mood=finite,tense=pres,number=sg)
seit	VRB(mood=finite,tense=past,number=sg)
hi	PRN
godes	NOU(type=comm,number=sg)
brut	NOU(type=comm,number=sg)
Got	NOU(type=comm,number=sg)
houdu	PRN+VRB(mood=finite,tense=pres,number=sg)
maget	NOU(type=comm,number=sg)
utuerkoren	ADJ(degree=-)
Die	PRN
selue	PRN
got	NOU(type=comm,number=sg)
die	PRN
hir+teuoren	ADV(type=-,degree=-)+PRN
Van	ADP
nivte	PRN
alle	PRN
dinc	NOU(type=comm,number=pl)
geboet	VRB(mood=finite,tense=past,number=sg)
Hi	PRN
motu	PRN+VRB(mood=finite,tense=pres,number=sg)
geuen	VRB(mood=inf,tense=-,number=-)
gracie	NOU(type=comm,number=sg)
groet	ADJ(degree=-)
Van	ADP
salechheiden	NOU(type=comm,number=sg)
die	PRN
v	PRN
bliue	VRB(mood=finite,tense=pres,number=sg)
Ende	CON(type=coor)
allewege	ADV(type=-,degree=-)
in	ADP
v	PRN
becliue	VRB(mood=finite,tense=pres,number=sg)
Got	NOU(type=comm,number=sg)
lonu.	PRN+VRB(mood=finite,tense=pres,number=sg)
weder	ADV(type=-,degree=-)
sprac	VRB(mood=finite,tense=past,number=sg)
die	PRN
maget	NOU(type=comm,number=sg)
Dit	PRN
mote	VRB(mood=finite,tense=pres,number=sg)
ons	PRN
allen	PRN
sijn	VRB(mood=inf,tense=-,number=-)
bedaget	VRB(mood=part,tense=past,number=-)
Mijn	PRN
sute	ADJ(degree=-)
urint	NOU(type=comm,number=sg)
die	PRN
dat	PRN
begeren	VRB(mood=finite,tense=pres,number=pl)
Ende	CON(type=coor)
alle	PRN
dinc	NOU(type=comm,number=pl)
die	PRN
mogen	VRB(mood=finite,tense=pres,number=pl)
deren	VRB(mood=inf,tense=-,number=-)
Van	ADP
ons	PRN
geuerret	VRB(mood=part,tense=past,number=-)
moten	VRB(mood=finite,tense=pres,number=pl)
sijn	VRB(mood=inf,tense=-,number=-)
Do	CON(type=sub)
sprac	VRB(mood=finite,tense=past,number=sg)
die	PRN
bode.	NOU(type=comm,number=sg)
maget	NOU(type=comm,number=sg)
fijn	ADJ(degree=-)
Jc	PRN
ben	VRB(mood=finite,tense=pres,number=sg)
ens	PRN
hoges	ADJ(degree=-)
heeren	NOU(type=comm,number=sg)
bode	NOU(type=comm,number=sg)
Jc	PRN
ben	VRB(mood=finite,tense=pres,number=sg)
gesendet	VRB(mood=part,tense=past,number=-)
hir	ADV(type=-,degree=-)
uan	ADP
gode	NOU(type=comm,number=sg)
Die	PRN
alle	PRN
dinc	NOU(type=comm,number=pl)
te	ADP
rekkene	VRB(mood=inf,tense=-,number=-)
heuet	VRB(mood=finite,tense=pres,number=sg)
Ende	CON(type=coor)
allen	PRN
creaturen	NOU(type=comm,number=pl)
geuet	VRB(mood=finite,tense=pres,number=sg)
Dis	PRN
hen	PRN
behoeuet	VRB(mood=finite,tense=pres,number=sg)
int	ADP+PRN
geuoch	NOU(type=comm,number=sg)
Altoes	ADV(type=-,degree=-)
ende	CON(type=coor)
alle	PRN
wile	NOU(type=comm,number=sg)
gnoch	ADV(type=-,degree=-)
Lutgart	NOU(type=proper,number=-)
hi	PRN
grotet	VRB(mood=finite,tense=pres,number=sg)
v	PRN
met	ADP
mi	PRN
Ende	CON(type=coor)
v	PRN
ontbiedet	VRB(mood=finite,tense=pres,number=sg)
oc	ADV(type=-,degree=-)
dat	CON(type=sub)
gi	PRN
Sijt	VRB(mood=finite,tense=pres,number=sg)
wel	ADV(type=-,degree=-)
in	ADP
hogen	NOU(type=comm,number=sg)
ende	CON(type=coor)
vro	ADJ(degree=-)
Voert+ane+meer.	ADV(type=-,degree=-)
want	CON(type=sub)
hem	PRN
also	ADV(type=-,degree=-)
Becomt	VRB(mood=finite,tense=pres,number=sg)
algader	ADV(type=-,degree=-)
dis	PRN
gi	PRN
pleget	VRB(mood=finite,tense=pres,number=sg)
Alse	CON(type=sub)
v	PRN
teuoren	ADV(type=-,degree=-)
was	VRB(mood=finite,tense=past,number=sg)
geseget	VRB(mood=part,tense=past,number=-)
Van	ADP
sinen	PRN
bode.	NOU(type=comm,number=sg)
alsi	CON(type=sub)+VRB(mood=finite,tense=pres,number=sg)
dat	PRN
sake	NOU(type=comm,number=sg)
Dat	CON(type=sub)
v	PRN
teuollen	ADV(type=-,degree=-)+ADV(type=-,degree=-)
sine	PRN
sprake	NOU(type=comm,number=sg)
En	ADV(type=-,degree=-)
conde	VRB(mood=finite,tense=past,number=sg)
wel	ADV(type=-,degree=-)
getrosten	VRB(mood=inf,tense=-,number=-)
nit	ADV(type=-,degree=-)
Mar	CON(type=coor)
dis	ADV(type=-,degree=-)
hi	PRN
v	PRN
bedroeuet	ADJ(degree=-)
lit	VRB(mood=finite,tense=past,number=sg)
Ende	CON(type=coor)
ongetrostet	ADJ(degree=-)
ende	CON(type=coor)
onblide	ADJ(degree=-)
Dor	ADP
al	ADV(type=-,degree=-)
dat	PRN
hi	PRN
v	PRN
dis	PRN
uerlijde	VRB(mood=finite,tense=past,number=sg)
Al	ADV(type=-,degree=-)
ouer+waer	ADV(type=-,degree=-)
dat	CON(type=sub)
gi	PRN
lutgart	NOU(type=proper,number=-)
Vaste	ADJ(degree=-)
in	ADP
den	PRN
godes	NOU(type=comm,number=sg)
prise	NOU(type=comm,number=sg)
wart	VRB(mood=finite,tense=past,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
bequame	VRB(mood=finite,tense=past,number=sg)
v	PRN
goede	ADJ(degree=-)
leuen	NOU(type=comm,number=sg)
Hem	PRN
so.	ADV(type=-,degree=-)
dat	CON(type=sub)
hi	PRN
v	PRN
soude	VRB(mood=finite,tense=past,number=sg)
geuen	VRB(mood=inf,tense=-,number=-)
Na	ADP
desen	PRN
liue	NOU(type=comm,number=sg)
teenen	ADP+PRN
lone	NOU(type=comm,number=sg)
Te	ADP
spanne	VRB(mood=inf,tense=-,number=-)
sonder	ADP
inde	NOU(type=comm,number=sg)
crone	NOU(type=comm,number=sg)
Dar+omme	ADV(type=-,degree=-)+PRN
sendet	VRB(mood=finite,tense=pres,number=sg)
hi	PRN
mi	PRN
nu	ADV(type=-,degree=-)
Hir	ADV(type=-,degree=-)
anderwerue	NOU(type=comm,number=sg)+NUM(type=ord)
noch	ADV(type=-,degree=-)
tote	ADP
v	PRN
Om	ADP
v	PRN
te	ADP
seggene	VRB(mood=inf,tense=-,number=-)
oppenbare	ADV(type=-,degree=-)
Dat	CON(type=sub)
gi	PRN
v	PRN
seluen	PRN
uan	ADP
din	PRN
vare	NOU(type=comm,number=sg)
Ontcommert	VRB(mood=finite,tense=pres,number=sg)
urowe	NOU(type=comm,number=sg)
die	PRN
v	PRN
dert	VRB(mood=finite,tense=pres,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
nemmeer	ADV(type=-,degree=-)
en	ADV(type=-,degree=-)
sijt	VRB(mood=finite,tense=pres,number=sg)
ueruert	ADJ(degree=-)
Van	ADP
desen	PRN
stukken	NOU(type=comm,number=pl)
noch	CON(type=coor)
besorget	ADJ(degree=-)
Want	CON(type=sub)
ihesus	NOU(type=proper,number=-)
kerst	NOU(type=proper,number=-)
v	PRN
heft	VRB(mood=finite,tense=pres,number=sg)
uerborget	VRB(mood=part,tense=past,number=-)
V.	PRN
brudegoem.	NOU(type=comm,number=sg)
ijonfrowe	NOU(type=comm,number=sg)
mijn	PRN
Jegen	ADP
din	PRN
hogen	ADJ(degree=-)
uader	NOU(type=comm,number=sg)
sijn	PRN
Want	CON(type=sub)
hem	PRN
algader	ADV(type=-,degree=-)
es	VRB(mood=finite,tense=pres,number=sg)
bequame	ADJ(degree=-)
So+dat	PRN+PRN
gi	PRN
doet.	VRB(mood=finite,tense=pres,number=sg)
want	CON(type=sub)
vwen	PRN
name	NOU(type=comm,number=sg)
Hi	PRN
heft	VRB(mood=finite,tense=pres,number=sg)
met	ADP
sire	PRN
hant	NOU(type=comm,number=sg)
gescreuen	VRB(mood=part,tense=past,number=-)
Jn	ADP
sinen	PRN
boeke.	NOU(type=comm,number=sg)
ende	CON(type=coor)
oc	ADV(type=-,degree=-)
gegeuen	VRB(mood=part,tense=past,number=-)
Dar+binnen	ADV(type=-,degree=-)+PRN
stat.	NOU(type=comm,number=sg)
wel+salechlike	ADJ(degree=-)
Met	ADP
allen	PRN
die	PRN
te	ADP
sinen	PRN
rike	NOU(type=comm,number=sg)
Geteekent	VRB(mood=part,tense=past,number=-)
sijn.	VRB(mood=finite,tense=pres,number=pl)
ende	CON(type=coor)
oc	ADV(type=-,degree=-)
met	ADP
uromen	NOU(type=comm,number=sg)
Te	ADP
goeden	ADJ(degree=-)
inde	NOU(type=comm,number=sg)
selen	VRB(mood=finite,tense=pres,number=pl)
comen	VRB(mood=inf,tense=-,number=-)
Dit	PRN
seggic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
in	ADP
orconschapen	NOU(type=comm,number=sg)
Der	PRN
nonnen.	NOU(type=comm,number=pl)
brudere	NOU(type=comm,number=pl)
ende	CON(type=coor)
papen	NOU(type=comm,number=pl)
Ende	CON(type=coor)
aldergerre	PRN+PRN+PRN
die	PRN
hir	ADV(type=-,degree=-)
staen	VRB(mood=finite,tense=pres,number=pl)
Nv	ADV(type=-,degree=-)
blift	VRB(mood=finite,tense=pres,number=sg)
tegode	ADP+NOU(type=comm,number=sg)
ende	CON(type=coor)
ic	PRN
moet	VRB(mood=finite,tense=pres,number=sg)
gaen	VRB(mood=inf,tense=-,number=-)
Oc	ADV(type=-,degree=-)
motu	PRN+VRB(mood=finite,tense=pres,number=sg)
allen	PRN
got	NOU(type=comm,number=sg)
behouden	VRB(mood=inf,tense=-,number=-)
Geluc.	NOU(type=comm,number=sg)
ende	CON(type=coor)
eere.	NOU(type=comm,number=sg)
ende	CON(type=coor)
vwes	PRN
wouden	VRB(mood=inf,tense=-,number=-)
Ghi	PRN
andere	ADJ(degree=-)
urowen	NOU(type=comm,number=pl)
die	PRN
hir	ADV(type=-,degree=-)
sijt	VRB(mood=finite,tense=pres,number=sg)
Versament	VRB(mood=part,tense=past,number=-)
nv	ADV(type=-,degree=-)
op	ADP
desen	PRN
tijt	NOU(type=comm,number=sg)
Dat	PRN
lonu	PRN+VRB(mood=finite,tense=pres,number=sg)
got.	NOU(type=comm,number=sg)
die	PRN
nonnen	NOU(type=comm,number=pl)
seiden	VRB(mood=finite,tense=past,number=pl)
Doe	ADV(type=-,degree=-)
streec	VRB(mood=finite,tense=past,number=sg)
hi	PRN
wech	VRB(mood=finite,tense=past,number=sg)
al	ADV(type=-,degree=-)
sonder	ADP
beiden	VRB(mood=inf,tense=-,number=-)
Vtin	ADP+PRN
parlore.	NOU(type=comm,number=sg)
ende	CON(type=coor)
es	VRB(mood=finite,tense=pres,number=sg)
gecregen	VRB(mood=part,tense=past,number=-)
Ter	ADP+PRN
porten	NOU(type=comm,number=sg)
wert.	ADP
so	ADV(type=-,degree=-)
lise	ADV(type=-,degree=-)
plegen	PRN+VRB(mood=finite,tense=past,number=sg)
Dis	PRN
henen+scheedens.	NOU(type=comm,number=sg)
dat	CON(type=sub)
men	PRN
daer	ADV(type=-,degree=-)
Nit	ADV(type=-,degree=-)
wale	ADV(type=-,degree=-)
en	ADV(type=-,degree=-)
wiste	VRB(mood=finite,tense=past,number=sg)
al	ADV(type=-,degree=-)
ouer+waer	ADV(type=-,degree=-)
Al	ADV(type=-,degree=-)
welken	PRN
wech	NOU(type=comm,number=sg)
hi	PRN
henen+ginc	VRB(mood=finite,tense=past,number=sg)
Van+daer.	ADV(type=-,degree=-)+PRN
die	PRN
schone	ADJ(degree=-)
ijongelinc	NOU(type=comm,number=sg)
Noch	CON(type=coor)
waer	ADV(type=-,degree=-)
hi	PRN
uoer	VRB(mood=finite,tense=past,number=sg)
noch	CON(type=coor)
wie	PRN
hi	PRN
was	VRB(mood=finite,tense=past,number=sg)
Alsic	CON(type=sub)+PRN
en	PRN
lettel	NOU(type=comm,number=sg)
eer	ADV(type=-,degree=-)
v	PRN
las	VRB(mood=finite,tense=past,number=sg)
Jdoch	CON(type=coor)
so	ADV(type=-,degree=-)
hebbic	PRN+VRB(mood=finite,tense=pres,number=sg)
uonden	VRB(mood=part,tense=past,number=-)
dat	PRN
Bescreuen.	ADJ(degree=-)
dat	CON(type=sub)
die	PRN
maget	NOU(type=comm,number=sg)
bat	ADV(type=-,degree=-)
Getrostet	ADJ(degree=-)
bleef	VRB(mood=finite,tense=past,number=sg)
van	ADP
sire	PRN
spraken	NOU(type=comm,number=sg)
Dan	CON(type=sub)
imen	PRN
mochte	VRB(mood=finite,tense=past,number=sg)
v	PRN
cont	ADJ(degree=-)
gemaken	VRB(mood=inf,tense=-,number=-)
Si	PRN
bleef	VRB(mood=finite,tense=past,number=sg)
in	ADP
hogen	NOU(type=comm,number=sg)
ende	CON(type=coor)
blide	ADJ(degree=-)
Si	PRN
dankde	VRB(mood=finite,tense=past,number=sg)
gode	NOU(type=comm,number=sg)
in	ADP
allen	PRN
tide	NOU(type=comm,number=sg)
Dat	CON(type=sub)
si	PRN
so	ADV(type=-,degree=-)
wel	ADV(type=-,degree=-)
versekert	ADJ(degree=-)
ware	VRB(mood=finite,tense=past,number=sg)
Dos	ADV(type=-,degree=-)
es	VRB(mood=finite,tense=pres,number=sg)
die	PRN
maget	NOU(type=comm,number=sg)
uan	ADP
din	PRN
vare	NOU(type=comm,number=sg)
Verloesset	VRB(mood=part,tense=past,number=-)
bleuen	VRB(mood=part,tense=past,number=-)
ewelike	ADV(type=-,degree=-)
Danc	NOU(type=comm,number=sg)
hebbes	PRN+VRB(mood=finite,tense=pres,number=sg)
got	NOU(type=comm,number=sg)
uan	ADP
hemelrike	NOU(type=comm,number=sg)
Van+din+dat	CON(type=sub)
si	PRN
steruen	VRB(mood=inf,tense=-,number=-)
begerde	VRB(mood=finite,tense=past,number=sg)
ende	CON(type=coor)
hoe+dat	CON(type=sub)
geuerstet	VRB(mood=part,tense=past,number=-)
was.	VRB(mood=finite,tense=past,number=sg)
ende	CON(type=coor)
uan	ADP
den	PRN
roepene	NOU(type=comm,number=sg)
der	PRN
wonden	NOU(type=comm,number=pl)
gods.	NOU(type=comm,number=sg)
.vij.	NUM(type=car)
Lutgart	NOU(type=proper,number=-)
die	PRN
maget	NOU(type=comm,number=sg)
wel+bequame	ADJ(degree=-)
Doe	CON(type=sub)
si	PRN
uernam	VRB(mood=finite,tense=past,number=sg)
dat	CON(type=sub)
die	PRN
lichame	NOU(type=comm,number=sg)
Met	ADP
sinen	PRN
cranken	ADJ(degree=-)
liue	NOU(type=comm,number=sg)
nam	VRB(mood=finite,tense=past,number=sg)
Der	PRN
silen	NOU(type=comm,number=sg)
dat	CON(type=sub)
si	PRN
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
quam	VRB(mood=finite,tense=past,number=sg)
Daer	ADV(type=-,degree=-)
si	PRN
begerde	VRB(mood=finite,tense=past,number=sg)
meer	ADV(type=-,degree=-)
tesine	ADP+VRB(mood=inf,tense=-,number=-)
Dan	CON(type=sub)
in	ADP
die	PRN
werellike	ADJ(degree=-)
pine	NOU(type=comm,number=sg)
Dat	PRN
es	VRB(mood=finite,tense=pres,number=sg)
in	ADP
dat	PRN
uerwende	ADJ(degree=-)
rike	NOU(type=comm,number=sg)
Daer	ADV(type=-,degree=-)
alle	PRN
salege	NOU(type=comm,number=pl)
ewelike	ADV(type=-,degree=-)
Met	ADP
gode	NOU(type=comm,number=sg)
selen	VRB(mood=finite,tense=pres,number=pl)
spannen	VRB(mood=inf,tense=-,number=-)
crone	NOU(type=comm,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
ontfangen	VRB(mood=inf,tense=-,number=-)
daer	ADV(type=-,degree=-)
te	ADP
lone	NOU(type=comm,number=sg)
Dat	PRN
lange	ADJ(degree=-)
leuen	NOU(type=comm,number=sg)
sonder	ADP
inde	NOU(type=comm,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
die	PRN
maget	NOU(type=comm,number=sg)
dat	PRN
bekinde	VRB(mood=finite,tense=past,number=sg)
Dat	CON(type=sub)
si	PRN
ter	ADP+PRN
eweliker	ADJ(degree=-)
joijen	NOU(type=comm,number=sg)
Dar	ADV(type=-,degree=-)+PRN
dikke	ADV(type=-,degree=-)
har	PRN
herte	NOU(type=comm,number=sg)
af	ADV(type=-,degree=-)+PRN
plach	VRB(mood=finite,tense=past,number=sg)
veruroijen	VRB(mood=inf,tense=-,number=-)
Jn	ADP
goeden	ADJ(degree=-)
hope;	NOU(type=comm,number=sg)
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
conde	VRB(mood=finite,tense=past,number=sg)
Volcomen	VRB(mood=inf,tense=-,number=-)
euenlange	ADJ(degree=-)+ADV(type=-,degree=-)
stonde	NOU(type=comm,number=sg)
Dat	CON(type=sub)
si	PRN
met	ADP
tesen	PRN
liue	NOU(type=comm,number=sg)
suare	ADJ(degree=-)
Alteenen	ADV(type=-,degree=-)
dos	ADV(type=-,degree=-)
uerladen	VRB(mood=part,tense=past,number=-)
ware	VRB(mood=finite,tense=past,number=sg)
Began	VRB(mood=finite,tense=past,number=sg)
si	PRN
pensen	VRB(mood=inf,tense=-,number=-)
harde	ADV(type=-,degree=-)
lise	ADV(type=-,degree=-)
Jn	ADP
welkerhande	PRN
slachte	ADJ(degree=-)
wise	NOU(type=comm,number=sg)
Si	PRN
dis	PRN
tebouen	ADV(type=-,degree=-)
comen	VRB(mood=inf,tense=-,number=-)
mochte	VRB(mood=finite,tense=past,number=sg)
So	ADV(type=-,degree=-)
lange	ADV(type=-,degree=-)
si	PRN
met	ADP
staden	NOU(type=comm,number=sg)
sochte	VRB(mood=finite,tense=past,number=sg)
Den	PRN
raet	NOU(type=comm,number=sg)
hir+op	ADV(type=-,degree=-)+PRN
dat	CON(type=sub)
si	PRN
telest	ADV(type=-,degree=-)
Hilt	VRB(mood=finite,tense=past,number=sg)
ouer	ADP
nuttest	ADV(type=-,degree=-)
ende	CON(type=coor)
best	ADV(type=-,degree=-)
Dat	CON(type=sub)
si	PRN
te	ADP
gode	NOU(type=comm,number=sg)
bidden	VRB(mood=inf,tense=-,number=-)
soude	VRB(mood=finite,tense=past,number=sg)
Dat	CON(type=sub)
hi	PRN
die	PRN
sile	NOU(type=comm,number=sg)
loessen	VRB(mood=inf,tense=-,number=-)
woude	VRB(mood=finite,tense=past,number=sg)
Vt	ADP
allre	PRN
werelliker	ADJ(degree=-)
qualen	NOU(type=comm,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
te	ADP
sinen	PRN
rike	NOU(type=comm,number=sg)
halen	VRB(mood=inf,tense=-,number=-)
Aldos	ADV(type=-,degree=-)
so	ADV(type=-,degree=-)
ginc	VRB(mood=finite,tense=past,number=sg)
die	PRN
maget	NOU(type=comm,number=sg)
fijn	ADJ(degree=-)
Die	PRN
langer	ADV(type=-,degree=-)
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
gherde	VRB(mood=finite,tense=past,number=sg)
sijn	VRB(mood=inf,tense=-,number=-)
Jn	ADP
dese	PRN
werelt.	NOU(type=comm,number=sg)
bidden	VRB(mood=inf,tense=-,number=-)
gode	NOU(type=comm,number=sg)
Op	ADP
enen	PRN
tijt.	NOU(type=comm,number=sg)
dat	CON(type=sub)
hi	PRN
gebode	VRB(mood=finite,tense=past,number=sg)
Die	PRN
sile	NOU(type=comm,number=sg)
van	ADP
din	PRN
liue	NOU(type=comm,number=sg)
scheeden	VRB(mood=inf,tense=-,number=-)
So+dat	CON(type=sub)
der	PRN
eweliker	ADJ(degree=-)
ueeden	NOU(type=comm,number=sg)
Tuschen	ADP
den	PRN
uiant	NOU(type=comm,number=sg)
ende	CON(type=coor)
hare	PRN
Bi	ADP
sinen	PRN
wille	NOU(type=comm,number=sg)
en	CON(type=coor)
inde	NOU(type=comm,number=sg)
ware	VRB(mood=finite,tense=past,number=sg)
Want	CON(type=sub)
euenlanc	ADV(type=-,degree=-)+ADV(type=-,degree=-)
dat	CON(type=sub)
si	PRN
tonstaden	ADP+NOU(type=comm,number=sg)
Met	ADP
broschen	ADJ(degree=-)
liue	NOU(type=comm,number=sg)
was	VRB(mood=finite,tense=past,number=sg)
uerladen	VRB(mood=part,tense=past,number=-)
So	ADV(type=-,degree=-)
moste	VRB(mood=finite,tense=past,number=sg)
si	PRN
met	ADP
suaren	ADJ(degree=-)
wige	NOU(type=comm,number=sg)
Din	PRN
fellen	ADJ(degree=-)
nied	NOU(type=comm,number=sg)
van	ADP
sinen	PRN
krige	NOU(type=comm,number=sg)
Vroch	ADV(type=-,degree=-)
ende	CON(type=coor)
spade	ADV(type=-,degree=-)
wederstaen	VRB(mood=inf,tense=-,number=-)
Daer	ADV(type=-,degree=-)+PRN
hi	PRN
met	ADV(type=-,degree=-)+PRN
waende	VRB(mood=finite,tense=past,number=sg)
hare	PRN
ondergaen	VRB(mood=inf,tense=-,number=-)
Dat	PRN
hogste	ADJ(degree=-)
goet	NOU(type=comm,number=sg)
dat	PRN
si	PRN
begerde	VRB(mood=finite,tense=past,number=sg)
Dit	PRN
was	VRB(mood=finite,tense=past,number=sg)
dat	PRN
so	ADV(type=-,degree=-)
lutgarden	NOU(type=proper,number=-)
derde	VRB(mood=finite,tense=past,number=sg)
Tin	ADP+PRN
tiden.	NOU(type=comm,number=sg)
dat	CON(type=sub)
si	PRN
omme	ADP
dat	PRN
Wel	ADV(type=-,degree=-)
menechwerf	NOU(type=comm,number=pl)+PRN
te	ADP
gode	NOU(type=comm,number=sg)
bat	VRB(mood=finite,tense=past,number=sg)
Dat	CON(type=sub)
hise	PRN+PRN
wilde	VRB(mood=finite,tense=past,number=sg)
ut	ADP
alre	PRN
noet	NOU(type=comm,number=sg)
Verloessen.	VRB(mood=inf,tense=-,number=-)
ende	CON(type=coor)
na	ADP
die	PRN
doet	NOU(type=comm,number=sg)
Van	ADP
desen	PRN
liue.	NOU(type=comm,number=sg)
wilde	VRB(mood=finite,tense=past,number=sg)
brengen	VRB(mood=inf,tense=-,number=-)
Dar	ADV(type=-,degree=-)
si	PRN
met	ADP
vrouden	NOU(type=comm,number=sg)
mochte	VRB(mood=finite,tense=past,number=sg)
singen	VRB(mood=inf,tense=-,number=-)
Din	PRN
suten	ADJ(degree=-)
sanc	NOU(type=comm,number=sg)
dar	ADV(type=-,degree=-)+PRN
ginder+bouen	ADV(type=-,degree=-)+PRN
Die	PRN
magede	NOU(type=comm,number=pl)
alle	PRN
mede	ADV(type=-,degree=-)+PRN
louen	VRB(mood=inf,tense=-,number=-)
Die	PRN
daer	ADV(type=-,degree=-)
met	ADP
eeren	NOU(type=comm,number=sg)
spannen	VRB(mood=inf,tense=-,number=-)
crone	NOU(type=comm,number=sg)
Den	PRN
hogsten	ADJ(degree=-)
coninc	NOU(type=comm,number=sg)
van	ADP
den	PRN
trone	NOU(type=comm,number=sg)
Mar	CON(type=coor)
got	NOU(type=comm,number=sg)
die	PRN
alle	PRN
dinge	NOU(type=comm,number=pl)
weet	VRB(mood=finite,tense=pres,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
te	ADP
geuene	VRB(mood=inf,tense=-,number=-)
es	VRB(mood=finite,tense=pres,number=sg)
gereet	ADJ(degree=-)
Dat	CON(type=sub)
hen	PRN
gerieuet.	VRB(mood=finite,tense=pres,number=sg)
allen	PRN
menschen	NOU(type=comm,number=pl)
Bat	ADV(type=-,degree=-)
dan	CON(type=sub)
si	PRN
selue	PRN
mogen	VRB(mood=finite,tense=pres,number=pl)
wenschen	VRB(mood=inf,tense=-,number=-)
Om+dat	CON(type=sub)
hi	PRN
wiste	VRB(mood=finite,tense=past,number=sg)
wel	ADV(type=-,degree=-)
dat	CON(type=sub)
hare	PRN
Dat	PRN
langer	ADV(type=-,degree=-)
leuen	NOU(type=comm,number=sg)
beter	ADJ(degree=-)
ware	VRB(mood=finite,tense=past,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
dat	CON(type=sub)
sire	ADV(type=-,degree=-)+PRN+PRN
winnen	VRB(mood=inf,tense=-,number=-)
mochte	VRB(mood=finite,tense=past,number=sg)
Meer	PRN
an.	ADV(type=-,degree=-)+PRN
dat	CON(type=sub)
harre	PRN
silen	NOU(type=comm,number=sg)
dochte	VRB(mood=finite,tense=past,number=sg)
Dan	CON(type=sub)
si	PRN
nu	ADV(type=-,degree=-)
schide	VRB(mood=finite,tense=past,number=sg)
van	ADP
den	PRN
liue	NOU(type=comm,number=sg)
Dar+omme	ADV(type=-,degree=-)+PRN
al	ADV(type=-,degree=-)
plach	VRB(mood=finite,tense=past,number=sg)
hi	PRN
wesen	VRB(mood=inf,tense=-,number=-)
riue	ADJ(degree=-)
Lutgarden	NOU(type=proper,number=-)
ie	ADV(type=-,degree=-)
van	ADP
sinen	PRN
ghichten	NOU(type=comm,number=pl)
Daer	ADV(type=-,degree=-)+PRN
hise	PRN+PRN
mede	ADV(type=-,degree=-)+PRN
plach	VRB(mood=finite,tense=past,number=sg)
uerlichten	VRB(mood=inf,tense=-,number=-)
Van	ADP
ongemake	NOU(type=comm,number=sg)
och	CON(type=coor)
van	ADP
meswenden	NOU(type=comm,number=sg)
Och	CON(type=coor)
sinen	PRN
troest	NOU(type=comm,number=sg)
dar+iegen	ADV(type=-,degree=-)+PRN
senden	VRB(mood=inf,tense=-,number=-)
Gelijc+dat	CON(type=sub)
hi	PRN
den	PRN
goeden	NOU(type=comm,number=sg)
pleget	VRB(mood=finite,tense=pres,number=sg)
Altoes;	ADV(type=-,degree=-)
so	ADV(type=-,degree=-)
heuet	VRB(mood=finite,tense=pres,number=sg)
hi	PRN
onsseget	VRB(mood=part,tense=past,number=-)
Nochtan	ADV(type=-,degree=-)
der	PRN
maget	NOU(type=comm,number=sg)
dat	PRN
si	PRN
bat	VRB(mood=finite,tense=past,number=sg)
Tin	ADP+PRN
seluen	PRN
tiden.	NOU(type=comm,number=sg)
omme+dat+Dat	CON(type=sub)
hi	PRN
die	PRN
sile	NOU(type=comm,number=sg)
wilde	VRB(mood=finite,tense=past,number=sg)
binnen	ADV(type=-,degree=-)
Noch	ADV(type=-,degree=-)
ciren	VRB(mood=inf,tense=-,number=-)
bat	ADV(type=-,degree=-)
met	ADP
sire	PRN
minnem	NOU(type=comm,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
dis	ADV(type=-,degree=-)
hi	PRN
har	PRN
herte	NOU(type=comm,number=sg)
fijn	ADJ(degree=-)
Noch	ADV(type=-,degree=-)
wilde	VRB(mood=finite,tense=past,number=sg)
bat	ADV(type=-,degree=-)
uolmaket	ADJ(degree=-)
sijn	VRB(mood=inf,tense=-,number=-)
Jn	ADP
dogden	NOU(type=comm,number=pl)
ende	CON(type=coor)
in	ADP
karitaten	NOU(type=comm,number=sg)
Eer	CON(type=sub)
hise	PRN+PRN
scheeden	VRB(mood=inf,tense=-,number=-)
wilde	VRB(mood=finite,tense=past,number=sg)
laten	VRB(mood=inf,tense=-,number=-)
Vt	ADP
derre	PRN
werelt.	NOU(type=comm,number=sg)
ochte	CON(type=coor)
geuen	VRB(mood=inf,tense=-,number=-)
Der	PRN
silen	NOU(type=comm,number=sg)
deewelike	ADJ(degree=-)+PRN
leuen	NOU(type=comm,number=sg)
Ochte	CON(type=coor)
in	ADP
den	PRN
rike	NOU(type=comm,number=sg)
sijn	VRB(mood=finite,tense=pres,number=pl)
ontfaen	VRB(mood=part,tense=past,number=-)
[;]	RES(type=-)
Doch	ADV(type=-,degree=-)
heuet	VRB(mood=finite,tense=pres,number=sg)
hire	ADV(type=-,degree=-)+PRN+PRN
it	PRN
toe	ADV(type=-,degree=-)+PRN
gedaen	VRB(mood=part,tense=past,number=-)
Warbi+dat	CON(type=sub)
si	PRN
gepaiset	ADJ(degree=-)
bleef	VRB(mood=finite,tense=past,number=sg)
Van	ADP
besechheiden	NOU(type=comm,number=pl)
die	PRN
si	PRN
dreef	VRB(mood=finite,tense=past,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
terasten	ADP+NOU(type=comm,number=sg)
weder	ADV(type=-,degree=-)
quam	VRB(mood=finite,tense=past,number=sg)
Want	CON(type=sub)
doe	CON(type=sub)
die	PRN
sute	ADJ(degree=-)
got	NOU(type=comm,number=sg)
uernam	VRB(mood=finite,tense=past,number=sg)
Van	ADP
desen	PRN
stukken	NOU(type=comm,number=pl)
haren	PRN
wille	NOU(type=comm,number=sg)
Din	PRN
si	PRN
int	ADP+PRN
herte	NOU(type=comm,number=sg)
droech	VRB(mood=finite,tense=past,number=sg)
al+stille	ADV(type=-,degree=-)
So	ADV(type=-,degree=-)
heuet	VRB(mood=finite,tense=pres,number=sg)
hi	PRN
op	ADP
eenen	PRN
dach	NOU(type=comm,number=sg)
Dat	PRN
si	PRN
geknilt	ADJ(degree=-)
in	ADP
beden	NOU(type=comm,number=pl)
lach	VRB(mood=finite,tense=past,number=sg)
Daer	ADV(type=-,degree=-)+PRN
si	PRN
wel	ADV(type=-,degree=-)
heuet	VRB(mood=finite,tense=pres,number=sg)
in	ADV(type=-,degree=-)+PRN
gedurt	VRB(mood=part,tense=past,number=-)
Lutgarden	NOU(type=proper,number=-)
haren	PRN
gheest	NOU(type=comm,number=sg)
ontfurt	VRB(mood=part,tense=past,number=-)
So	ADV(type=-,degree=-)
lise	ADV(type=-,degree=-)
dat	CON(type=sub)
si	PRN
selue	PRN
aldoe	ADV(type=-,degree=-)
En	ADV(type=-,degree=-)
conde	VRB(mood=finite,tense=past,number=sg)
nit	ADV(type=-,degree=-)
geweten	VRB(mood=inf,tense=-,number=-)
hoe	ADV(type=-,degree=-)
Si	PRN
wart	VRB(mood=finite,tense=past,number=sg)
uerheuen	VRB(mood=part,tense=past,number=-)
sonder	ADP
hant	NOU(type=comm,number=sg)
Daer	ADV(type=-,degree=-)
si	PRN
har	PRN
seluen	PRN
staende	VRB(mood=part,tense=pres,number=-)
vant	VRB(mood=finite,tense=past,number=sg)
Jn	ADP
eene	PRN
stat	NOU(type=comm,number=sg)
uan	ADP
groten	ADJ(degree=-)
prise	NOU(type=comm,number=sg)
Daer	ADV(type=-,degree=-)
si	PRN
uan	ADP
menegerhande	ADJ(degree=-)
wise	NOU(type=comm,number=pl)
Die	PRN
grote	ADJ(degree=-)
cirheit	NOU(type=comm,number=sg)
heuet	VRB(mood=finite,tense=pres,number=sg)
vonden	VRB(mood=finite,tense=past,number=pl)
Want	CON(type=sub)
daer	ADV(type=-,degree=-)
die	PRN
schone	ADJ(degree=-)
bloemen	NOU(type=comm,number=pl)
stonden	VRB(mood=finite,tense=past,number=pl)
Die	PRN
so	ADV(type=-,degree=-)
met	ADP
haren	PRN
suten	ADJ(degree=-)
ghoere	NOU(type=comm,number=sg)
Die	PRN
stede	NOU(type=comm,number=sg)
cirden	VRB(mood=finite,tense=past,number=pl)
wel	ADV(type=-,degree=-)
ter	ADP+PRN
koere	NOU(type=comm,number=sg)
Dat	CON(type=sub)
het	PRN
lutgarden	NOU(type=proper,number=-)
wel	ADV(type=-,degree=-)
bequam	VRB(mood=finite,tense=past,number=sg)
Mar	CON(type=coor)
wat	ADV(type=-,degree=-)
si	PRN
noch	ADV(type=-,degree=-)
aldaer	ADV(type=-,degree=-)
uernam	VRB(mood=finite,tense=past,number=sg)
Salic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
seggen	VRB(mood=inf,tense=-,number=-)
hort	VRB(mood=finite,tense=pres,number=sg)
na	ADP
mi	PRN
Die	PRN
maget	NOU(type=comm,number=sg)
edel	ADJ(degree=-)
ende	CON(type=coor)
vri	ADJ(degree=-)
Die	PRN
stont	VRB(mood=finite,tense=past,number=sg)
met	ADP
wondere	NOU(type=comm,number=sg)
al	ADV(type=-,degree=-)
beuaen	VRB(mood=part,tense=past,number=-)
Si	PRN
sach	VRB(mood=finite,tense=past,number=sg)
beneuen	ADP
hare	PRN
staen	VRB(mood=inf,tense=-,number=-)
Den	PRN
sone	NOU(type=comm,number=sg)
gods	NOU(type=comm,number=sg)
uan	ADP
hemelrike	NOU(type=comm,number=sg)
Die	PRN
stont	VRB(mood=finite,tense=past,number=sg)
bi	ADP
hare	PRN
also	ADV(type=-,degree=-)
gelike	ADV(type=-,degree=-)
Al+bloet	ADV(type=-,degree=-)
met	ADP
sinen	PRN
uerschen	ADJ(degree=-)
wonden	NOU(type=comm,number=pl)
Alse+och	CON(type=sub)
hi	PRN
an	ADP
din	PRN
seluen	PRN
stonden	NOU(type=comm,number=sg)
Verloesset	VRB(mood=part,tense=past,number=-)
uan	ADP
den	PRN
cruce	NOU(type=comm,number=sg)
ware	VRB(mood=finite,tense=past,number=sg)
Al	PRN
dosterwijs	PRN
hi	PRN
quam	VRB(mood=finite,tense=past,number=sg)
te	ADP
hare	PRN
Gestreken	VRB(mood=part,tense=past,number=-)
lise	ADV(type=-,degree=-)
al+daer	ADV(type=-,degree=-)
si	PRN
stoet	VRB(mood=finite,tense=past,number=sg)
lees	RES(type=-)
minnen	NOU(type=comm,number=sg)
Doe	ADV(type=-,degree=-)
wart	VRB(mood=finite,tense=past,number=sg)
uerwandelt	VRB(mood=part,tense=past,number=-)
al	ADV(type=-,degree=-)
die	PRN
moet	NOU(type=comm,number=sg)
Lutgarden.	NOU(type=proper,number=-)
want	CON(type=sub)
si	PRN
sach	VRB(mood=finite,tense=past,number=sg)
al	ADV(type=-,degree=-)
roet	ADJ(degree=-)
Van	ADP
bloede	NOU(type=comm,number=sg)
sine	PRN
wonden	NOU(type=comm,number=pl)
groet	ADJ(degree=-)
Mar	CON(type=coor)
ihesus	NOU(type=proper,number=-)
xpristus	NOU(type=proper,number=-)
got	NOU(type=comm,number=sg)
die	PRN
here	NOU(type=comm,number=sg)
Doe	CON(type=sub)
hi	PRN
die	PRN
maget	NOU(type=comm,number=sg)
also	ADV(type=-,degree=-)
sere	ADV(type=-,degree=-)
Sach	VRB(mood=finite,tense=past,number=sg)
wederslegen.	VRB(mood=part,tense=past,number=-)
sonder	ADP
beide	NOU(type=comm,number=sg)
Ghinc	VRB(mood=finite,tense=past,number=sg)
hise	PRN+PRN
trosten	VRB(mood=inf,tense=-,number=-)
ende	CON(type=coor)
seide	VRB(mood=finite,tense=past,number=sg)
Lutgart	NOU(type=proper,number=-)
mine	PRN
utuercorne	ADJ(degree=-)
wert	ADJ(degree=-)
Jc	PRN
weet	VRB(mood=finite,tense=pres,number=sg)
mi	PRN
wale	ADV(type=-,degree=-)
wat	ADV(type=-,degree=-)
v	PRN
dert	VRB(mood=finite,tense=pres,number=sg)
Warumme	ADV(type=-,degree=-)
sidi	PRN+VRB(mood=finite,tense=pres,number=sg)
so	ADV(type=-,degree=-)
uerssaget	ADJ(degree=-)
Sijt	VRB(mood=finite,tense=pres,number=sg)
wel	ADV(type=-,degree=-)
terasten	ADP+NOU(type=comm,number=sg)
schone	ADJ(degree=-)
maget	NOU(type=comm,number=sg)
Jc	PRN
bent	PRN+VRB(mood=finite,tense=pres,number=sg)
ihesus	NOU(type=proper,number=-)
v	PRN
brudegoem	NOU(type=comm,number=sg)
Siet	VRB(mood=finite,tense=pres,number=sg)
op	ADP
mi	PRN
ende	CON(type=coor)
nemet	VRB(mood=finite,tense=pres,number=sg)
ghoem	ADJ(degree=-)
Lutgart	NOU(type=proper,number=-)
och	CON(type=coor)
gi	PRN
mi	PRN
it	PRN
bekinnet	VRB(mood=finite,tense=pres,number=sg)
Jc	PRN
ben	VRB(mood=finite,tense=pres,number=sg)
degene	PRN+PRN
din	PRN
gi	PRN
minnet	VRB(mood=finite,tense=pres,number=sg)
Met	ADP
vrier	ADJ(degree=-)
herten	NOU(type=comm,number=sg)
sonder	ADP
wanc	NOU(type=comm,number=sg)
Dis	PRN
wetic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
wel	ADV(type=-,degree=-)
groten	ADJ(degree=-)
danc	NOU(type=comm,number=sg)
Oc	ADV(type=-,degree=-)
salic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
met	ADP
uollen	ADJ(degree=-)
loene	NOU(type=comm,number=sg)
Dat	PRN
wel	ADV(type=-,degree=-)
uergelden	VRB(mood=inf,tense=-,number=-)
maget	NOU(type=comm,number=sg)
schone	ADJ(degree=-)
Op+dat	CON(type=sub)
gi	PRN
bliuet	VRB(mood=finite,tense=pres,number=sg)
uaste	ADJ(degree=-)
in	ADP
desen	PRN
Nv	ADV(type=-,degree=-)
latet	VRB(mood=finite,tense=pres,number=sg)
dan	ADV(type=-,degree=-)
v	PRN
clagen	NOU(type=comm,number=sg)
wesen	VRB(mood=inf,tense=-,number=-)
Dat	PRN
gi	PRN
so	ADV(type=-,degree=-)
dekke	ADV(type=-,degree=-)
doet	VRB(mood=finite,tense=pres,number=sg)
lutgart	NOU(type=proper,number=-)
Van+din+dat	CON(type=sub)
gi	PRN
so	ADV(type=-,degree=-)
gerne	ADV(type=-,degree=-)
wart	VRB(mood=finite,tense=past,number=sg)
Ontladen	VRB(mood=part,tense=past,number=-)
van	ADP
der	PRN
werelt	NOU(type=comm,number=sg)
pinen	NOU(type=comm,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
gesellet	VRB(mood=part,tense=past,number=-)
metten	ADP+PRN
minem	PRN
Die	PRN
in	ADP
dat	PRN
schone	ADJ(degree=-)
paradijs	NOU(type=comm,number=sg)
Nv	ADV(type=-,degree=-)
dragen	VRB(mood=finite,tense=pres,number=pl)
dat	PRN
gebloide	ADJ(degree=-)
rijs	NOU(type=comm,number=sg)
Want	CON(type=sub)
daer	ADV(type=-,degree=-)
seldi	PRN+VRB(mood=finite,tense=pres,number=sg)
wel	ADV(type=-,degree=-)
mogen	VRB(mood=finite,tense=pres,number=pl)
comen	VRB(mood=inf,tense=-,number=-)
Al	ADV(type=-,degree=-)
sonder	ADP
waen.	NOU(type=comm,number=sg)
meer	PRN
tuwen	ADP+PRN
uromen	NOU(type=comm,number=sg)
Hir+namals	ADV(type=-,degree=-)
ende	CON(type=coor)
nit	ADV(type=-,degree=-)
te	ADP
spade	ADJ(degree=-)
Op+dat	CON(type=sub)
gi	PRN
doet	VRB(mood=finite,tense=pres,number=sg)
dat	PRN
ic	PRN
v	PRN
rade	VRB(mood=finite,tense=pres,number=sg)
Mijn	PRN
raet	NOU(type=comm,number=sg)
hi	PRN
es	VRB(mood=finite,tense=pres,number=sg)
dat	CON(type=sub)
gi	PRN
v	PRN
nit	ADV(type=-,degree=-)
En	ADV(type=-,degree=-)
laett	VRB(mood=finite,tense=pres,number=sg)
uerwassen.	VRB(mood=inf,tense=-,number=-)
mar	CON(type=coor)
besit	VRB(mood=finite,tense=pres,number=sg)
Die	PRN
grote	ADJ(degree=-)
wonden	NOU(type=comm,number=pl)
die	PRN
hir	ADV(type=-,degree=-)
staen	VRB(mood=finite,tense=pres,number=pl)
Jn	ADP
minen	PRN
liue	NOU(type=comm,number=sg)
wide	ADJ(degree=-)
ontdaen	VRB(mood=part,tense=past,number=-)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
uernemet	VRB(mood=finite,tense=pres,number=sg)
har	PRN
gelut	NOU(type=comm,number=sg)
Dat	PRN
si	PRN
hir	ADV(type=-,degree=-)
maken	VRB(mood=finite,tense=pres,number=pl)
schone	ADJ(degree=-)
brut	NOU(type=comm,number=sg)
Al+daer	ADV(type=-,degree=-)
si	PRN
staen	VRB(mood=finite,tense=pres,number=pl)
in	ADP
minen	PRN
liue	NOU(type=comm,number=sg)
Hort	VRB(mood=finite,tense=pres,number=sg)
hoe	ADV(type=-,degree=-)
si	PRN
roepen	VRB(mood=finite,tense=pres,number=pl)
alle	PRN
uiue	NUM(type=car)
Si	PRN
ropen	VRB(mood=finite,tense=pres,number=pl)
alle	PRN
sonderlinge	ADV(type=-,degree=-)
Nv	ADV(type=-,degree=-)
hort	VRB(mood=finite,tense=pres,number=sg)
lutgart	NOU(type=proper,number=-)
wel	ADV(type=-,degree=-)
har	PRN
gedinge	NOU(type=comm,number=sg)
lees	RES(type=-)
nu	ADV(type=-,degree=-)
er	RES(type=-)
staat	RES(type=-)
warummme	ADV(type=-,degree=-)
tussen	RES(type=-)
w	RES(type=-)
en	RES(type=-)
e	RES(type=-)
een	RES(type=-)
e	RES(type=-)
bovengeschreven,	RES(type=-)
hand	RES(type=-)
H:	RES(type=-)
weetic	PRN+VRB(mood=finite,tense=pres,number=sg)
lees	RES(type=-)
minen	PRN
Ende	CON(type=coor)
al	ADV(type=-,degree=-)
dat	PRN
si	PRN
v	PRN
leeren	VRB(mood=finite,tense=pres,number=pl)
nv	ADV(type=-,degree=-)
Onthoudet	VRB(mood=finite,tense=pres,number=sg)
wel	ADV(type=-,degree=-)
dat	PRN
radic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
Do	CON(type=sub)
wart	VRB(mood=finite,tense=past,number=sg)
lutgart	NOU(type=proper,number=-)
die	PRN
vrie	ADJ(degree=-)
maget	NOU(type=comm,number=sg)
Van	ADP
din	PRN
ilancsomeer	ADV(type=-,degree=-)+ADV(type=-,degree=-)+ADV(type=-,degree=-)+ADV(type=-,degree=-)+CON(type=sub)
verssaget	VRB(mood=part,tense=past,number=-)
Dat	CON(type=sub)
si	PRN
so	ADV(type=-,degree=-)
roet	ADJ(degree=-)
die	PRN
wonden	NOU(type=comm,number=pl)
sach	VRB(mood=finite,tense=past,number=sg)
Ontfarmelic	ADV(type=-,degree=-)
si	PRN
seide	VRB(mood=finite,tense=past,number=sg)
owach	INT
Ai.	INT
sute	ADJ(degree=-)
got.	NOU(type=comm,number=sg)
ai.	INT
sute	ADJ(degree=-)
here	NOU(type=comm,number=sg)
Dor	ADV(type=-,degree=-)
recht	NOU(type=comm,number=sg)
soudic	PRN+VRB(mood=finite,tense=past,number=sg)
v	PRN
minnen	VRB(mood=inf,tense=-,number=-)
sere	ADV(type=-,degree=-)
Dat	CON(type=sub)
gi	PRN
dor	ADP
minen	PRN
wille	NOU(type=comm,number=sg)
doeget	VRB(mood=finite,tense=pres,number=sg)
Die	PRN
wonden	NOU(type=comm,number=pl)
die	PRN
gi	PRN
hir	ADV(type=-,degree=-)
betoeget	VRB(mood=finite,tense=pres,number=sg)
Mar	CON(type=coor)
wat	ADV(type=-,degree=-)
die	PRN
wonden	NOU(type=comm,number=pl)
roepen	VRB(mood=finite,tense=pres,number=pl)
nv	ADV(type=-,degree=-)
Dat	PRN
segget	VRB(mood=finite,tense=pres,number=sg)
mi	PRN
dis	PRN
biddic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
Dat	PRN
si	PRN
mi	PRN
heeten	VRB(mood=finite,tense=pres,number=pl)
doic	PRN+VRB(mood=finite,tense=pres,number=sg)
gerne	ADV(type=-,degree=-)
Want	CON(type=sub)
nit	ADV(type=-,degree=-)
nes	ADV(type=-,degree=-)+VRB(mood=finite,tense=pres,number=sg)
recht	NOU(type=comm,number=sg)
dat	CON(type=sub)
ics	PRN+PRN
hen	PRN
werne;	VRB(mood=finite,tense=pres,number=sg)
Doe	ADV(type=-,degree=-)
sprac	VRB(mood=finite,tense=past,number=sg)
hi	PRN
uoert.	ADV(type=-,degree=-)
wel+schone	ADJ(degree=-)
brut	NOU(type=comm,number=sg)
Jc	PRN
sal	VRB(mood=finite,tense=pres,number=sg)
v	PRN
seggen	VRB(mood=inf,tense=-,number=-)
har	PRN
gelut	NOU(type=comm,number=sg)
Har	PRN
roepen	NOU(type=comm,number=sg)
dats	PRN+VRB(mood=finite,tense=pres,number=sg)
dat	CON(type=sub)
si	PRN
v	PRN
manen	VRB(mood=finite,tense=pres,number=pl)
Dat	CON(type=sub)
gi	PRN
met	ADP
ernsteliken	ADJ(degree=-)
tranen	NOU(type=comm,number=pl)
Daer	ADV(type=-,degree=-)+PRN
gi	PRN
v	PRN
met	ADV(type=-,degree=-)+PRN
selt	VRB(mood=finite,tense=pres,number=sg)
moten	VRB(mood=inf,tense=-,number=-)
quellen	VRB(mood=inf,tense=-,number=-)
Die	PRN
grote	ADJ(degree=-)
abolge	NOU(type=comm,number=sg)
selt	VRB(mood=finite,tense=pres,number=sg)
beuellen	VRB(mood=inf,tense=-,number=-)
Die	PRN
hebben	VRB(mood=finite,tense=pres,number=pl)
die	PRN
in	ADP
sonden	NOU(type=comm,number=pl)
sijn	VRB(mood=finite,tense=pres,number=pl)
Verdint	VRB(mood=finite,tense=pres,number=sg)
iegen	ADP
den	PRN
vader	NOU(type=comm,number=sg)
mijn	PRN
So	ADV(type=-,degree=-)
mogen	VRB(mood=finite,tense=pres,number=pl)
si	PRN
der	PRN
plagen	NOU(type=comm,number=pl)
wreet	ADJ(degree=-)
Onstaen.	VRB(mood=inf,tense=-,number=-)
die	PRN
hen	PRN
nv	ADV(type=-,degree=-)
es	VRB(mood=finite,tense=pres,number=sg)
gereet	VRB(mood=part,tense=past,number=-)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
daer+toe	ADV(type=-,degree=-)+PRN
te	ADP
haren	PRN
uromen	NOU(type=comm,number=sg)
Te	ADP
sire	PRN
soenen	NOU(type=comm,number=sg)
weder+comen	VRB(mood=inf,tense=-,number=-)
Doe	ADV(type=-,degree=-)
sprac	VRB(mood=finite,tense=past,number=sg)
oc	ADV(type=-,degree=-)
dos	ADV(type=-,degree=-)
die	PRN
urowe	NOU(type=comm,number=sg)
voert	ADV(type=-,degree=-)
Dit	PRN
roepen	NOU(type=comm,number=sg)
hebbic	PRN+VRB(mood=finite,tense=pres,number=sg)
wel	ADV(type=-,degree=-)
gehort	VRB(mood=part,tense=past,number=-)
Dat	PRN
mi	PRN
gebieden	VRB(mood=finite,tense=pres,number=pl)
vwe	PRN
wonden	NOU(type=comm,number=pl)
Dat	PRN
salic	PRN+VRB(mood=finite,tense=pres,number=sg)
gerne	ADV(type=-,degree=-)
in	ADP
allen	PRN
stonden	NOU(type=comm,number=pl)
Al	ADV(type=-,degree=-)
sonder	ADP
wanc	NOU(type=comm,number=sg)
dach	NOU(type=comm,number=sg)
ende	CON(type=coor)
nacht	NOU(type=comm,number=sg)
Volbrengen	VRB(mood=inf,tense=-,number=-)
al	ADV(type=-,degree=-)
na	ADP
mine	PRN
macht	NOU(type=comm,number=sg)
Nv	ADV(type=-,degree=-)
biddic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
wel+sute	ADJ(degree=-)
here	NOU(type=comm,number=sg)
Dat	CON(type=sub)
gi	PRN
dor	ADP
vwes	PRN
selues	PRN
eere	NOU(type=comm,number=sg)
Mi	PRN
gracie	NOU(type=comm,number=sg)
ende	CON(type=coor)
spoet	NOU(type=comm,number=sg)
uerleenet	VRB(mood=finite,tense=pres,number=sg)
Al	ADV(type=-,degree=-)
te	ADP
uolbrengene	VRB(mood=inf,tense=-,number=-)
dat	PRN
gi	PRN
meenet	VRB(mood=finite,tense=pres,number=sg)
So+dat	CON(type=sub)
in	ADP
staden	NOU(type=comm,number=sg)
moge	VRB(mood=finite,tense=pres,number=sg)
staen	VRB(mood=inf,tense=-,number=-)
Die	PRN
pine	NOU(type=comm,number=sg)
die	PRN
ic	PRN
sal	VRB(mood=finite,tense=pres,number=sg)
angaen	VRB(mood=inf,tense=-,number=-)
Allen	PRN
dengenen	PRN+PRN
sonderlinge	ADV(type=-,degree=-)
Die	PRN
ic	PRN
ontfa	VRB(mood=finite,tense=pres,number=sg)
in	ADP
mijn	PRN
gedinge	NOU(type=comm,number=sg)
Ende	CON(type=coor)
die	PRN
mi	PRN
vwe	PRN
wonden	NOU(type=comm,number=pl)
groet	ADJ(degree=-)
Die	PRN
ic	PRN
beschowet	VRB(mood=part,tense=past,number=-)
hebbe	VRB(mood=finite,tense=pres,number=sg)
al+bloet	ADV(type=-,degree=-)
Te	ADP
minen	PRN
trowen	NOU(type=comm,number=sg)
hebben	VRB(mood=finite,tense=pres,number=pl)
nu	ADV(type=-,degree=-)
Beuolen.	VRB(mood=part,tense=past,number=-)
got	NOU(type=comm,number=sg)
dis	PRN
biddic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
Na	ADP
desen	PRN
warden	NOU(type=comm,number=pl)
sonder	ADP
beide	NOU(type=comm,number=sg)
Die	PRN
godes	NOU(type=comm,number=sg)
sone	NOU(type=comm,number=sg)
weder	VRB(mood=finite,tense=pres,number=sg)
seide	VRB(mood=finite,tense=pres,number=sg)
Dit	PRN
salic	PRN+VRB(mood=finite,tense=pres,number=sg)
gerne	ADV(type=-,degree=-)
doen	VRB(mood=inf,tense=-,number=-)
lutgart	NOU(type=proper,number=-)
Nv	ADV(type=-,degree=-)
kirt	VRB(mood=finite,tense=pres,number=sg)
dan	ADV(type=-,degree=-)
weder.	VRB(mood=finite,tense=pres,number=sg)
ende	CON(type=coor)
vart	VRB(mood=finite,tense=pres,number=sg)
Daer	ADV(type=-,degree=-)
gi	PRN
uolplegen	VRB(mood=inf,tense=-,number=-)
moget	VRB(mood=finite,tense=pres,number=sg)
des	PRN
Want	CON(type=coor)
dat	PRN
v	PRN
hir	ADV(type=-,degree=-)
beuolen	VRB(mood=part,tense=past,number=-)
es	VRB(mood=finite,tense=pres,number=sg)
Nv	ADV(type=-,degree=-)
terre	ADP+PRN
wilen	NOU(type=comm,number=sg)
maget	NOU(type=comm,number=sg)
fijn	ADJ(degree=-)
Dat	PRN
moet	VRB(mood=finite,tense=pres,number=sg)
bi	ADP
v	PRN
geuordert	VRB(mood=part,tense=past,number=-)
sijn	VRB(mood=finite,tense=pres,number=pl)
Doe	CON(type=sub)
dese	PRN
tale	NOU(type=comm,number=sg)
har	PRN
inde	NOU(type=comm,number=sg)
nam	VRB(mood=finite,tense=past,number=sg)
Die	PRN
gheest	NOU(type=comm,number=sg)
her+weder	ADV(type=-,degree=-)
tale	NOU(type=comm,number=sg)
quam	VRB(mood=finite,tense=past,number=sg)
Te	ADP
din	PRN
lichame.	NOU(type=comm,number=sg)
ende	CON(type=coor)
altehant	ADV(type=-,degree=-)
Stont+op	VRB(mood=finite,tense=past,number=sg)
die	PRN
magt	NOU(type=comm,number=sg)
die	PRN
hare	PRN
uant	VRB(mood=finite,tense=past,number=sg)
Noch	ADV(type=-,degree=-)
liggende	VRB(mood=part,tense=pres,number=-)
op	ADP
die	PRN
selue	PRN
stede	NOU(type=comm,number=sg)
Daer	ADV(type=-,degree=-)
si	PRN
teuoren	ADV(type=-,degree=-)
hare	PRN
bede	NOU(type=comm,number=sg)
Begonnen	VRB(mood=part,tense=past,number=-)
hadde.	VRB(mood=finite,tense=past,number=sg)
ende	CON(type=coor)
alse	CON(type=sub)
doe	ADV(type=-,degree=-)
Lutgart	NOU(type=proper,number=-)
die	PRN
peinsede	VRB(mood=finite,tense=past,number=sg)
emmertoe	ADV(type=-,degree=-)
Al	ADV(type=-,degree=-)
noch	ADV(type=-,degree=-)
om	ADP
dat	PRN
si	PRN
heft	VRB(mood=finite,tense=pres,number=sg)
uernomen	VRB(mood=part,tense=past,number=-)
Was	VRB(mood=finite,tense=past,number=sg)
wel	ADV(type=-,degree=-)
terasten	ADP+NOU(type=comm,number=sg)
weder	ADV(type=-,degree=-)
comen	VRB(mood=part,tense=past,number=-)
Began	VRB(mood=finite,tense=past,number=sg)
si	PRN
louen	VRB(mood=inf,tense=-,number=-)
harde	ADV(type=-,degree=-)
sere	ADV(type=-,degree=-)
Met	ADP
blider	ADJ(degree=-)
herten	NOU(type=comm,number=sg)
onsen	PRN
here	NOU(type=comm,number=sg)
Om+dat	CON(type=sub)
hi	PRN
heuet	VRB(mood=finite,tense=pres,number=sg)
wel	ADV(type=-,degree=-)
gesachtt	VRB(mood=part,tense=past,number=-)
Al	ADV(type=-,degree=-)
haren	PRN
commer	NOU(type=comm,number=sg)
ende	CON(type=coor)
brachtt	VRB(mood=finite,tense=past,number=sg)
Har	PRN
herte	NOU(type=comm,number=sg)
wel	ADV(type=-,degree=-)
terasten	ADP+NOU(type=comm,number=sg)
weder	ADV(type=-,degree=-)
Dos	ADV(type=-,degree=-)
bleef	VRB(mood=finite,tense=past,number=sg)
die	PRN
maget	NOU(type=comm,number=sg)
lange	ADV(type=-,degree=-)
seder	ADV(type=-,degree=-)
Met	ADP
groten	ADJ(degree=-)
rasten	NOU(type=comm,number=sg)
sonder	ADP
clage	NOU(type=comm,number=sg)
Hem	PRN
dienende	VRB(mood=part,tense=pres,number=-)
al	ADV(type=-,degree=-)
har	PRN
leuedage.	NOU(type=comm,number=pl)
Van	ADP
den	PRN
paus	NOU(type=comm,number=sg)
jnnocentiuse	NOU(type=proper,number=-)
die	PRN
te	ADP
hare	PRN
quam	VRB(mood=finite,tense=past,number=sg)
tire+wilen+dat	CON(type=sub)
hi	PRN
verschit	VRB(mood=finite,tense=past,number=sg)
En	PRN
paus	NOU(type=comm,number=sg)
te	ADP
rome	NOU(type=proper,number=-)
wilen	ADV(type=-,degree=-)
was.	VRB(mood=finite,tense=past,number=sg)
Daer	ADV(type=-,degree=-)+PRN
ic	PRN
hiruore	ADV(type=-,degree=-)+PRN
v	PRN
aue	ADV(type=-,degree=-)+PRN
las	VRB(mood=finite,tense=past,number=sg)
Die	PRN
hit	VRB(mood=finite,tense=past,number=sg)
her	NOU(type=comm,number=sg)
jnnocentius	NOU(type=proper,number=-)
Nochtan	ADV(type=-,degree=-)
al	CON(type=sub)
hit	VRB(mood=finite,tense=past,number=sg)
die	PRN
here	NOU(type=comm,number=sg)
al+dus	ADV(type=-,degree=-)
En	ADV(type=-,degree=-)
heft	VRB(mood=finite,tense=pres,number=sg)
hi	PRN
nit	ADV(type=-,degree=-)
gedaen	VRB(mood=part,tense=past,number=-)
in	ADP
schijn	NOU(type=comm,number=sg)
Met	ADP
werken.	NOU(type=comm,number=sg)
dat	PRN
die	PRN
name	NOU(type=comm,number=sg)
sijn	PRN
Te	ADP
rechte	NOU(type=comm,number=sg)
an	ADP
hem	PRN
bestadet	ADJ(degree=-)
ware	VRB(mood=finite,tense=past,number=sg)
Want	CON(type=sub)
beide	CON(type=coor)
stille	ADV(type=-,degree=-)
ende	CON(type=coor)
oppenbare	ADV(type=-,degree=-)
So	ADV(type=-,degree=-)
plach	VRB(mood=finite,tense=past,number=sg)
hi	PRN
doen	VRB(mood=inf,tense=-,number=-)
in	ADP
somen	PRN
stonden	VRB(mood=finite,tense=past,number=pl)
Daer	ADV(type=-,degree=-)+PRN
hi	PRN
met	ADV(type=-,degree=-)+PRN
heuet	VRB(mood=finite,tense=pres,number=sg)
hem	PRN
ontfonden	VRB(mood=part,tense=past,number=-)
Van	ADP
sinen	PRN
name	NOU(type=comm,number=sg)
dat	PRN
bedit	NOU(type=comm,number=sg)
Want	CON(type=sub)
alte	ADV(type=-,degree=-)+ADV(type=-,degree=-)
sere	ADV(type=-,degree=-)
hi	PRN
hem	PRN
uerlit	VRB(mood=finite,tense=past,number=sg)
Op	ADP
sine	PRN
grote	ADJ(degree=-)
auctoriteit	NOU(type=comm,number=sg)
Ende	CON(type=coor)
om	ADP
die	PRN
grote	ADJ(degree=-)
werdechheit	NOU(type=comm,number=sg)
Die	PRN
hem	PRN
uerleende	VRB(mood=finite,tense=past,number=sg)
got	NOU(type=comm,number=sg)
die	PRN
goede	ADJ(degree=-)
So	ADV(type=-,degree=-)
was	VRB(mood=finite,tense=past,number=sg)
hi	PRN
uan	ADP
so	ADV(type=-,degree=-)
hogen	ADJ(degree=-)
moede	NOU(type=comm,number=sg)
Dat	CON(type=sub)
het	PRN
quam	VRB(mood=finite,tense=past,number=sg)
sider	ADV(type=-,degree=-)
hem	PRN
te	ADP
schaden	NOU(type=comm,number=sg)
Want	CON(type=sub)
hi	PRN
met	ADP
noseliken	ADJ(degree=-)
daden	NOU(type=comm,number=pl)
So	ADV(type=-,degree=-)
uerre	ADV(type=-,degree=-)
plach	VRB(mood=finite,tense=past,number=sg)
hem	PRN
buten	ADV(type=-,degree=-)
leiden	VRB(mood=inf,tense=-,number=-)
Den	PRN
wegen	NOU(type=comm,number=sg)
uan	ADP
onnoselheiden	NOU(type=comm,number=sg)
Dat	CON(type=sub)
het	PRN
uerginc	VRB(mood=finite,tense=past,number=sg)
hem	PRN
sent	ADV(type=-,degree=-)
te	ADP
leede	NOU(type=comm,number=sg)
Want	CON(type=coor)
alse	CON(type=sub)
quam	VRB(mood=finite,tense=past,number=sg)
te	ADP
din	PRN
gescheede	NOU(type=comm,number=sg)
Die	PRN
sile	NOU(type=comm,number=sg)
daer	ADV(type=-,degree=-)
si	PRN
laten	VRB(mood=inf,tense=-,number=-)
soude	VRB(mood=finite,tense=past,number=sg)
Dit	PRN
lijf.	NOU(type=comm,number=sg)
ende	CON(type=coor)
in	ADP
die	PRN
gods	NOU(type=comm,number=sg)
gewoude	NOU(type=comm,number=sg)
En+wege+uaren	VRB(mood=inf,tense=-,number=-)
loen	NOU(type=comm,number=sg)
ontfaen	VRB(mood=inf,tense=-,number=-)
Van	ADP
allen	PRN
dat	PRN
si	PRN
ie	ADV(type=-,degree=-)
gedaen	VRB(mood=part,tense=past,number=-)
Teuoren	ADV(type=-,degree=-)
hadde	VRB(mood=finite,tense=past,number=sg)
in	ADP
haren	PRN
dagen	NOU(type=comm,number=pl)
Alse	CON(type=sub)
alle	PRN
silen	NOU(type=comm,number=pl)
oit	ADV(type=-,degree=-)
plagen	VRB(mood=finite,tense=past,number=sg)
Ende	CON(type=coor)
emmermeer	ADV(type=-,degree=-)
oc	ADV(type=-,degree=-)
selen	VRB(mood=finite,tense=pres,number=pl)
plien	VRB(mood=inf,tense=-,number=-)
Dis	PRN
igewelc	PRN
hem	PRN
mach	VRB(mood=finite,tense=pres,number=sg)
onssin	VRB(mood=inf,tense=-,number=-)
Die	PRN
metten	ADP+PRN
sonden	NOU(type=comm,number=sg)
omme+gaet	VRB(mood=finite,tense=pres,number=sg)
En	ADV(type=-,degree=-)
conde	VRB(mood=finite,tense=past,number=sg)
si	PRN
dat	PRN
uolle	ADJ(degree=-)
aflaet	NOU(type=comm,number=sg)
Vercrigen	VRB(mood=inf,tense=-,number=-)
nit	ADV(type=-,degree=-)
noch	CON(type=coor)
dat	PRN
pardon	NOU(type=comm,number=sg)
Dat	PRN
hi	PRN
plach	VRB(mood=finite,tense=past,number=sg)
andren	ADJ(degree=-)
lieden	NOU(type=comm,number=pl)
doen	VRB(mood=inf,tense=-,number=-)
Jn	ADP
sinen	PRN
liue	NOU(type=comm,number=sg)
wilen+eere	ADV(type=-,degree=-)
Die	PRN
paus	NOU(type=comm,number=sg)
mar.	ADJ(degree=-)
die	PRN
grote	ADJ(degree=-)
heere	NOU(type=comm,number=sg)
Mar	CON(type=coor)
dis	ADV(type=-,degree=-)
hi	PRN
selue	PRN
daer+teuoren	ADV(type=-,degree=-)+PRN
Dis	PRN
tides	NOU(type=comm,number=sg)
hadde	VRB(mood=finite,tense=past,number=sg)
en	PRN
deel	NOU(type=comm,number=sg)
uerloren	VRB(mood=part,tense=past,number=-)
Met	ADP
argen	ADJ(degree=-)
werken	NOU(type=comm,number=pl)
ende	CON(type=coor)
boese	ADJ(degree=-)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
geleuet	VRB(mood=part,tense=past,number=-)
roekeloese	ADJ(degree=-)
Gelijc+dat	CON(type=sub)
menech	PRN
ander	ADJ(degree=-)
pleget	VRB(mood=finite,tense=pres,number=sg)
So	ADV(type=-,degree=-)
wart	VRB(mood=finite,tense=past,number=sg)
die	PRN
siele	NOU(type=comm,number=sg)
al+daer	ADV(type=-,degree=-)
geweget	VRB(mood=part,tense=past,number=-)
Daer	ADV(type=-,degree=-)
si	PRN
began	VRB(mood=finite,tense=past,number=sg)
geuulen	VRB(mood=inf,tense=-,number=-)
schire	ADV(type=-,degree=-)
Der	PRN
pinen	NOU(type=comm,number=sg)
van	ADP
den	PRN
uegeuire	NOU(type=comm,number=sg)
Suar	ADJ(degree=-)
utermaten	ADV(type=-,degree=-)
ende	CON(type=coor)
groet	ADJ(degree=-)
Want	CON(type=coor)
got	NOU(type=comm,number=sg)
die	PRN
alle	PRN
dinc	NOU(type=comm,number=pl)
geboet	VRB(mood=finite,tense=past,number=sg)
Sententie	NOU(type=comm,number=sg)
heft	VRB(mood=finite,tense=pres,number=sg)
also	ADV(type=-,degree=-)
gegeuen	VRB(mood=part,tense=past,number=-)
Om+dat	CON(type=sub)
si	PRN
was	VRB(mood=finite,tense=past,number=sg)
besmettet	ADJ(degree=-)
bleuen	VRB(mood=part,tense=past,number=-)
Van	ADP
groten	ADJ(degree=-)
sonden	NOU(type=comm,number=pl)
ende	CON(type=coor)
suar	ADJ(degree=-)
Die	PRN
Jnnocens	NOU(type=proper,number=-)
die	PRN
paus	NOU(type=comm,number=sg)
mar	ADJ(degree=-)
En	ADV(type=-,degree=-)
hadde	VRB(mood=finite,tense=past,number=sg)
wel	ADV(type=-,degree=-)
gebetert	VRB(mood=part,tense=past,number=-)
nit	ADV(type=-,degree=-)
Eer	CON(type=sub)
hi	PRN
uan	ADP
derre	PRN
werelt	NOU(type=comm,number=sg)
schit;	VRB(mood=finite,tense=past,number=sg)
Mar	CON(type=coor)
wildi	PRN+VRB(mood=finite,tense=pres,number=sg)
dat	CON(type=sub)
ic	PRN
v	PRN
bediede	VRB(mood=finite,tense=past,number=sg)
Wat	ADV(type=-,degree=-)
an	ADP
din	PRN
stonden	NOU(type=comm,number=sg)
oc	ADV(type=-,degree=-)
geschide	VRB(mood=finite,tense=past,number=sg)
War+bi	ADV(type=-,degree=-)+PRN
dit	PRN
selue	PRN
es	VRB(mood=finite,tense=pres,number=sg)
oppenbart	VRB(mood=part,tense=past,number=-)
Tin	ADP+PRN
seluen	PRN
tiden	NOU(type=comm,number=sg)
lach	VRB(mood=finite,tense=past,number=sg)
lutgart	NOU(type=proper,number=-)
Die	PRN
godes	NOU(type=comm,number=sg)
brut	NOU(type=comm,number=sg)
in	ADP
kniegebede	NOU(type=comm,number=sg)
Ende	CON(type=coor)
een	PRN
gebet	NOU(type=comm,number=sg)
met	ADP
goeme	ADJ(degree=-)
dede	VRB(mood=finite,tense=past,number=sg)
Te	ADP
gode	NOU(type=comm,number=sg)
wert	ADP
op	ADP
eenen	PRN
dach	NOU(type=comm,number=sg)
Daer	ADV(type=-,degree=-)
si	PRN
bi	ADV(type=-,degree=-)
wilen	ADV(type=-,degree=-)
beden	VRB(mood=inf,tense=-,number=-)
plach	VRB(mood=finite,tense=past,number=sg)
Dat	PRN
was	VRB(mood=finite,tense=past,number=sg)
tin	ADP+PRN
nameliken	ADJ(degree=-)
stonden	NOU(type=comm,number=sg)
Dat	PRN
wart	VRB(mood=finite,tense=past,number=sg)
dis	PRN
heeren	NOU(type=comm,number=sg)
sile	NOU(type=comm,number=sg)
ontbonden	VRB(mood=part,tense=past,number=-)
Van	ADP
din	PRN
lichame.	NOU(type=comm,number=sg)
ende	CON(type=coor)
es	VRB(mood=finite,tense=pres,number=sg)
geuaren	VRB(mood=part,tense=past,number=-)
De	PRN
sonden	NOU(type=comm,number=pl)
die	PRN
an	ADP
hare	PRN
waren	VRB(mood=finite,tense=past,number=pl)
Jnt	ADP+PRN
purgatorie	NOU(type=comm,number=sg)
arnen	VRB(mood=finite,tense=pres,number=pl)
sere	ADV(type=-,degree=-)
Want	CON(type=coor)
dat	PRN
jujeerde	VRB(mood=finite,tense=past,number=sg)
got	NOU(type=comm,number=sg)
die	PRN
here	NOU(type=comm,number=sg)
Al+daer	ADV(type=-,degree=-)
die	PRN
magt	NOU(type=comm,number=sg)
uan	ADP
groten	ADJ(degree=-)
prise	NOU(type=comm,number=sg)
Gelegen	VRB(mood=part,tense=past,number=-)
was	VRB(mood=finite,tense=past,number=sg)
in	ADP
derre	PRN
wise	NOU(type=comm,number=sg)
Ende	CON(type=coor)
harre	PRN
beden	NOU(type=comm,number=sg)
soude	VRB(mood=finite,tense=past,number=sg)
plegen	VRB(mood=inf,tense=-,number=-)
Geuil	VRB(mood=finite,tense=past,number=sg)
dat	CON(type=sub)
si	PRN
op	VRB(mood=part,tense=past,number=-)
heft	VRB(mood=finite,tense=pres,number=sg)
geslegen	VRB(mood=part,tense=past,number=-)
Hare	PRN
ogen	NOU(type=comm,number=pl)
beide.	PRN
ende	CON(type=coor)
also	ADV(type=-,degree=-)
saen	ADV(type=-,degree=-)
Sach	VRB(mood=finite,tense=past,number=sg)
si	PRN
beneuen	ADP
hare	PRN
staen	VRB(mood=inf,tense=-,number=-)
Dis	PRN
heeren	NOU(type=comm,number=sg)
sile	NOU(type=comm,number=sg)
in	ADP
groten	ADJ(degree=-)
pinen	NOU(type=comm,number=sg)
Want	CON(type=sub)
si	PRN
die	PRN
ulamme	NOU(type=comm,number=sg)
sach	VRB(mood=finite,tense=past,number=sg)
beschinen	VRB(mood=inf,tense=-,number=-)
Die	PRN
sile	NOU(type=comm,number=sg)
omtrent	ADV(type=-,degree=-)
in	ADP
allen	PRN
staden	NOU(type=comm,number=pl)
So	ADV(type=-,degree=-)
einselic	ADV(type=-,degree=-)
ende	CON(type=coor)
oc	ADV(type=-,degree=-)
uerladen	VRB(mood=part,tense=past,number=-)
Dat	CON(type=sub)
si	PRN
teuoren	ADV(type=-,degree=-)
die	PRN
gelike	NOU(type=comm,number=sg)
En	ADV(type=-,degree=-)
hadde	VRB(mood=finite,tense=past,number=sg)
nie	ADV(type=-,degree=-)
in	ADP
erterike	NOU(type=comm,number=sg)
Noch	CON(type=coor)
horen	VRB(mood=inf,tense=-,number=-)
seggen	VRB(mood=inf,tense=-,number=-)
noch	CON(type=coor)
gesin	VRB(mood=part,tense=past,number=-)
Dis	ADV(type=-,degree=-)
wart	VRB(mood=finite,tense=past,number=sg)
die	PRN
maget	NOU(type=comm,number=sg)
so	ADV(type=-,degree=-)
uan	ADP
din	PRN
Verssaget.	VRB(mood=part,tense=past,number=-)
dat	CON(type=sub)
si	PRN
rip	VRB(mood=finite,tense=past,number=sg)
owi	INT
Met	ADP
luder	ADJ(degree=-)
stemmen.	NOU(type=comm,number=sg)
segget	VRB(mood=finite,tense=pres,number=sg)
mi	PRN
Van	ADP
godes	NOU(type=comm,number=sg)
haluen	NOU(type=comm,number=sg)
wie	PRN
gi	PRN
sijt	VRB(mood=finite,tense=pres,number=sg)
Dis	PRN
manic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
dat	CON(type=sub)
gi	PRN
mi	PRN
lijt	VRB(mood=finite,tense=pres,number=sg)
Van	ADP
godeshaluen	NOU(type=comm,number=sg)+NOU(type=comm,number=sg)
manics	PRN+PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
Eer	CON(type=sub)
gi	PRN
mi	PRN
naerre	ADV(type=-,degree=-)
comet	VRB(mood=finite,tense=pres,number=sg)
nv	ADV(type=-,degree=-)
Want	CON(type=coor)
v	PRN
gelike	NOU(type=comm,number=sg)
en	ADV(type=-,degree=-)
sagic	PRN+VRB(mood=finite,tense=past,number=sg)
nie	ADV(type=-,degree=-)
Dis	PRN
uaret	VRB(mood=finite,tense=pres,number=sg)
mi	PRN
dat	CON(type=sub)
ic	PRN
v	PRN
sie	VRB(mood=finite,tense=pres,number=sg)
Met	ADP
groter	ADJ(degree=-)
ulammen	NOU(type=comm,number=sg)
dos	ADV(type=-,degree=-)
onsteken	VRB(mood=part,tense=past,number=-)
Nv	ADV(type=-,degree=-)
spreket	VRB(mood=finite,tense=pres,number=sg)
och	CON(type=sub)
gi	PRN
moget	VRB(mood=finite,tense=pres,number=sg)
spreken.	VRB(mood=inf,tense=-,number=-)
Doe	ADV(type=-,degree=-)
sprac	VRB(mood=finite,tense=past,number=sg)
degene	PRN+PRN
weder	ADV(type=-,degree=-)
dus	ADV(type=-,degree=-)
Ende	CON(type=coor)
seide	VRB(mood=finite,tense=past,number=sg)
her	NOU(type=comm,number=sg)
jnnocentius	NOU(type=proper,number=-)
Wasic	PRN+VRB(mood=finite,tense=past,number=sg)
genamet	ADJ(degree=-)
hir+teuoren	ADV(type=-,degree=-)+PRN
Te	ADP
rome	NOU(type=proper,number=-)
wasic	PRN+VRB(mood=finite,tense=past,number=sg)
paus	NOU(type=comm,number=sg)
gekoren	VRB(mood=part,tense=past,number=-)
Mar	CON(type=coor)
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
uolgedic	PRN+VRB(mood=finite,tense=past,number=sg)
din	PRN
name	NOU(type=comm,number=sg)
Mijn	PRN
leuen	NOU(type=comm,number=sg)
dat	PRN
was	VRB(mood=finite,tense=past,number=sg)
ombequame	ADJ(degree=-)
Den	PRN
coninc	NOU(type=comm,number=sg)
uan	ADP
den	PRN
hogen	ADJ(degree=-)
trone	NOU(type=comm,number=sg)
Daer+omme	ADV(type=-,degree=-)+PRN
ontfaic	PRN+VRB(mood=finite,tense=pres,number=sg)
nu	ADV(type=-,degree=-)
telone	ADP+NOU(type=comm,number=sg)
Die	PRN
grote	ADJ(degree=-)
pine	NOU(type=comm,number=sg)
die	PRN
ic	PRN
drage	VRB(mood=finite,tense=pres,number=sg)
Ende	CON(type=coor)
toten	ADP+PRN
ijoncsten	ADJ(degree=-)
doemesdage	NOU(type=comm,number=sg)
Sal	VRB(mood=finite,tense=pres,number=sg)
moten	VRB(mood=inf,tense=-,number=-)
dragen	VRB(mood=inf,tense=-,number=-)
maget	NOU(type=comm,number=sg)
goet	ADJ(degree=-)
Hen+si	ADV(type=-,degree=-)+PRN+VRB(mood=finite,tense=pres,number=sg)
dat	CON(type=sub)
gi	PRN
mi	PRN
helpe	NOU(type=comm,number=sg)
doet	VRB(mood=finite,tense=pres,number=sg)
Want	CON(type=coor)
ouer+waer	ADV(type=-,degree=-)
hebbic	PRN+VRB(mood=finite,tense=pres,number=sg)
uernomen	VRB(mood=part,tense=past,number=-)
Dat	CON(type=sub)
gi	PRN
mi	PRN
moget	VRB(mood=finite,tense=pres,number=sg)
harde	ADV(type=-,degree=-)
uromen	VRB(mood=inf,tense=-,number=-)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
uerweruen	VRB(mood=inf,tense=-,number=-)
mi	PRN
met	ADP
beden	NOU(type=comm,number=pl)
De	PRN
meltheit	NOU(type=comm,number=sg)
uan	ADP
der	PRN
gods	NOU(type=comm,number=sg)
geneden	NOU(type=comm,number=sg)
Op+dat	CON(type=sub)
gi	PRN
willet	VRB(mood=finite,tense=pres,number=sg)
onderstaen	VRB(mood=inf,tense=-,number=-)
Vor	ADP
mi	PRN
te	ADP
biddene.	VRB(mood=inf,tense=-,number=-)
ende	CON(type=coor)
ontfaen	VRB(mood=inf,tense=-,number=-)
Jn	ADP
v	PRN
gedinge	NOU(type=comm,number=sg)
maget	NOU(type=comm,number=sg)
wert	ADJ(degree=-)
Want	CON(type=coor)
alles	PRN
dis	PRN
dat	PRN
gi	PRN
begert	VRB(mood=finite,tense=pres,number=sg)
Dis	PRN
es	VRB(mood=finite,tense=pres,number=sg)
v	PRN
onstech	ADJ(degree=-)
ende	CON(type=coor)
hout	ADJ(degree=-)
Die	PRN
got	NOU(type=comm,number=sg)
die	PRN
alles	PRN
heft	VRB(mood=finite,tense=pres,number=sg)
gewout	VRB(mood=part,tense=past,number=-)
Nv	ADV(type=-,degree=-)
biddet	VRB(mood=finite,tense=pres,number=sg)
dan	ADV(type=-,degree=-)
wel+sute	ADJ(degree=-)
maget	NOU(type=comm,number=sg)
Hem	PRN
din	PRN
gi	PRN
also	ADV(type=-,degree=-)
wel	ADV(type=-,degree=-)
behaget	VRB(mood=finite,tense=pres,number=sg)
Dat	CON(type=sub)
hem	PRN
ontfarme	VRB(mood=finite,tense=pres,number=sg)
mire	PRN
noet	NOU(type=comm,number=sg)
Die	PRN
ic	PRN
nu	ADV(type=-,degree=-)
doege	VRB(mood=finite,tense=pres,number=sg)
uele	ADV(type=-,degree=-)
groet	ADJ(degree=-)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
sal	VRB(mood=finite,tense=pres,number=sg)
dragen	VRB(mood=inf,tense=-,number=-)
harde	ADV(type=-,degree=-)
suar	ADV(type=-,degree=-)
Hir+na	ADV(type=-,degree=-)+PRN
noch	ADV(type=-,degree=-)
harde	ADV(type=-,degree=-)
menech	PRN
ijar	NOU(type=comm,number=pl)
Acharme	INT
sprac	VRB(mood=finite,tense=past,number=sg)
met	ADP
drouen	ADJ(degree=-)
moede	NOU(type=comm,number=sg)
Doe	ADV(type=-,degree=-)
weder	ADV(type=-,degree=-)
dus.	ADV(type=-,degree=-)
lutgart	NOU(type=proper,number=-)
die	PRN
goede	ADJ(degree=-)
Wel+sute	ADJ(degree=-)
here	NOU(type=comm,number=sg)
en	ADV(type=-,degree=-)
sidi	PRN+VRB(mood=finite,tense=pres,number=sg)
dan	ADV(type=-,degree=-)
Daer	ADV(type=-,degree=-)+PRN
al	ADV(type=-,degree=-)
die	PRN
werelt	NOU(type=comm,number=sg)
houefdede	VRB(mood=finite,tense=past,number=sg)
an	ADV(type=-,degree=-)+PRN
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
van	ADP
gode	NOU(type=comm,number=sg)
wart	VRB(mood=finite,tense=past,number=sg)
uerheuen	VRB(mood=part,tense=past,number=-)
So	ADV(type=-,degree=-)
hoge	ADJ(degree=-)
dat	CON(type=sub)
v	PRN
was	VRB(mood=finite,tense=past,number=sg)
gegeuen	VRB(mood=part,tense=past,number=-)
Te	ADP
rekkene	VRB(mood=inf,tense=-,number=-)
al	ADV(type=-,degree=-)
die	PRN
werelt	NOU(type=comm,number=sg)
wijt	ADJ(degree=-)
Hoe	ADV(type=-,degree=-)
quam	VRB(mood=finite,tense=past,number=sg)
dat	CON(type=sub)
gi	PRN
dan	ADV(type=-,degree=-)
vwen	PRN
tijt	NOU(type=comm,number=sg)
Bestadet	VRB(mood=finite,tense=past,number=sg)
so	ADV(type=-,degree=-)
kaitiuechlike	ADV(type=-,degree=-)
Dat	CON(type=sub)
gi	PRN
din	PRN
suten	ADJ(degree=-)
hemelrike	NOU(type=comm,number=sg)
En	ADV(type=-,degree=-)
moget	VRB(mood=finite,tense=pres,number=sg)
noch	ADV(type=-,degree=-)
genaken	VRB(mood=inf,tense=-,number=-)
nit	ADV(type=-,degree=-)
Mar	CON(type=coor)
pine	NOU(type=comm,number=sg)
suar	ADJ(degree=-)
ende	CON(type=coor)
oc	ADV(type=-,degree=-)
uerdrit	NOU(type=comm,number=sg)
Al	ADV(type=-,degree=-)
noch	ADV(type=-,degree=-)
om	ADP
uwe	PRN
sonden	NOU(type=comm,number=pl)
doeget	VRB(mood=finite,tense=pres,number=sg)
Gelijc+dat	CON(type=sub)
gi	PRN
mi	PRN
nv	ADV(type=-,degree=-)
betoeget	VRB(mood=finite,tense=pres,number=sg)
Antwerde	NOU(type=comm,number=sg)
gaf	VRB(mood=finite,tense=past,number=sg)
al	ADV(type=-,degree=-)
sonder	ADP
beide	NOU(type=comm,number=sg)
Die	PRN
sile	NOU(type=comm,number=sg)
weder	ADV(type=-,degree=-)
ende	CON(type=coor)
seide	VRB(mood=finite,tense=past,number=sg)
Terechte	ADV(type=-,degree=-)
vrowe	NOU(type=comm,number=sg)
v	PRN
wondert	VRB(mood=finite,tense=pres,number=sg)
dis	PRN
Dat	CON(type=sub)
ic	PRN
so	ADV(type=-,degree=-)
dul	ADJ(degree=-)
was	VRB(mood=finite,tense=past,number=sg)
ende	CON(type=coor)
ris	ADJ(degree=-)
Dat	CON(type=sub)
ic	PRN
uerdinde	VRB(mood=finite,tense=past,number=sg)
derre	PRN
wraken	NOU(type=comm,number=sg)
Jedoch	CON(type=sub)
drie	NUM(type=car)
sonderlinge	ADJ(degree=-)
saken	NOU(type=comm,number=pl)
Si	PRN
daden	VRB(mood=finite,tense=past,number=pl)
mi	PRN
dat	CON(type=sub)
ic	PRN
ontfa	VRB(mood=finite,tense=pres,number=sg)
Die	PRN
pine	NOU(type=comm,number=sg)
groet	ADJ(degree=-)
daer	ADV(type=-,degree=-)+PRN
ic	PRN
in	ADV(type=-,degree=-)+PRN
sta	VRB(mood=finite,tense=pres,number=sg)
Dat	PRN
sijn	VRB(mood=finite,tense=pres,number=pl)
drie	NUM(type=car)
commerlike	ADJ(degree=-)
sonden	NOU(type=comm,number=pl)
drouen	RES(type=-)
met	RES(type=-)
door	RES(type=-)
hand	RES(type=-)
H	RES(type=-)
bovengeschreven	RES(type=-)
e:	RES(type=-)
droeuen	ADJ(degree=-)
lees	RES(type=-)
houedede	VRB(mood=finite,tense=past,number=sg)
Daer	ADV(type=-,degree=-)+PRN
ic	PRN
was	VRB(mood=finite,tense=past,number=sg)
lange	ADV(type=-,degree=-)
met	ADV(type=-,degree=-)+PRN
gebonden	VRB(mood=part,tense=past,number=-)
Jn	ADP
minen	PRN
liue	NOU(type=comm,number=sg)
maget	NOU(type=comm,number=sg)
reene	ADJ(degree=-)
So	ADV(type=-,degree=-)
groet.	ADJ(degree=-)
dat	CON(type=sub)
igewelke	PRN
allene	ADV(type=-,degree=-)
Der	PRN
hellen	NOU(type=comm,number=sg)
pine	NOU(type=comm,number=sg)
werdech	ADJ(degree=-)
maket	VRB(mood=finite,tense=pres,number=sg)
Die	PRN
siele	NOU(type=comm,number=sg)
daer	ADV(type=-,degree=-)+PRN
si	PRN
toe	ADV(type=-,degree=-)+PRN
geraket	VRB(mood=finite,tense=pres,number=sg)
Daer	ADV(type=-,degree=-)+PRN
waric	PRN+VRB(mood=finite,tense=past,number=sg)
toe	ADV(type=-,degree=-)+PRN
gewiset	VRB(mood=part,tense=past,number=-)
oc	ADV(type=-,degree=-)
Dis	ADV(type=-,degree=-)
ikker+toe	ADV(type=-,degree=-)+PRN+PRN
mijn	PRN
herte	NOU(type=comm,number=sg)
ontploc	VRB(mood=finite,tense=past,number=sg)
Ende	CON(type=coor)
in	ADP
genugten	NOU(type=comm,number=pl)
die	PRN
ontfinc	VRB(mood=finite,tense=past,number=sg)
Mar	CON(type=coor)
eene	PRN
uromelike	ADJ(degree=-)
dinc	NOU(type=comm,number=sg)
Geschilde	VRB(mood=finite,tense=past,number=sg)
mi	PRN
in	ADP
minen	PRN
dagen	NOU(type=comm,number=pl)
Dis	PRN
ic	PRN
en	ADV(type=-,degree=-)
darf	VRB(mood=finite,tense=pres,number=sg)
mi	PRN
nit	ADV(type=-,degree=-)
beclagen	VRB(mood=inf,tense=-,number=-)
Al+noch	ADV(type=-,degree=-)
dat	CON(type=sub)
het	PRN
mi	PRN
es	VRB(mood=finite,tense=pres,number=sg)
geschit	VRB(mood=part,tense=past,number=-)
Want	CON(type=coor)
na+dat	CON(type=sub)
mi	PRN
mijn	PRN
herte	NOU(type=comm,number=sg)
rit	VRB(mood=finite,tense=past,number=sg)
So	ADV(type=-,degree=-)
dedic	PRN+VRB(mood=finite,tense=past,number=sg)
enen	PRN
closter	NOU(type=comm,number=sg)
stichten	VRB(mood=inf,tense=-,number=-)
Daer	ADV(type=-,degree=-)+PRN
ic	PRN
in	ADV(type=-,degree=-)+PRN
gaf	VRB(mood=finite,tense=past,number=sg)
uan	ADP
minen	PRN
ghichten	NOU(type=comm,number=pl)
Jn	ADP
onser	PRN
suter	ADJ(degree=-)
vrowen	NOU(type=comm,number=sg)
eere	NOU(type=comm,number=sg)
Die	PRN
ic	PRN
uan	ADP
herten	NOU(type=comm,number=sg)
minde	VRB(mood=finite,tense=past,number=sg)
sere	ADV(type=-,degree=-)
Dat	CON(type=sub)
stont	VRB(mood=finite,tense=past,number=sg)
mi	PRN
harde	ADV(type=-,degree=-)
wel	ADV(type=-,degree=-)
in	ADP
staden	NOU(type=comm,number=sg)
Want	CON(type=sub)
si	PRN
die	PRN
uol	ADJ(degree=-)
es	VRB(mood=finite,tense=pres,number=sg)
uan	ADP
genaden	NOU(type=comm,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
te	ADP
helpene	VRB(mood=inf,tense=-,number=-)
es	VRB(mood=finite,tense=pres,number=sg)
gereet	ADJ(degree=-)
Altoes	ADV(type=-,degree=-)
hen	PRN
allen	PRN
die	PRN
si	PRN
weet	VRB(mood=finite,tense=pres,number=sg)
Dat	CON(type=sub)
hare	PRN
dienen	VRB(mood=inf,tense=-,number=-)
sonder	ADP
wanc	NOU(type=comm,number=sg)
Si	PRN
mi	PRN
uerwarf.	VRB(mood=finite,tense=past,number=sg)
dis	PRN
hebbe	VRB(mood=finite,tense=pres,number=sg)
danc	NOU(type=comm,number=sg)
Eer	CON(type=sub)
ic	PRN
uolquam	VRB(mood=finite,tense=past,number=sg)
te	ADP
minen	PRN
inde	NOU(type=comm,number=sg)
Dat	CON(type=sub)
ic	PRN
mi	PRN
seluen	PRN
wel	ADV(type=-,degree=-)
bekinde	VRB(mood=finite,tense=past,number=sg)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
die	PRN
sonden	NOU(type=comm,number=pl)
alle	PRN
drie	NUM(type=car)
Versach.	VRB(mood=finite,tense=past,number=sg)
daer	ADV(type=-,degree=-)+PRN
ic	PRN
teuoren	ADV(type=-,degree=-)
nie	ADV(type=-,degree=-)
Te	ADP
bichten	NOU(type=comm,number=sg)
af	ADV(type=-,degree=-)+PRN
en	ADV(type=-,degree=-)
was	VRB(mood=finite,tense=past,number=sg)
gegaen	VRB(mood=part,tense=past,number=-)
Oc	ADV(type=-,degree=-)
heuet	VRB(mood=finite,tense=pres,number=sg)
si	PRN
mi	PRN
doen	ADV(type=-,degree=-)
ontfaen	VRB(mood=part,tense=past,number=-)
Daer+af	ADV(type=-,degree=-)+PRN
uan	ADP
rowen	NOU(type=comm,number=sg)
ene	PRN
smerte	NOU(type=comm,number=sg)
Eer	CON(type=sub)
ic	PRN
uerschit.	VRB(mood=finite,tense=past,number=sg)
die	PRN
mi	PRN
dat	CON(type=sub)
herte	NOU(type=comm,number=sg)
Dorginc	VRB(mood=finite,tense=past,number=sg)
met	ADP
eenen	PRN
groten	ADJ(degree=-)
sere	NOU(type=comm,number=sg)
Bi	ADP
der	PRN
gewelt	NOU(type=comm,number=sg)
uan	ADP
onsen	PRN
here	NOU(type=comm,number=sg)
Dat	CON(type=sub)
ikker+af	ADV(type=-,degree=-)+PRN+PRN
te	ADP
bichten	NOU(type=comm,number=sg)
ginc	VRB(mood=finite,tense=past,number=sg)
Also+warbi+dat	CON(type=sub)
ic	PRN
ontfinc	VRB(mood=finite,tense=past,number=sg)
De	PRN
gracie	NOU(type=comm,number=sg)
uan	ADP
der	PRN
godes	NOU(type=comm,number=sg)
hulden	NOU(type=comm,number=sg)
Die	PRN
ic	PRN
met	ADP
minen	PRN
groten	ADJ(degree=-)
schulden	NOU(type=comm,number=sg)
Alsic	CON(type=sub)+PRN
v	PRN
seide.	VRB(mood=finite,tense=past,number=sg)
aldaer+teuoren	ADV(type=-,degree=-)+PRN
Wel	ADV(type=-,degree=-)
langen	ADJ(degree=-)
tijt	NOU(type=comm,number=sg)
hadde	VRB(mood=finite,tense=past,number=sg)
al	ADV(type=-,degree=-)
uerloren	VRB(mood=part,tense=past,number=-)
Aldos	ADV(type=-,degree=-)
so	ADV(type=-,degree=-)
benic	PRN+VRB(mood=finite,tense=pres,number=sg)
urowe	NOU(type=comm,number=sg)
ontfaren	VRB(mood=inf,tense=-,number=-)
Den	PRN
genen	PRN
die	PRN
daer	ADV(type=-,degree=-)
comen	VRB(mood=part,tense=past,number=-)
waren	VRB(mood=finite,tense=past,number=pl)
Om	ADP
mi	PRN
te	ADP
trekkene	VRB(mood=inf,tense=-,number=-)
altehant	ADV(type=-,degree=-)
Ter	ADP+PRN
hellen	NOU(type=comm,number=sg)
wert.	ADP
din	PRN
mi	PRN
ontfant	VRB(mood=finite,tense=past,number=sg)
Die	PRN
godes	NOU(type=comm,number=sg)
moeder	NOU(type=comm,number=sg)
onse	PRN
urowe	NOU(type=comm,number=sg)
Oc	ADV(type=-,degree=-)
heuet	VRB(mood=finite,tense=pres,number=sg)
si	PRN
wel	ADV(type=-,degree=-)
grote	ADJ(degree=-)
trowe	NOU(type=comm,number=sg)
Alsent	ADV(type=-,degree=-)
getoget	VRB(mood=part,tense=past,number=-)
ane	ADV(type=-,degree=-)
mi	PRN
Jc	PRN
mach	VRB(mood=finite,tense=pres,number=sg)
v	PRN
seggen	VRB(mood=inf,tense=-,number=-)
maget	NOU(type=comm,number=sg)
uri	ADJ(degree=-)
Jn	ADP
wat	ADV(type=-,degree=-)
maniren	NOU(type=comm,number=sg)
ende	CON(type=coor)
hoe	ADV(type=-,degree=-)
Jn+din+dat	CON(type=sub)
si	PRN
mi	PRN
heuet	VRB(mood=finite,tense=pres,number=sg)
toe+Verworuen.	VRB(mood=part,tense=past,number=-)
dat	CON(type=sub)
ic	PRN
mochte	VRB(mood=finite,tense=past,number=sg)
nv	ADV(type=-,degree=-)
Hir	ADV(type=-,degree=-)
selue	PRN
comen	VRB(mood=inf,tense=-,number=-)
togen	VRB(mood=inf,tense=-,number=-)
v	PRN
Din	PRN
suaren	ADJ(degree=-)
commer	NOU(type=comm,number=sg)
ende	CON(type=coor)
groet	ADJ(degree=-)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
die	PRN
ijammerlike	ADJ(degree=-)
noet	NOU(type=comm,number=sg)
Die	PRN
mi	PRN
uerwegt	VRB(mood=finite,tense=pres,number=sg)
in	ADP
allen	PRN
sinnen	NOU(type=comm,number=pl)
V.	PRN
mochte	VRB(mood=finite,tense=past,number=sg)
urowe	NOU(type=comm,number=sg)
doen	VRB(mood=inf,tense=-,number=-)
bekinnen	VRB(mood=inf,tense=-,number=-)
Ende	CON(type=coor)
oc	ADV(type=-,degree=-)
v	PRN
seluen	PRN
bidden	VRB(mood=inf,tense=-,number=-)
dis	PRN
Dat	CON(type=sub)
gi	PRN
die	PRN
hebbet	VRB(mood=finite,tense=pres,number=sg)
uwen	PRN
kis	NOU(type=comm,number=sg)
Van	ADP
allen	PRN
din	PRN
dat	CON(type=sub)
gi	PRN
begert	VRB(mood=finite,tense=pres,number=sg)
Magt	NOU(type=comm,number=sg)
utuerkoren	ADJ(degree=-)
ende	CON(type=coor)
wert	ADJ(degree=-)
Te	ADP
gode	NOU(type=comm,number=sg)
badet	VRB(mood=finite,tense=past,number=sg)
dor	ADP
genade	NOU(type=comm,number=sg)
Dat	CON(type=sub)
hi	PRN
it	PRN
loessenessen	NOU(type=comm,number=sg)
dade	VRB(mood=finite,tense=past,number=sg)
Mi	PRN
armen	NOU(type=comm,number=sg)
ende	CON(type=coor)
mi	PRN
kaitiuen	NOU(type=comm,number=sg)
Die	PRN
sal	VRB(mood=finite,tense=pres,number=sg)
in	ADP
pinen	NOU(type=comm,number=sg)
moten	VRB(mood=inf,tense=-,number=-)
bliuen	VRB(mood=inf,tense=-,number=-)
Tote	ADP
op	ADP
den	PRN
ijoncsten	ADJ(degree=-)
doemesdach	NOU(type=comm,number=sg)
Dis	PRN
mi	PRN
failliren	VRB(mood=inf,tense=-,number=-)
nit	ADV(type=-,degree=-)
ne	ADV(type=-,degree=-)
mach	VRB(mood=finite,tense=pres,number=sg)
Hen+si	ADV(type=-,degree=-)+PRN+VRB(mood=finite,tense=pres,number=sg)
dat	CON(type=sub)
gi	PRN
mi	PRN
wilt	VRB(mood=finite,tense=pres,number=sg)
beijagen	VRB(mood=inf,tense=-,number=-)
En	PRN
deel	NOU(type=comm,number=sg)
afflaets	NOU(type=comm,number=sg)
van	ADP
mire	PRN
plagen	NOU(type=comm,number=pl)
Dis	PRN
manic	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
bi	ADP
selker	PRN
trowen	NOU(type=comm,number=sg)
Die	PRN
gi	PRN
sijt	VRB(mood=finite,tense=pres,number=sg)
schuldech	ADJ(degree=-)
onser	PRN
urowen	NOU(type=comm,number=sg)
Die	PRN
mi	PRN
hir	ADV(type=-,degree=-)
sendet	VRB(mood=finite,tense=pres,number=sg)
omme	ADP
dat	PRN
Dat	CON(type=sub)
ic	PRN
dis	ADV(type=-,degree=-)
hebben	VRB(mood=inf,tense=-,number=-)
sal	VRB(mood=finite,tense=pres,number=sg)
tebat	ADV(type=-,degree=-)+ADV(type=-,degree=-)
Dat	CON(type=sub)
gi	PRN
die	PRN
sijt	VRB(mood=finite,tense=pres,number=sg)
uan	ADP
machte	NOU(type=comm,number=sg)
rike	NOU(type=comm,number=sg)
Mi	PRN
staet	VRB(mood=finite,tense=pres,number=sg)
in	ADP
staden	NOU(type=comm,number=sg)
uromelike	ADV(type=-,degree=-)
Met	ADP
uwen	PRN
beden.	NOU(type=comm,number=pl)
so+dat	CON(type=sub)
mi	PRN
Die	PRN
pine	NOU(type=comm,number=sg)
suar	ADJ(degree=-)
gecortet	VRB(mood=part,tense=past,number=-)
si	VRB(mood=finite,tense=pres,number=sg)
Die	PRN
ic	PRN
wel	ADV(type=-,degree=-)
lange	ADV(type=-,degree=-)
doegen	VRB(mood=inf,tense=-,number=-)
moet	VRB(mood=finite,tense=pres,number=sg)
Mar	CON(type=coor)
wildi	PRN+VRB(mood=finite,tense=pres,number=sg)
weten	VRB(mood=inf,tense=-,number=-)
maget	NOU(type=comm,number=sg)
goet	ADJ(degree=-)
Welc	PRN
sijn	VRB(mood=finite,tense=pres,number=pl)
die	PRN
sondelike	ADJ(degree=-)
saken	NOU(type=comm,number=pl)
Hort	VRB(mood=finite,tense=pres,number=sg)
hare	ADV(type=-,degree=-)
ic	PRN
salse	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
cundech	ADJ(degree=-)
maken	VRB(mood=inf,tense=-,number=-)
Die	PRN
ic	PRN
ontgelde	VRB(mood=finite,tense=past,number=sg)
nu	ADV(type=-,degree=-)
so	ADV(type=-,degree=-)
suare	ADJ(degree=-)
Doe	ADV(type=-,degree=-)
ginc	VRB(mood=finite,tense=past,number=sg)
hi	PRN
saen	ADV(type=-,degree=-)
betogen	VRB(mood=inf,tense=-,number=-)
hare	PRN
Die	PRN
dri	NUM(type=car)
mesdade	NOU(type=comm,number=pl)
al+ut+ende+vt	ADV(type=-,degree=-)
Die	PRN
sent	ADJ(degree=-)
lutgart	NOU(type=proper,number=-)
die	PRN
godes	NOU(type=comm,number=sg)
brut	NOU(type=comm,number=sg)
Oc	ADV(type=-,degree=-)
oppenbarde	VRB(mood=finite,tense=past,number=sg)
al	ADV(type=-,degree=-)
uten	ADP+PRN
gronde	NOU(type=comm,number=sg)
Din	PRN
goeden	ADJ(degree=-)
man	NOU(type=comm,number=sg)
met	ADP
haren	PRN
monde	NOU(type=comm,number=sg)
Die	PRN
hare	PRN
uite	NOU(type=comm,number=sg)
sent	ADV(type=-,degree=-)
bescreef	VRB(mood=finite,tense=past,number=sg)
Daer	ADV(type=-,degree=-)
in	ADP
teseggene	ADP+VRB(mood=inf,tense=-,number=-)
achter+bleef	VRB(mood=finite,tense=past,number=sg)
Welc	PRN
dat	CON(type=sub)
si	PRN
waren	VRB(mood=finite,tense=past,number=pl)
die	PRN
mesdade	NOU(type=comm,number=pl)
Mar	CON(type=coor)
dat	PRN
was	VRB(mood=finite,tense=past,number=sg)
al	ADV(type=-,degree=-)
gedaen	VRB(mood=part,tense=past,number=-)
met	ADP
rade	NOU(type=comm,number=sg)
Wetti	PRN+VRB(mood=finite,tense=pres,number=sg)
warumme	ADV(type=-,degree=-)
het	PRN
was	VRB(mood=finite,tense=past,number=sg)
gedaen	VRB(mood=part,tense=past,number=-)
Wildi	PRN+VRB(mood=finite,tense=pres,number=sg)
ic	PRN
saelt	PRN+VRB(mood=finite,tense=pres,number=sg)
v	PRN
doen	VRB(mood=inf,tense=-,number=-)
uerstaen	VRB(mood=inf,tense=-,number=-)
Die	PRN
goede	ADJ(degree=-)
man	NOU(type=comm,number=sg)
diet	PRN+PRN
achter+lit	VRB(mood=finite,tense=past,number=sg)
Te	ADP
seggene.	VRB(mood=inf,tense=-,number=-)
hine	ADV(type=-,degree=-)+PRN
wilde	VRB(mood=finite,tense=past,number=sg)
nit	ADV(type=-,degree=-)
Van	ADP
also	ADV(type=-,degree=-)
sondeliken	ADJ(degree=-)
saken	NOU(type=comm,number=pl)
Din	PRN
paus	NOU(type=comm,number=sg)
te	ADP
nimaren	NOU(type=comm,number=sg)
maken	VRB(mood=inf,tense=-,number=-)
Dar+omme	ADV(type=-,degree=-)+PRN
latic	PRN+VRB(mood=finite,tense=pres,number=sg)
achter	VRB(mood=finite,tense=pres,number=sg)
nu	ADV(type=-,degree=-)
Die	PRN
saken	NOU(type=comm,number=pl)
oc	ADV(type=-,degree=-)
te	ADP
seggene	VRB(mood=inf,tense=-,number=-)
v	PRN
Want	CON(type=coor)
dat	PRN
men	PRN
uan	ADP
din	PRN
paus	NOU(type=comm,number=sg)
seide	VRB(mood=finite,tense=past,number=sg)
Warbi+dat	CON(type=sub)
sine	PRN
werdechheide	NOU(type=comm,number=sg)
Besmettet	VRB(mood=part,tense=past,number=-)
worde.	VRB(mood=finite,tense=pres,number=sg)
en	ADV(type=-,degree=-)
uugde	VRB(mood=finite,tense=past,number=sg)
nit	ADV(type=-,degree=-)
Dar+omme	ADV(type=-,degree=-)+PRN
dat	PRN
al	ADV(type=-,degree=-)
achter+lit	VRB(mood=finite,tense=past,number=sg)
Die	PRN
vroede	ADJ(degree=-)
man	NOU(type=comm,number=sg)
die	PRN
iacobijn	NOU(type=comm,number=sg)
Die	PRN
tirst	NUM(type=ord)+PRN
volmakede	VRB(mood=finite,tense=past,number=sg)
in	ADP
latijn	NOU(type=comm,number=sg)
Der	PRN
